// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// AmazonListsColumns holds the columns for the "amazon_lists" table.
	AmazonListsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
	}
	// AmazonListsTable holds the schema information for the "amazon_lists" table.
	AmazonListsTable = &schema.Table{
		Name:       "amazon_lists",
		Columns:    AmazonListsColumns,
		PrimaryKey: []*schema.Column{AmazonListsColumns[0]},
	}
	// AmazonOrdersColumns holds the columns for the "amazon_orders" table.
	AmazonOrdersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "category", Type: field.TypeString},
		{Name: "brand", Type: field.TypeString},
		{Name: "seller", Type: field.TypeString},
		{Name: "address1", Type: field.TypeString},
		{Name: "address2", Type: field.TypeString},
		{Name: "city", Type: field.TypeString},
		{Name: "state", Type: field.TypeString},
		{Name: "zip", Type: field.TypeString},
		{Name: "price", Type: field.TypeFloat32},
		{Name: "tax", Type: field.TypeFloat32},
		{Name: "refund", Type: field.TypeBool},
		{Name: "ordered_at", Type: field.TypeTime},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "amazon_list_amazon_orders", Type: field.TypeInt, Nullable: true},
	}
	// AmazonOrdersTable holds the schema information for the "amazon_orders" table.
	AmazonOrdersTable = &schema.Table{
		Name:       "amazon_orders",
		Columns:    AmazonOrdersColumns,
		PrimaryKey: []*schema.Column{AmazonOrdersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "amazon_orders_amazon_lists_amazon_orders",
				Columns:    []*schema.Column{AmazonOrdersColumns[15]},
				RefColumns: []*schema.Column{AmazonListsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// AmazonSharesColumns holds the columns for the "amazon_shares" table.
	AmazonSharesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "can_edit", Type: field.TypeBool, Default: false},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "amazon_list_amazon_shares", Type: field.TypeInt, Nullable: true},
		{Name: "user_amazon_shares", Type: field.TypeInt, Nullable: true},
	}
	// AmazonSharesTable holds the schema information for the "amazon_shares" table.
	AmazonSharesTable = &schema.Table{
		Name:       "amazon_shares",
		Columns:    AmazonSharesColumns,
		PrimaryKey: []*schema.Column{AmazonSharesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "amazon_shares_amazon_lists_amazon_shares",
				Columns:    []*schema.Column{AmazonSharesColumns[3]},
				RefColumns: []*schema.Column{AmazonListsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "amazon_shares_users_amazon_shares",
				Columns:    []*schema.Column{AmazonSharesColumns[4]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// DrinksColumns holds the columns for the "drinks" table.
	DrinksColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "type", Type: field.TypeEnum, Enums: []string{"unknown", "light_beer", "craft_beer", "wine", "liquor", "highball", "cocktail"}, Default: "unknown"},
		{Name: "abv", Type: field.TypeInt8, Default: 0},
		{Name: "ounces", Type: field.TypeInt8, Default: 0},
		{Name: "year", Type: field.TypeInt},
		{Name: "month", Type: field.TypeInt},
		{Name: "day", Type: field.TypeInt},
		{Name: "note", Type: field.TypeString, Default: ""},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "user_drinks", Type: field.TypeInt, Nullable: true},
	}
	// DrinksTable holds the schema information for the "drinks" table.
	DrinksTable = &schema.Table{
		Name:       "drinks",
		Columns:    DrinksColumns,
		PrimaryKey: []*schema.Column{DrinksColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "drinks_users_drinks",
				Columns:    []*schema.Column{DrinksColumns[9]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// GroceryListsColumns holds the columns for the "grocery_lists" table.
	GroceryListsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString, Default: "My List"},
		{Name: "note", Type: field.TypeString, Default: ""},
		{Name: "archived", Type: field.TypeBool, Default: false},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "user_grocery_lists", Type: field.TypeInt, Nullable: true},
	}
	// GroceryListsTable holds the schema information for the "grocery_lists" table.
	GroceryListsTable = &schema.Table{
		Name:       "grocery_lists",
		Columns:    GroceryListsColumns,
		PrimaryKey: []*schema.Column{GroceryListsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "grocery_lists_users_grocery_lists",
				Columns:    []*schema.Column{GroceryListsColumns[5]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// GroceryListItemsColumns holds the columns for the "grocery_list_items" table.
	GroceryListItemsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "quantity", Type: field.TypeInt, Default: 0},
		{Name: "note", Type: field.TypeString, Default: ""},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "grocery_list_grocery_list_items", Type: field.TypeInt, Nullable: true},
	}
	// GroceryListItemsTable holds the schema information for the "grocery_list_items" table.
	GroceryListItemsTable = &schema.Table{
		Name:       "grocery_list_items",
		Columns:    GroceryListItemsColumns,
		PrimaryKey: []*schema.Column{GroceryListItemsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "grocery_list_items_grocery_lists_grocery_list_items",
				Columns:    []*schema.Column{GroceryListItemsColumns[5]},
				RefColumns: []*schema.Column{GroceryListsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// GroceryListSharesColumns holds the columns for the "grocery_list_shares" table.
	GroceryListSharesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "can_edit", Type: field.TypeBool, Default: false},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "grocery_list_grocery_list_shares", Type: field.TypeInt, Nullable: true},
		{Name: "user_grocery_list_shares", Type: field.TypeInt, Nullable: true},
	}
	// GroceryListSharesTable holds the schema information for the "grocery_list_shares" table.
	GroceryListSharesTable = &schema.Table{
		Name:       "grocery_list_shares",
		Columns:    GroceryListSharesColumns,
		PrimaryKey: []*schema.Column{GroceryListSharesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "grocery_list_shares_grocery_lists_grocery_list_shares",
				Columns:    []*schema.Column{GroceryListSharesColumns[3]},
				RefColumns: []*schema.Column{GroceryListsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "grocery_list_shares_users_grocery_list_shares",
				Columns:    []*schema.Column{GroceryListSharesColumns[4]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// MoviesColumns holds the columns for the "movies" table.
	MoviesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "note", Type: field.TypeString, Default: ""},
		{Name: "watched", Type: field.TypeBool, Default: false},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "movie_list_movies", Type: field.TypeInt, Nullable: true},
	}
	// MoviesTable holds the schema information for the "movies" table.
	MoviesTable = &schema.Table{
		Name:       "movies",
		Columns:    MoviesColumns,
		PrimaryKey: []*schema.Column{MoviesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "movies_movie_lists_movies",
				Columns:    []*schema.Column{MoviesColumns[5]},
				RefColumns: []*schema.Column{MovieListsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// MovieListsColumns holds the columns for the "movie_lists" table.
	MovieListsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString, Default: "My List"},
		{Name: "note", Type: field.TypeString, Default: ""},
		{Name: "show_watched", Type: field.TypeBool, Default: false},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "user_movie_lists", Type: field.TypeInt, Nullable: true},
	}
	// MovieListsTable holds the schema information for the "movie_lists" table.
	MovieListsTable = &schema.Table{
		Name:       "movie_lists",
		Columns:    MovieListsColumns,
		PrimaryKey: []*schema.Column{MovieListsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "movie_lists_users_movie_lists",
				Columns:    []*schema.Column{MovieListsColumns[5]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// MovieListSharesColumns holds the columns for the "movie_list_shares" table.
	MovieListSharesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "can_edit", Type: field.TypeBool, Default: false},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "movie_list_movie_list_shares", Type: field.TypeInt, Nullable: true},
		{Name: "user_movie_list_shares", Type: field.TypeInt, Nullable: true},
	}
	// MovieListSharesTable holds the schema information for the "movie_list_shares" table.
	MovieListSharesTable = &schema.Table{
		Name:       "movie_list_shares",
		Columns:    MovieListSharesColumns,
		PrimaryKey: []*schema.Column{MovieListSharesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "movie_list_shares_movie_lists_movie_list_shares",
				Columns:    []*schema.Column{MovieListSharesColumns[3]},
				RefColumns: []*schema.Column{MovieListsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "movie_list_shares_users_movie_list_shares",
				Columns:    []*schema.Column{MovieListSharesColumns[4]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "display_name", Type: field.TypeString, Unique: true},
		{Name: "name_changes", Type: field.TypeInt8, Default: 0},
		{Name: "email", Type: field.TypeString, Unique: true},
		{Name: "verified", Type: field.TypeBool, Default: false},
		{Name: "locked", Type: field.TypeBool, Default: false},
		{Name: "last_login", Type: field.TypeTime},
		{Name: "created_at", Type: field.TypeTime},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// UserAmazonListsColumns holds the columns for the "user_amazon_lists" table.
	UserAmazonListsColumns = []*schema.Column{
		{Name: "user_id", Type: field.TypeInt},
		{Name: "amazon_list_id", Type: field.TypeInt},
	}
	// UserAmazonListsTable holds the schema information for the "user_amazon_lists" table.
	UserAmazonListsTable = &schema.Table{
		Name:       "user_amazon_lists",
		Columns:    UserAmazonListsColumns,
		PrimaryKey: []*schema.Column{UserAmazonListsColumns[0], UserAmazonListsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "user_amazon_lists_user_id",
				Columns:    []*schema.Column{UserAmazonListsColumns[0]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "user_amazon_lists_amazon_list_id",
				Columns:    []*schema.Column{UserAmazonListsColumns[1]},
				RefColumns: []*schema.Column{AmazonListsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AmazonListsTable,
		AmazonOrdersTable,
		AmazonSharesTable,
		DrinksTable,
		GroceryListsTable,
		GroceryListItemsTable,
		GroceryListSharesTable,
		MoviesTable,
		MovieListsTable,
		MovieListSharesTable,
		UsersTable,
		UserAmazonListsTable,
	}
)

func init() {
	AmazonOrdersTable.ForeignKeys[0].RefTable = AmazonListsTable
	AmazonSharesTable.ForeignKeys[0].RefTable = AmazonListsTable
	AmazonSharesTable.ForeignKeys[1].RefTable = UsersTable
	DrinksTable.ForeignKeys[0].RefTable = UsersTable
	GroceryListsTable.ForeignKeys[0].RefTable = UsersTable
	GroceryListItemsTable.ForeignKeys[0].RefTable = GroceryListsTable
	GroceryListSharesTable.ForeignKeys[0].RefTable = GroceryListsTable
	GroceryListSharesTable.ForeignKeys[1].RefTable = UsersTable
	MoviesTable.ForeignKeys[0].RefTable = MovieListsTable
	MovieListsTable.ForeignKeys[0].RefTable = UsersTable
	MovieListSharesTable.ForeignKeys[0].RefTable = MovieListsTable
	MovieListSharesTable.ForeignKeys[1].RefTable = UsersTable
	UserAmazonListsTable.ForeignKeys[0].RefTable = UsersTable
	UserAmazonListsTable.ForeignKeys[1].RefTable = AmazonListsTable
}
