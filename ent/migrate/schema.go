// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// AmazonListsColumns holds the columns for the "amazon_lists" table.
	AmazonListsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
	}
	// AmazonListsTable holds the schema information for the "amazon_lists" table.
	AmazonListsTable = &schema.Table{
		Name:       "amazon_lists",
		Columns:    AmazonListsColumns,
		PrimaryKey: []*schema.Column{AmazonListsColumns[0]},
	}
	// AmazonOrdersColumns holds the columns for the "amazon_orders" table.
	AmazonOrdersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "category", Type: field.TypeString},
		{Name: "brand", Type: field.TypeString},
		{Name: "seller", Type: field.TypeString},
		{Name: "address1", Type: field.TypeString},
		{Name: "address2", Type: field.TypeString},
		{Name: "city", Type: field.TypeString},
		{Name: "state", Type: field.TypeString},
		{Name: "zip", Type: field.TypeString},
		{Name: "price", Type: field.TypeFloat32},
		{Name: "tax", Type: field.TypeFloat32},
		{Name: "refund", Type: field.TypeBool},
		{Name: "ordered_at", Type: field.TypeTime},
		{Name: "created_at", Type: field.TypeTime},
	}
	// AmazonOrdersTable holds the schema information for the "amazon_orders" table.
	AmazonOrdersTable = &schema.Table{
		Name:       "amazon_orders",
		Columns:    AmazonOrdersColumns,
		PrimaryKey: []*schema.Column{AmazonOrdersColumns[0]},
	}
	// AmazonSharesColumns holds the columns for the "amazon_shares" table.
	AmazonSharesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "can_edit", Type: field.TypeBool, Default: false},
		{Name: "created_at", Type: field.TypeTime},
	}
	// AmazonSharesTable holds the schema information for the "amazon_shares" table.
	AmazonSharesTable = &schema.Table{
		Name:       "amazon_shares",
		Columns:    AmazonSharesColumns,
		PrimaryKey: []*schema.Column{AmazonSharesColumns[0]},
	}
	// DrinksColumns holds the columns for the "drinks" table.
	DrinksColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "type", Type: field.TypeEnum, Enums: []string{"unknown", "lightbeer", "craftbeer", "wine", "liquor", "highball", "cocktail"}, Default: "unknown"},
		{Name: "abv", Type: field.TypeInt8, Default: 0},
		{Name: "ounces", Type: field.TypeInt8, Default: 0},
		{Name: "year", Type: field.TypeInt},
		{Name: "month", Type: field.TypeInt},
		{Name: "day", Type: field.TypeInt},
		{Name: "note", Type: field.TypeString, Default: ""},
		{Name: "created_at", Type: field.TypeTime},
	}
	// DrinksTable holds the schema information for the "drinks" table.
	DrinksTable = &schema.Table{
		Name:       "drinks",
		Columns:    DrinksColumns,
		PrimaryKey: []*schema.Column{DrinksColumns[0]},
	}
	// GroceryListsColumns holds the columns for the "grocery_lists" table.
	GroceryListsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString, Default: "My List"},
		{Name: "note", Type: field.TypeString, Default: ""},
		{Name: "archived", Type: field.TypeBool, Default: false},
		{Name: "created_at", Type: field.TypeTime},
	}
	// GroceryListsTable holds the schema information for the "grocery_lists" table.
	GroceryListsTable = &schema.Table{
		Name:       "grocery_lists",
		Columns:    GroceryListsColumns,
		PrimaryKey: []*schema.Column{GroceryListsColumns[0]},
	}
	// GroceryListItemsColumns holds the columns for the "grocery_list_items" table.
	GroceryListItemsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "quantity", Type: field.TypeInt, Default: 0},
		{Name: "note", Type: field.TypeString, Default: ""},
		{Name: "created_at", Type: field.TypeTime},
	}
	// GroceryListItemsTable holds the schema information for the "grocery_list_items" table.
	GroceryListItemsTable = &schema.Table{
		Name:       "grocery_list_items",
		Columns:    GroceryListItemsColumns,
		PrimaryKey: []*schema.Column{GroceryListItemsColumns[0]},
	}
	// GroceryListSharesColumns holds the columns for the "grocery_list_shares" table.
	GroceryListSharesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "can_edit", Type: field.TypeBool, Default: false},
		{Name: "created_at", Type: field.TypeTime},
	}
	// GroceryListSharesTable holds the schema information for the "grocery_list_shares" table.
	GroceryListSharesTable = &schema.Table{
		Name:       "grocery_list_shares",
		Columns:    GroceryListSharesColumns,
		PrimaryKey: []*schema.Column{GroceryListSharesColumns[0]},
	}
	// MoviesColumns holds the columns for the "movies" table.
	MoviesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "note", Type: field.TypeString, Default: ""},
		{Name: "watched", Type: field.TypeBool, Default: false},
		{Name: "created_at", Type: field.TypeTime},
	}
	// MoviesTable holds the schema information for the "movies" table.
	MoviesTable = &schema.Table{
		Name:       "movies",
		Columns:    MoviesColumns,
		PrimaryKey: []*schema.Column{MoviesColumns[0]},
	}
	// MovieListsColumns holds the columns for the "movie_lists" table.
	MovieListsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString, Default: "My List"},
		{Name: "note", Type: field.TypeString, Default: ""},
		{Name: "show_watched", Type: field.TypeBool, Default: false},
		{Name: "created_at", Type: field.TypeTime},
	}
	// MovieListsTable holds the schema information for the "movie_lists" table.
	MovieListsTable = &schema.Table{
		Name:       "movie_lists",
		Columns:    MovieListsColumns,
		PrimaryKey: []*schema.Column{MovieListsColumns[0]},
	}
	// MovieListSharesColumns holds the columns for the "movie_list_shares" table.
	MovieListSharesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "can_edit", Type: field.TypeBool, Default: false},
		{Name: "created_at", Type: field.TypeTime},
	}
	// MovieListSharesTable holds the schema information for the "movie_list_shares" table.
	MovieListSharesTable = &schema.Table{
		Name:       "movie_list_shares",
		Columns:    MovieListSharesColumns,
		PrimaryKey: []*schema.Column{MovieListSharesColumns[0]},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "display_name", Type: field.TypeString, Unique: true},
		{Name: "name_changes", Type: field.TypeInt8, Default: 0},
		{Name: "email", Type: field.TypeString, Unique: true},
		{Name: "verified", Type: field.TypeBool, Default: false},
		{Name: "locked", Type: field.TypeBool, Default: false},
		{Name: "created_at", Type: field.TypeTime},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// AmazonListAmazonOrdersColumns holds the columns for the "amazon_list_amazon_orders" table.
	AmazonListAmazonOrdersColumns = []*schema.Column{
		{Name: "amazon_list_id", Type: field.TypeInt},
		{Name: "amazon_order_id", Type: field.TypeInt},
	}
	// AmazonListAmazonOrdersTable holds the schema information for the "amazon_list_amazon_orders" table.
	AmazonListAmazonOrdersTable = &schema.Table{
		Name:       "amazon_list_amazon_orders",
		Columns:    AmazonListAmazonOrdersColumns,
		PrimaryKey: []*schema.Column{AmazonListAmazonOrdersColumns[0], AmazonListAmazonOrdersColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "amazon_list_amazon_orders_amazon_list_id",
				Columns:    []*schema.Column{AmazonListAmazonOrdersColumns[0]},
				RefColumns: []*schema.Column{AmazonListsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "amazon_list_amazon_orders_amazon_order_id",
				Columns:    []*schema.Column{AmazonListAmazonOrdersColumns[1]},
				RefColumns: []*schema.Column{AmazonOrdersColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// AmazonListAmazonSharesColumns holds the columns for the "amazon_list_amazon_shares" table.
	AmazonListAmazonSharesColumns = []*schema.Column{
		{Name: "amazon_list_id", Type: field.TypeInt},
		{Name: "amazon_share_id", Type: field.TypeInt},
	}
	// AmazonListAmazonSharesTable holds the schema information for the "amazon_list_amazon_shares" table.
	AmazonListAmazonSharesTable = &schema.Table{
		Name:       "amazon_list_amazon_shares",
		Columns:    AmazonListAmazonSharesColumns,
		PrimaryKey: []*schema.Column{AmazonListAmazonSharesColumns[0], AmazonListAmazonSharesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "amazon_list_amazon_shares_amazon_list_id",
				Columns:    []*schema.Column{AmazonListAmazonSharesColumns[0]},
				RefColumns: []*schema.Column{AmazonListsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "amazon_list_amazon_shares_amazon_share_id",
				Columns:    []*schema.Column{AmazonListAmazonSharesColumns[1]},
				RefColumns: []*schema.Column{AmazonSharesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// GroceryListGroceryListItemsColumns holds the columns for the "grocery_list_grocery_list_items" table.
	GroceryListGroceryListItemsColumns = []*schema.Column{
		{Name: "grocery_list_id", Type: field.TypeInt},
		{Name: "grocery_list_item_id", Type: field.TypeInt},
	}
	// GroceryListGroceryListItemsTable holds the schema information for the "grocery_list_grocery_list_items" table.
	GroceryListGroceryListItemsTable = &schema.Table{
		Name:       "grocery_list_grocery_list_items",
		Columns:    GroceryListGroceryListItemsColumns,
		PrimaryKey: []*schema.Column{GroceryListGroceryListItemsColumns[0], GroceryListGroceryListItemsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "grocery_list_grocery_list_items_grocery_list_id",
				Columns:    []*schema.Column{GroceryListGroceryListItemsColumns[0]},
				RefColumns: []*schema.Column{GroceryListsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "grocery_list_grocery_list_items_grocery_list_item_id",
				Columns:    []*schema.Column{GroceryListGroceryListItemsColumns[1]},
				RefColumns: []*schema.Column{GroceryListItemsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// GroceryListGroceryListSharesColumns holds the columns for the "grocery_list_grocery_list_shares" table.
	GroceryListGroceryListSharesColumns = []*schema.Column{
		{Name: "grocery_list_id", Type: field.TypeInt},
		{Name: "grocery_list_share_id", Type: field.TypeInt},
	}
	// GroceryListGroceryListSharesTable holds the schema information for the "grocery_list_grocery_list_shares" table.
	GroceryListGroceryListSharesTable = &schema.Table{
		Name:       "grocery_list_grocery_list_shares",
		Columns:    GroceryListGroceryListSharesColumns,
		PrimaryKey: []*schema.Column{GroceryListGroceryListSharesColumns[0], GroceryListGroceryListSharesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "grocery_list_grocery_list_shares_grocery_list_id",
				Columns:    []*schema.Column{GroceryListGroceryListSharesColumns[0]},
				RefColumns: []*schema.Column{GroceryListsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "grocery_list_grocery_list_shares_grocery_list_share_id",
				Columns:    []*schema.Column{GroceryListGroceryListSharesColumns[1]},
				RefColumns: []*schema.Column{GroceryListSharesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// MovieListMoviesColumns holds the columns for the "movie_list_movies" table.
	MovieListMoviesColumns = []*schema.Column{
		{Name: "movie_list_id", Type: field.TypeInt},
		{Name: "movie_id", Type: field.TypeInt},
	}
	// MovieListMoviesTable holds the schema information for the "movie_list_movies" table.
	MovieListMoviesTable = &schema.Table{
		Name:       "movie_list_movies",
		Columns:    MovieListMoviesColumns,
		PrimaryKey: []*schema.Column{MovieListMoviesColumns[0], MovieListMoviesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "movie_list_movies_movie_list_id",
				Columns:    []*schema.Column{MovieListMoviesColumns[0]},
				RefColumns: []*schema.Column{MovieListsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "movie_list_movies_movie_id",
				Columns:    []*schema.Column{MovieListMoviesColumns[1]},
				RefColumns: []*schema.Column{MoviesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// MovieListMovieListSharesColumns holds the columns for the "movie_list_movie_list_shares" table.
	MovieListMovieListSharesColumns = []*schema.Column{
		{Name: "movie_list_id", Type: field.TypeInt},
		{Name: "movie_list_share_id", Type: field.TypeInt},
	}
	// MovieListMovieListSharesTable holds the schema information for the "movie_list_movie_list_shares" table.
	MovieListMovieListSharesTable = &schema.Table{
		Name:       "movie_list_movie_list_shares",
		Columns:    MovieListMovieListSharesColumns,
		PrimaryKey: []*schema.Column{MovieListMovieListSharesColumns[0], MovieListMovieListSharesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "movie_list_movie_list_shares_movie_list_id",
				Columns:    []*schema.Column{MovieListMovieListSharesColumns[0]},
				RefColumns: []*schema.Column{MovieListsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "movie_list_movie_list_shares_movie_list_share_id",
				Columns:    []*schema.Column{MovieListMovieListSharesColumns[1]},
				RefColumns: []*schema.Column{MovieListSharesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// UserAmazonSharesColumns holds the columns for the "user_amazon_shares" table.
	UserAmazonSharesColumns = []*schema.Column{
		{Name: "user_id", Type: field.TypeInt},
		{Name: "amazon_share_id", Type: field.TypeInt},
	}
	// UserAmazonSharesTable holds the schema information for the "user_amazon_shares" table.
	UserAmazonSharesTable = &schema.Table{
		Name:       "user_amazon_shares",
		Columns:    UserAmazonSharesColumns,
		PrimaryKey: []*schema.Column{UserAmazonSharesColumns[0], UserAmazonSharesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "user_amazon_shares_user_id",
				Columns:    []*schema.Column{UserAmazonSharesColumns[0]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "user_amazon_shares_amazon_share_id",
				Columns:    []*schema.Column{UserAmazonSharesColumns[1]},
				RefColumns: []*schema.Column{AmazonSharesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// UserAmazonListsColumns holds the columns for the "user_amazon_lists" table.
	UserAmazonListsColumns = []*schema.Column{
		{Name: "user_id", Type: field.TypeInt},
		{Name: "amazon_list_id", Type: field.TypeInt},
	}
	// UserAmazonListsTable holds the schema information for the "user_amazon_lists" table.
	UserAmazonListsTable = &schema.Table{
		Name:       "user_amazon_lists",
		Columns:    UserAmazonListsColumns,
		PrimaryKey: []*schema.Column{UserAmazonListsColumns[0], UserAmazonListsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "user_amazon_lists_user_id",
				Columns:    []*schema.Column{UserAmazonListsColumns[0]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "user_amazon_lists_amazon_list_id",
				Columns:    []*schema.Column{UserAmazonListsColumns[1]},
				RefColumns: []*schema.Column{AmazonListsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// UserDrinksColumns holds the columns for the "user_drinks" table.
	UserDrinksColumns = []*schema.Column{
		{Name: "user_id", Type: field.TypeInt},
		{Name: "drink_id", Type: field.TypeInt},
	}
	// UserDrinksTable holds the schema information for the "user_drinks" table.
	UserDrinksTable = &schema.Table{
		Name:       "user_drinks",
		Columns:    UserDrinksColumns,
		PrimaryKey: []*schema.Column{UserDrinksColumns[0], UserDrinksColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "user_drinks_user_id",
				Columns:    []*schema.Column{UserDrinksColumns[0]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "user_drinks_drink_id",
				Columns:    []*schema.Column{UserDrinksColumns[1]},
				RefColumns: []*schema.Column{DrinksColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// UserGroceryListsColumns holds the columns for the "user_grocery_lists" table.
	UserGroceryListsColumns = []*schema.Column{
		{Name: "user_id", Type: field.TypeInt},
		{Name: "grocery_list_id", Type: field.TypeInt},
	}
	// UserGroceryListsTable holds the schema information for the "user_grocery_lists" table.
	UserGroceryListsTable = &schema.Table{
		Name:       "user_grocery_lists",
		Columns:    UserGroceryListsColumns,
		PrimaryKey: []*schema.Column{UserGroceryListsColumns[0], UserGroceryListsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "user_grocery_lists_user_id",
				Columns:    []*schema.Column{UserGroceryListsColumns[0]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "user_grocery_lists_grocery_list_id",
				Columns:    []*schema.Column{UserGroceryListsColumns[1]},
				RefColumns: []*schema.Column{GroceryListsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// UserGroceryListSharesColumns holds the columns for the "user_grocery_list_shares" table.
	UserGroceryListSharesColumns = []*schema.Column{
		{Name: "user_id", Type: field.TypeInt},
		{Name: "grocery_list_share_id", Type: field.TypeInt},
	}
	// UserGroceryListSharesTable holds the schema information for the "user_grocery_list_shares" table.
	UserGroceryListSharesTable = &schema.Table{
		Name:       "user_grocery_list_shares",
		Columns:    UserGroceryListSharesColumns,
		PrimaryKey: []*schema.Column{UserGroceryListSharesColumns[0], UserGroceryListSharesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "user_grocery_list_shares_user_id",
				Columns:    []*schema.Column{UserGroceryListSharesColumns[0]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "user_grocery_list_shares_grocery_list_share_id",
				Columns:    []*schema.Column{UserGroceryListSharesColumns[1]},
				RefColumns: []*schema.Column{GroceryListSharesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// UserMovieListsColumns holds the columns for the "user_movie_lists" table.
	UserMovieListsColumns = []*schema.Column{
		{Name: "user_id", Type: field.TypeInt},
		{Name: "movie_list_id", Type: field.TypeInt},
	}
	// UserMovieListsTable holds the schema information for the "user_movie_lists" table.
	UserMovieListsTable = &schema.Table{
		Name:       "user_movie_lists",
		Columns:    UserMovieListsColumns,
		PrimaryKey: []*schema.Column{UserMovieListsColumns[0], UserMovieListsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "user_movie_lists_user_id",
				Columns:    []*schema.Column{UserMovieListsColumns[0]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "user_movie_lists_movie_list_id",
				Columns:    []*schema.Column{UserMovieListsColumns[1]},
				RefColumns: []*schema.Column{MovieListsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// UserMovieListSharesColumns holds the columns for the "user_movie_list_shares" table.
	UserMovieListSharesColumns = []*schema.Column{
		{Name: "user_id", Type: field.TypeInt},
		{Name: "movie_list_share_id", Type: field.TypeInt},
	}
	// UserMovieListSharesTable holds the schema information for the "user_movie_list_shares" table.
	UserMovieListSharesTable = &schema.Table{
		Name:       "user_movie_list_shares",
		Columns:    UserMovieListSharesColumns,
		PrimaryKey: []*schema.Column{UserMovieListSharesColumns[0], UserMovieListSharesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "user_movie_list_shares_user_id",
				Columns:    []*schema.Column{UserMovieListSharesColumns[0]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "user_movie_list_shares_movie_list_share_id",
				Columns:    []*schema.Column{UserMovieListSharesColumns[1]},
				RefColumns: []*schema.Column{MovieListSharesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AmazonListsTable,
		AmazonOrdersTable,
		AmazonSharesTable,
		DrinksTable,
		GroceryListsTable,
		GroceryListItemsTable,
		GroceryListSharesTable,
		MoviesTable,
		MovieListsTable,
		MovieListSharesTable,
		UsersTable,
		AmazonListAmazonOrdersTable,
		AmazonListAmazonSharesTable,
		GroceryListGroceryListItemsTable,
		GroceryListGroceryListSharesTable,
		MovieListMoviesTable,
		MovieListMovieListSharesTable,
		UserAmazonSharesTable,
		UserAmazonListsTable,
		UserDrinksTable,
		UserGroceryListsTable,
		UserGroceryListSharesTable,
		UserMovieListsTable,
		UserMovieListSharesTable,
	}
)

func init() {
	AmazonListAmazonOrdersTable.ForeignKeys[0].RefTable = AmazonListsTable
	AmazonListAmazonOrdersTable.ForeignKeys[1].RefTable = AmazonOrdersTable
	AmazonListAmazonSharesTable.ForeignKeys[0].RefTable = AmazonListsTable
	AmazonListAmazonSharesTable.ForeignKeys[1].RefTable = AmazonSharesTable
	GroceryListGroceryListItemsTable.ForeignKeys[0].RefTable = GroceryListsTable
	GroceryListGroceryListItemsTable.ForeignKeys[1].RefTable = GroceryListItemsTable
	GroceryListGroceryListSharesTable.ForeignKeys[0].RefTable = GroceryListsTable
	GroceryListGroceryListSharesTable.ForeignKeys[1].RefTable = GroceryListSharesTable
	MovieListMoviesTable.ForeignKeys[0].RefTable = MovieListsTable
	MovieListMoviesTable.ForeignKeys[1].RefTable = MoviesTable
	MovieListMovieListSharesTable.ForeignKeys[0].RefTable = MovieListsTable
	MovieListMovieListSharesTable.ForeignKeys[1].RefTable = MovieListSharesTable
	UserAmazonSharesTable.ForeignKeys[0].RefTable = UsersTable
	UserAmazonSharesTable.ForeignKeys[1].RefTable = AmazonSharesTable
	UserAmazonListsTable.ForeignKeys[0].RefTable = UsersTable
	UserAmazonListsTable.ForeignKeys[1].RefTable = AmazonListsTable
	UserDrinksTable.ForeignKeys[0].RefTable = UsersTable
	UserDrinksTable.ForeignKeys[1].RefTable = DrinksTable
	UserGroceryListsTable.ForeignKeys[0].RefTable = UsersTable
	UserGroceryListsTable.ForeignKeys[1].RefTable = GroceryListsTable
	UserGroceryListSharesTable.ForeignKeys[0].RefTable = UsersTable
	UserGroceryListSharesTable.ForeignKeys[1].RefTable = GroceryListSharesTable
	UserMovieListsTable.ForeignKeys[0].RefTable = UsersTable
	UserMovieListsTable.ForeignKeys[1].RefTable = MovieListsTable
	UserMovieListSharesTable.ForeignKeys[0].RefTable = UsersTable
	UserMovieListSharesTable.ForeignKeys[1].RefTable = MovieListSharesTable
}
