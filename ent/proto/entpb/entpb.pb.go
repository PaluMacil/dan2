// Code generated by entproto. DO NOT EDIT.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.12.4
// source: entpb/entpb.proto

package entpb

import (
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetAmazonListRequest_View int32

const (
	GetAmazonListRequest_VIEW_UNSPECIFIED GetAmazonListRequest_View = 0
	GetAmazonListRequest_BASIC            GetAmazonListRequest_View = 1
	GetAmazonListRequest_WITH_EDGE_IDS    GetAmazonListRequest_View = 2
)

// Enum value maps for GetAmazonListRequest_View.
var (
	GetAmazonListRequest_View_name = map[int32]string{
		0: "VIEW_UNSPECIFIED",
		1: "BASIC",
		2: "WITH_EDGE_IDS",
	}
	GetAmazonListRequest_View_value = map[string]int32{
		"VIEW_UNSPECIFIED": 0,
		"BASIC":            1,
		"WITH_EDGE_IDS":    2,
	}
)

func (x GetAmazonListRequest_View) Enum() *GetAmazonListRequest_View {
	p := new(GetAmazonListRequest_View)
	*p = x
	return p
}

func (x GetAmazonListRequest_View) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetAmazonListRequest_View) Descriptor() protoreflect.EnumDescriptor {
	return file_entpb_entpb_proto_enumTypes[0].Descriptor()
}

func (GetAmazonListRequest_View) Type() protoreflect.EnumType {
	return &file_entpb_entpb_proto_enumTypes[0]
}

func (x GetAmazonListRequest_View) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetAmazonListRequest_View.Descriptor instead.
func (GetAmazonListRequest_View) EnumDescriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{2, 0}
}

type ListAmazonListRequest_View int32

const (
	ListAmazonListRequest_VIEW_UNSPECIFIED ListAmazonListRequest_View = 0
	ListAmazonListRequest_BASIC            ListAmazonListRequest_View = 1
	ListAmazonListRequest_WITH_EDGE_IDS    ListAmazonListRequest_View = 2
)

// Enum value maps for ListAmazonListRequest_View.
var (
	ListAmazonListRequest_View_name = map[int32]string{
		0: "VIEW_UNSPECIFIED",
		1: "BASIC",
		2: "WITH_EDGE_IDS",
	}
	ListAmazonListRequest_View_value = map[string]int32{
		"VIEW_UNSPECIFIED": 0,
		"BASIC":            1,
		"WITH_EDGE_IDS":    2,
	}
)

func (x ListAmazonListRequest_View) Enum() *ListAmazonListRequest_View {
	p := new(ListAmazonListRequest_View)
	*p = x
	return p
}

func (x ListAmazonListRequest_View) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListAmazonListRequest_View) Descriptor() protoreflect.EnumDescriptor {
	return file_entpb_entpb_proto_enumTypes[1].Descriptor()
}

func (ListAmazonListRequest_View) Type() protoreflect.EnumType {
	return &file_entpb_entpb_proto_enumTypes[1]
}

func (x ListAmazonListRequest_View) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListAmazonListRequest_View.Descriptor instead.
func (ListAmazonListRequest_View) EnumDescriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{5, 0}
}

type GetAmazonOrderRequest_View int32

const (
	GetAmazonOrderRequest_VIEW_UNSPECIFIED GetAmazonOrderRequest_View = 0
	GetAmazonOrderRequest_BASIC            GetAmazonOrderRequest_View = 1
	GetAmazonOrderRequest_WITH_EDGE_IDS    GetAmazonOrderRequest_View = 2
)

// Enum value maps for GetAmazonOrderRequest_View.
var (
	GetAmazonOrderRequest_View_name = map[int32]string{
		0: "VIEW_UNSPECIFIED",
		1: "BASIC",
		2: "WITH_EDGE_IDS",
	}
	GetAmazonOrderRequest_View_value = map[string]int32{
		"VIEW_UNSPECIFIED": 0,
		"BASIC":            1,
		"WITH_EDGE_IDS":    2,
	}
)

func (x GetAmazonOrderRequest_View) Enum() *GetAmazonOrderRequest_View {
	p := new(GetAmazonOrderRequest_View)
	*p = x
	return p
}

func (x GetAmazonOrderRequest_View) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetAmazonOrderRequest_View) Descriptor() protoreflect.EnumDescriptor {
	return file_entpb_entpb_proto_enumTypes[2].Descriptor()
}

func (GetAmazonOrderRequest_View) Type() protoreflect.EnumType {
	return &file_entpb_entpb_proto_enumTypes[2]
}

func (x GetAmazonOrderRequest_View) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetAmazonOrderRequest_View.Descriptor instead.
func (GetAmazonOrderRequest_View) EnumDescriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{11, 0}
}

type ListAmazonOrderRequest_View int32

const (
	ListAmazonOrderRequest_VIEW_UNSPECIFIED ListAmazonOrderRequest_View = 0
	ListAmazonOrderRequest_BASIC            ListAmazonOrderRequest_View = 1
	ListAmazonOrderRequest_WITH_EDGE_IDS    ListAmazonOrderRequest_View = 2
)

// Enum value maps for ListAmazonOrderRequest_View.
var (
	ListAmazonOrderRequest_View_name = map[int32]string{
		0: "VIEW_UNSPECIFIED",
		1: "BASIC",
		2: "WITH_EDGE_IDS",
	}
	ListAmazonOrderRequest_View_value = map[string]int32{
		"VIEW_UNSPECIFIED": 0,
		"BASIC":            1,
		"WITH_EDGE_IDS":    2,
	}
)

func (x ListAmazonOrderRequest_View) Enum() *ListAmazonOrderRequest_View {
	p := new(ListAmazonOrderRequest_View)
	*p = x
	return p
}

func (x ListAmazonOrderRequest_View) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListAmazonOrderRequest_View) Descriptor() protoreflect.EnumDescriptor {
	return file_entpb_entpb_proto_enumTypes[3].Descriptor()
}

func (ListAmazonOrderRequest_View) Type() protoreflect.EnumType {
	return &file_entpb_entpb_proto_enumTypes[3]
}

func (x ListAmazonOrderRequest_View) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListAmazonOrderRequest_View.Descriptor instead.
func (ListAmazonOrderRequest_View) EnumDescriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{14, 0}
}

type GetAmazonShareRequest_View int32

const (
	GetAmazonShareRequest_VIEW_UNSPECIFIED GetAmazonShareRequest_View = 0
	GetAmazonShareRequest_BASIC            GetAmazonShareRequest_View = 1
	GetAmazonShareRequest_WITH_EDGE_IDS    GetAmazonShareRequest_View = 2
)

// Enum value maps for GetAmazonShareRequest_View.
var (
	GetAmazonShareRequest_View_name = map[int32]string{
		0: "VIEW_UNSPECIFIED",
		1: "BASIC",
		2: "WITH_EDGE_IDS",
	}
	GetAmazonShareRequest_View_value = map[string]int32{
		"VIEW_UNSPECIFIED": 0,
		"BASIC":            1,
		"WITH_EDGE_IDS":    2,
	}
)

func (x GetAmazonShareRequest_View) Enum() *GetAmazonShareRequest_View {
	p := new(GetAmazonShareRequest_View)
	*p = x
	return p
}

func (x GetAmazonShareRequest_View) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetAmazonShareRequest_View) Descriptor() protoreflect.EnumDescriptor {
	return file_entpb_entpb_proto_enumTypes[4].Descriptor()
}

func (GetAmazonShareRequest_View) Type() protoreflect.EnumType {
	return &file_entpb_entpb_proto_enumTypes[4]
}

func (x GetAmazonShareRequest_View) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetAmazonShareRequest_View.Descriptor instead.
func (GetAmazonShareRequest_View) EnumDescriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{20, 0}
}

type ListAmazonShareRequest_View int32

const (
	ListAmazonShareRequest_VIEW_UNSPECIFIED ListAmazonShareRequest_View = 0
	ListAmazonShareRequest_BASIC            ListAmazonShareRequest_View = 1
	ListAmazonShareRequest_WITH_EDGE_IDS    ListAmazonShareRequest_View = 2
)

// Enum value maps for ListAmazonShareRequest_View.
var (
	ListAmazonShareRequest_View_name = map[int32]string{
		0: "VIEW_UNSPECIFIED",
		1: "BASIC",
		2: "WITH_EDGE_IDS",
	}
	ListAmazonShareRequest_View_value = map[string]int32{
		"VIEW_UNSPECIFIED": 0,
		"BASIC":            1,
		"WITH_EDGE_IDS":    2,
	}
)

func (x ListAmazonShareRequest_View) Enum() *ListAmazonShareRequest_View {
	p := new(ListAmazonShareRequest_View)
	*p = x
	return p
}

func (x ListAmazonShareRequest_View) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListAmazonShareRequest_View) Descriptor() protoreflect.EnumDescriptor {
	return file_entpb_entpb_proto_enumTypes[5].Descriptor()
}

func (ListAmazonShareRequest_View) Type() protoreflect.EnumType {
	return &file_entpb_entpb_proto_enumTypes[5]
}

func (x ListAmazonShareRequest_View) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListAmazonShareRequest_View.Descriptor instead.
func (ListAmazonShareRequest_View) EnumDescriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{23, 0}
}

type Drink_Type int32

const (
	Drink_TYPE_UNKNOWN    Drink_Type = 0
	Drink_TYPE_LIGHT_BEER Drink_Type = 1
	Drink_TYPE_CRAFT_BEER Drink_Type = 2
	Drink_TYPE_WINE       Drink_Type = 3
	Drink_TYPE_LIQUOR     Drink_Type = 4
	Drink_TYPE_HIGHBALL   Drink_Type = 5
	Drink_TYPE_COCKTAIL   Drink_Type = 6
)

// Enum value maps for Drink_Type.
var (
	Drink_Type_name = map[int32]string{
		0: "TYPE_UNKNOWN",
		1: "TYPE_LIGHT_BEER",
		2: "TYPE_CRAFT_BEER",
		3: "TYPE_WINE",
		4: "TYPE_LIQUOR",
		5: "TYPE_HIGHBALL",
		6: "TYPE_COCKTAIL",
	}
	Drink_Type_value = map[string]int32{
		"TYPE_UNKNOWN":    0,
		"TYPE_LIGHT_BEER": 1,
		"TYPE_CRAFT_BEER": 2,
		"TYPE_WINE":       3,
		"TYPE_LIQUOR":     4,
		"TYPE_HIGHBALL":   5,
		"TYPE_COCKTAIL":   6,
	}
)

func (x Drink_Type) Enum() *Drink_Type {
	p := new(Drink_Type)
	*p = x
	return p
}

func (x Drink_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Drink_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_entpb_entpb_proto_enumTypes[6].Descriptor()
}

func (Drink_Type) Type() protoreflect.EnumType {
	return &file_entpb_entpb_proto_enumTypes[6]
}

func (x Drink_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Drink_Type.Descriptor instead.
func (Drink_Type) EnumDescriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{27, 0}
}

type GetDrinkRequest_View int32

const (
	GetDrinkRequest_VIEW_UNSPECIFIED GetDrinkRequest_View = 0
	GetDrinkRequest_BASIC            GetDrinkRequest_View = 1
	GetDrinkRequest_WITH_EDGE_IDS    GetDrinkRequest_View = 2
)

// Enum value maps for GetDrinkRequest_View.
var (
	GetDrinkRequest_View_name = map[int32]string{
		0: "VIEW_UNSPECIFIED",
		1: "BASIC",
		2: "WITH_EDGE_IDS",
	}
	GetDrinkRequest_View_value = map[string]int32{
		"VIEW_UNSPECIFIED": 0,
		"BASIC":            1,
		"WITH_EDGE_IDS":    2,
	}
)

func (x GetDrinkRequest_View) Enum() *GetDrinkRequest_View {
	p := new(GetDrinkRequest_View)
	*p = x
	return p
}

func (x GetDrinkRequest_View) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetDrinkRequest_View) Descriptor() protoreflect.EnumDescriptor {
	return file_entpb_entpb_proto_enumTypes[7].Descriptor()
}

func (GetDrinkRequest_View) Type() protoreflect.EnumType {
	return &file_entpb_entpb_proto_enumTypes[7]
}

func (x GetDrinkRequest_View) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetDrinkRequest_View.Descriptor instead.
func (GetDrinkRequest_View) EnumDescriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{29, 0}
}

type ListDrinkRequest_View int32

const (
	ListDrinkRequest_VIEW_UNSPECIFIED ListDrinkRequest_View = 0
	ListDrinkRequest_BASIC            ListDrinkRequest_View = 1
	ListDrinkRequest_WITH_EDGE_IDS    ListDrinkRequest_View = 2
)

// Enum value maps for ListDrinkRequest_View.
var (
	ListDrinkRequest_View_name = map[int32]string{
		0: "VIEW_UNSPECIFIED",
		1: "BASIC",
		2: "WITH_EDGE_IDS",
	}
	ListDrinkRequest_View_value = map[string]int32{
		"VIEW_UNSPECIFIED": 0,
		"BASIC":            1,
		"WITH_EDGE_IDS":    2,
	}
)

func (x ListDrinkRequest_View) Enum() *ListDrinkRequest_View {
	p := new(ListDrinkRequest_View)
	*p = x
	return p
}

func (x ListDrinkRequest_View) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListDrinkRequest_View) Descriptor() protoreflect.EnumDescriptor {
	return file_entpb_entpb_proto_enumTypes[8].Descriptor()
}

func (ListDrinkRequest_View) Type() protoreflect.EnumType {
	return &file_entpb_entpb_proto_enumTypes[8]
}

func (x ListDrinkRequest_View) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListDrinkRequest_View.Descriptor instead.
func (ListDrinkRequest_View) EnumDescriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{32, 0}
}

type GetGroceryListRequest_View int32

const (
	GetGroceryListRequest_VIEW_UNSPECIFIED GetGroceryListRequest_View = 0
	GetGroceryListRequest_BASIC            GetGroceryListRequest_View = 1
	GetGroceryListRequest_WITH_EDGE_IDS    GetGroceryListRequest_View = 2
)

// Enum value maps for GetGroceryListRequest_View.
var (
	GetGroceryListRequest_View_name = map[int32]string{
		0: "VIEW_UNSPECIFIED",
		1: "BASIC",
		2: "WITH_EDGE_IDS",
	}
	GetGroceryListRequest_View_value = map[string]int32{
		"VIEW_UNSPECIFIED": 0,
		"BASIC":            1,
		"WITH_EDGE_IDS":    2,
	}
)

func (x GetGroceryListRequest_View) Enum() *GetGroceryListRequest_View {
	p := new(GetGroceryListRequest_View)
	*p = x
	return p
}

func (x GetGroceryListRequest_View) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetGroceryListRequest_View) Descriptor() protoreflect.EnumDescriptor {
	return file_entpb_entpb_proto_enumTypes[9].Descriptor()
}

func (GetGroceryListRequest_View) Type() protoreflect.EnumType {
	return &file_entpb_entpb_proto_enumTypes[9]
}

func (x GetGroceryListRequest_View) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetGroceryListRequest_View.Descriptor instead.
func (GetGroceryListRequest_View) EnumDescriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{38, 0}
}

type ListGroceryListRequest_View int32

const (
	ListGroceryListRequest_VIEW_UNSPECIFIED ListGroceryListRequest_View = 0
	ListGroceryListRequest_BASIC            ListGroceryListRequest_View = 1
	ListGroceryListRequest_WITH_EDGE_IDS    ListGroceryListRequest_View = 2
)

// Enum value maps for ListGroceryListRequest_View.
var (
	ListGroceryListRequest_View_name = map[int32]string{
		0: "VIEW_UNSPECIFIED",
		1: "BASIC",
		2: "WITH_EDGE_IDS",
	}
	ListGroceryListRequest_View_value = map[string]int32{
		"VIEW_UNSPECIFIED": 0,
		"BASIC":            1,
		"WITH_EDGE_IDS":    2,
	}
)

func (x ListGroceryListRequest_View) Enum() *ListGroceryListRequest_View {
	p := new(ListGroceryListRequest_View)
	*p = x
	return p
}

func (x ListGroceryListRequest_View) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListGroceryListRequest_View) Descriptor() protoreflect.EnumDescriptor {
	return file_entpb_entpb_proto_enumTypes[10].Descriptor()
}

func (ListGroceryListRequest_View) Type() protoreflect.EnumType {
	return &file_entpb_entpb_proto_enumTypes[10]
}

func (x ListGroceryListRequest_View) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListGroceryListRequest_View.Descriptor instead.
func (ListGroceryListRequest_View) EnumDescriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{41, 0}
}

type GetGroceryListItemRequest_View int32

const (
	GetGroceryListItemRequest_VIEW_UNSPECIFIED GetGroceryListItemRequest_View = 0
	GetGroceryListItemRequest_BASIC            GetGroceryListItemRequest_View = 1
	GetGroceryListItemRequest_WITH_EDGE_IDS    GetGroceryListItemRequest_View = 2
)

// Enum value maps for GetGroceryListItemRequest_View.
var (
	GetGroceryListItemRequest_View_name = map[int32]string{
		0: "VIEW_UNSPECIFIED",
		1: "BASIC",
		2: "WITH_EDGE_IDS",
	}
	GetGroceryListItemRequest_View_value = map[string]int32{
		"VIEW_UNSPECIFIED": 0,
		"BASIC":            1,
		"WITH_EDGE_IDS":    2,
	}
)

func (x GetGroceryListItemRequest_View) Enum() *GetGroceryListItemRequest_View {
	p := new(GetGroceryListItemRequest_View)
	*p = x
	return p
}

func (x GetGroceryListItemRequest_View) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetGroceryListItemRequest_View) Descriptor() protoreflect.EnumDescriptor {
	return file_entpb_entpb_proto_enumTypes[11].Descriptor()
}

func (GetGroceryListItemRequest_View) Type() protoreflect.EnumType {
	return &file_entpb_entpb_proto_enumTypes[11]
}

func (x GetGroceryListItemRequest_View) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetGroceryListItemRequest_View.Descriptor instead.
func (GetGroceryListItemRequest_View) EnumDescriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{47, 0}
}

type ListGroceryListItemRequest_View int32

const (
	ListGroceryListItemRequest_VIEW_UNSPECIFIED ListGroceryListItemRequest_View = 0
	ListGroceryListItemRequest_BASIC            ListGroceryListItemRequest_View = 1
	ListGroceryListItemRequest_WITH_EDGE_IDS    ListGroceryListItemRequest_View = 2
)

// Enum value maps for ListGroceryListItemRequest_View.
var (
	ListGroceryListItemRequest_View_name = map[int32]string{
		0: "VIEW_UNSPECIFIED",
		1: "BASIC",
		2: "WITH_EDGE_IDS",
	}
	ListGroceryListItemRequest_View_value = map[string]int32{
		"VIEW_UNSPECIFIED": 0,
		"BASIC":            1,
		"WITH_EDGE_IDS":    2,
	}
)

func (x ListGroceryListItemRequest_View) Enum() *ListGroceryListItemRequest_View {
	p := new(ListGroceryListItemRequest_View)
	*p = x
	return p
}

func (x ListGroceryListItemRequest_View) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListGroceryListItemRequest_View) Descriptor() protoreflect.EnumDescriptor {
	return file_entpb_entpb_proto_enumTypes[12].Descriptor()
}

func (ListGroceryListItemRequest_View) Type() protoreflect.EnumType {
	return &file_entpb_entpb_proto_enumTypes[12]
}

func (x ListGroceryListItemRequest_View) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListGroceryListItemRequest_View.Descriptor instead.
func (ListGroceryListItemRequest_View) EnumDescriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{50, 0}
}

type GetGroceryListShareRequest_View int32

const (
	GetGroceryListShareRequest_VIEW_UNSPECIFIED GetGroceryListShareRequest_View = 0
	GetGroceryListShareRequest_BASIC            GetGroceryListShareRequest_View = 1
	GetGroceryListShareRequest_WITH_EDGE_IDS    GetGroceryListShareRequest_View = 2
)

// Enum value maps for GetGroceryListShareRequest_View.
var (
	GetGroceryListShareRequest_View_name = map[int32]string{
		0: "VIEW_UNSPECIFIED",
		1: "BASIC",
		2: "WITH_EDGE_IDS",
	}
	GetGroceryListShareRequest_View_value = map[string]int32{
		"VIEW_UNSPECIFIED": 0,
		"BASIC":            1,
		"WITH_EDGE_IDS":    2,
	}
)

func (x GetGroceryListShareRequest_View) Enum() *GetGroceryListShareRequest_View {
	p := new(GetGroceryListShareRequest_View)
	*p = x
	return p
}

func (x GetGroceryListShareRequest_View) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetGroceryListShareRequest_View) Descriptor() protoreflect.EnumDescriptor {
	return file_entpb_entpb_proto_enumTypes[13].Descriptor()
}

func (GetGroceryListShareRequest_View) Type() protoreflect.EnumType {
	return &file_entpb_entpb_proto_enumTypes[13]
}

func (x GetGroceryListShareRequest_View) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetGroceryListShareRequest_View.Descriptor instead.
func (GetGroceryListShareRequest_View) EnumDescriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{56, 0}
}

type ListGroceryListShareRequest_View int32

const (
	ListGroceryListShareRequest_VIEW_UNSPECIFIED ListGroceryListShareRequest_View = 0
	ListGroceryListShareRequest_BASIC            ListGroceryListShareRequest_View = 1
	ListGroceryListShareRequest_WITH_EDGE_IDS    ListGroceryListShareRequest_View = 2
)

// Enum value maps for ListGroceryListShareRequest_View.
var (
	ListGroceryListShareRequest_View_name = map[int32]string{
		0: "VIEW_UNSPECIFIED",
		1: "BASIC",
		2: "WITH_EDGE_IDS",
	}
	ListGroceryListShareRequest_View_value = map[string]int32{
		"VIEW_UNSPECIFIED": 0,
		"BASIC":            1,
		"WITH_EDGE_IDS":    2,
	}
)

func (x ListGroceryListShareRequest_View) Enum() *ListGroceryListShareRequest_View {
	p := new(ListGroceryListShareRequest_View)
	*p = x
	return p
}

func (x ListGroceryListShareRequest_View) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListGroceryListShareRequest_View) Descriptor() protoreflect.EnumDescriptor {
	return file_entpb_entpb_proto_enumTypes[14].Descriptor()
}

func (ListGroceryListShareRequest_View) Type() protoreflect.EnumType {
	return &file_entpb_entpb_proto_enumTypes[14]
}

func (x ListGroceryListShareRequest_View) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListGroceryListShareRequest_View.Descriptor instead.
func (ListGroceryListShareRequest_View) EnumDescriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{59, 0}
}

type GetMovieRequest_View int32

const (
	GetMovieRequest_VIEW_UNSPECIFIED GetMovieRequest_View = 0
	GetMovieRequest_BASIC            GetMovieRequest_View = 1
	GetMovieRequest_WITH_EDGE_IDS    GetMovieRequest_View = 2
)

// Enum value maps for GetMovieRequest_View.
var (
	GetMovieRequest_View_name = map[int32]string{
		0: "VIEW_UNSPECIFIED",
		1: "BASIC",
		2: "WITH_EDGE_IDS",
	}
	GetMovieRequest_View_value = map[string]int32{
		"VIEW_UNSPECIFIED": 0,
		"BASIC":            1,
		"WITH_EDGE_IDS":    2,
	}
)

func (x GetMovieRequest_View) Enum() *GetMovieRequest_View {
	p := new(GetMovieRequest_View)
	*p = x
	return p
}

func (x GetMovieRequest_View) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetMovieRequest_View) Descriptor() protoreflect.EnumDescriptor {
	return file_entpb_entpb_proto_enumTypes[15].Descriptor()
}

func (GetMovieRequest_View) Type() protoreflect.EnumType {
	return &file_entpb_entpb_proto_enumTypes[15]
}

func (x GetMovieRequest_View) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetMovieRequest_View.Descriptor instead.
func (GetMovieRequest_View) EnumDescriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{65, 0}
}

type ListMovieRequest_View int32

const (
	ListMovieRequest_VIEW_UNSPECIFIED ListMovieRequest_View = 0
	ListMovieRequest_BASIC            ListMovieRequest_View = 1
	ListMovieRequest_WITH_EDGE_IDS    ListMovieRequest_View = 2
)

// Enum value maps for ListMovieRequest_View.
var (
	ListMovieRequest_View_name = map[int32]string{
		0: "VIEW_UNSPECIFIED",
		1: "BASIC",
		2: "WITH_EDGE_IDS",
	}
	ListMovieRequest_View_value = map[string]int32{
		"VIEW_UNSPECIFIED": 0,
		"BASIC":            1,
		"WITH_EDGE_IDS":    2,
	}
)

func (x ListMovieRequest_View) Enum() *ListMovieRequest_View {
	p := new(ListMovieRequest_View)
	*p = x
	return p
}

func (x ListMovieRequest_View) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListMovieRequest_View) Descriptor() protoreflect.EnumDescriptor {
	return file_entpb_entpb_proto_enumTypes[16].Descriptor()
}

func (ListMovieRequest_View) Type() protoreflect.EnumType {
	return &file_entpb_entpb_proto_enumTypes[16]
}

func (x ListMovieRequest_View) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListMovieRequest_View.Descriptor instead.
func (ListMovieRequest_View) EnumDescriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{68, 0}
}

type GetMovieCollectionRequest_View int32

const (
	GetMovieCollectionRequest_VIEW_UNSPECIFIED GetMovieCollectionRequest_View = 0
	GetMovieCollectionRequest_BASIC            GetMovieCollectionRequest_View = 1
	GetMovieCollectionRequest_WITH_EDGE_IDS    GetMovieCollectionRequest_View = 2
)

// Enum value maps for GetMovieCollectionRequest_View.
var (
	GetMovieCollectionRequest_View_name = map[int32]string{
		0: "VIEW_UNSPECIFIED",
		1: "BASIC",
		2: "WITH_EDGE_IDS",
	}
	GetMovieCollectionRequest_View_value = map[string]int32{
		"VIEW_UNSPECIFIED": 0,
		"BASIC":            1,
		"WITH_EDGE_IDS":    2,
	}
)

func (x GetMovieCollectionRequest_View) Enum() *GetMovieCollectionRequest_View {
	p := new(GetMovieCollectionRequest_View)
	*p = x
	return p
}

func (x GetMovieCollectionRequest_View) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetMovieCollectionRequest_View) Descriptor() protoreflect.EnumDescriptor {
	return file_entpb_entpb_proto_enumTypes[17].Descriptor()
}

func (GetMovieCollectionRequest_View) Type() protoreflect.EnumType {
	return &file_entpb_entpb_proto_enumTypes[17]
}

func (x GetMovieCollectionRequest_View) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetMovieCollectionRequest_View.Descriptor instead.
func (GetMovieCollectionRequest_View) EnumDescriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{74, 0}
}

type ListMovieCollectionRequest_View int32

const (
	ListMovieCollectionRequest_VIEW_UNSPECIFIED ListMovieCollectionRequest_View = 0
	ListMovieCollectionRequest_BASIC            ListMovieCollectionRequest_View = 1
	ListMovieCollectionRequest_WITH_EDGE_IDS    ListMovieCollectionRequest_View = 2
)

// Enum value maps for ListMovieCollectionRequest_View.
var (
	ListMovieCollectionRequest_View_name = map[int32]string{
		0: "VIEW_UNSPECIFIED",
		1: "BASIC",
		2: "WITH_EDGE_IDS",
	}
	ListMovieCollectionRequest_View_value = map[string]int32{
		"VIEW_UNSPECIFIED": 0,
		"BASIC":            1,
		"WITH_EDGE_IDS":    2,
	}
)

func (x ListMovieCollectionRequest_View) Enum() *ListMovieCollectionRequest_View {
	p := new(ListMovieCollectionRequest_View)
	*p = x
	return p
}

func (x ListMovieCollectionRequest_View) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListMovieCollectionRequest_View) Descriptor() protoreflect.EnumDescriptor {
	return file_entpb_entpb_proto_enumTypes[18].Descriptor()
}

func (ListMovieCollectionRequest_View) Type() protoreflect.EnumType {
	return &file_entpb_entpb_proto_enumTypes[18]
}

func (x ListMovieCollectionRequest_View) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListMovieCollectionRequest_View.Descriptor instead.
func (ListMovieCollectionRequest_View) EnumDescriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{77, 0}
}

type GetMovieCollectionShareRequest_View int32

const (
	GetMovieCollectionShareRequest_VIEW_UNSPECIFIED GetMovieCollectionShareRequest_View = 0
	GetMovieCollectionShareRequest_BASIC            GetMovieCollectionShareRequest_View = 1
	GetMovieCollectionShareRequest_WITH_EDGE_IDS    GetMovieCollectionShareRequest_View = 2
)

// Enum value maps for GetMovieCollectionShareRequest_View.
var (
	GetMovieCollectionShareRequest_View_name = map[int32]string{
		0: "VIEW_UNSPECIFIED",
		1: "BASIC",
		2: "WITH_EDGE_IDS",
	}
	GetMovieCollectionShareRequest_View_value = map[string]int32{
		"VIEW_UNSPECIFIED": 0,
		"BASIC":            1,
		"WITH_EDGE_IDS":    2,
	}
)

func (x GetMovieCollectionShareRequest_View) Enum() *GetMovieCollectionShareRequest_View {
	p := new(GetMovieCollectionShareRequest_View)
	*p = x
	return p
}

func (x GetMovieCollectionShareRequest_View) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetMovieCollectionShareRequest_View) Descriptor() protoreflect.EnumDescriptor {
	return file_entpb_entpb_proto_enumTypes[19].Descriptor()
}

func (GetMovieCollectionShareRequest_View) Type() protoreflect.EnumType {
	return &file_entpb_entpb_proto_enumTypes[19]
}

func (x GetMovieCollectionShareRequest_View) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetMovieCollectionShareRequest_View.Descriptor instead.
func (GetMovieCollectionShareRequest_View) EnumDescriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{83, 0}
}

type ListMovieCollectionShareRequest_View int32

const (
	ListMovieCollectionShareRequest_VIEW_UNSPECIFIED ListMovieCollectionShareRequest_View = 0
	ListMovieCollectionShareRequest_BASIC            ListMovieCollectionShareRequest_View = 1
	ListMovieCollectionShareRequest_WITH_EDGE_IDS    ListMovieCollectionShareRequest_View = 2
)

// Enum value maps for ListMovieCollectionShareRequest_View.
var (
	ListMovieCollectionShareRequest_View_name = map[int32]string{
		0: "VIEW_UNSPECIFIED",
		1: "BASIC",
		2: "WITH_EDGE_IDS",
	}
	ListMovieCollectionShareRequest_View_value = map[string]int32{
		"VIEW_UNSPECIFIED": 0,
		"BASIC":            1,
		"WITH_EDGE_IDS":    2,
	}
)

func (x ListMovieCollectionShareRequest_View) Enum() *ListMovieCollectionShareRequest_View {
	p := new(ListMovieCollectionShareRequest_View)
	*p = x
	return p
}

func (x ListMovieCollectionShareRequest_View) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListMovieCollectionShareRequest_View) Descriptor() protoreflect.EnumDescriptor {
	return file_entpb_entpb_proto_enumTypes[20].Descriptor()
}

func (ListMovieCollectionShareRequest_View) Type() protoreflect.EnumType {
	return &file_entpb_entpb_proto_enumTypes[20]
}

func (x ListMovieCollectionShareRequest_View) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListMovieCollectionShareRequest_View.Descriptor instead.
func (ListMovieCollectionShareRequest_View) EnumDescriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{86, 0}
}

type GetUserRequest_View int32

const (
	GetUserRequest_VIEW_UNSPECIFIED GetUserRequest_View = 0
	GetUserRequest_BASIC            GetUserRequest_View = 1
	GetUserRequest_WITH_EDGE_IDS    GetUserRequest_View = 2
)

// Enum value maps for GetUserRequest_View.
var (
	GetUserRequest_View_name = map[int32]string{
		0: "VIEW_UNSPECIFIED",
		1: "BASIC",
		2: "WITH_EDGE_IDS",
	}
	GetUserRequest_View_value = map[string]int32{
		"VIEW_UNSPECIFIED": 0,
		"BASIC":            1,
		"WITH_EDGE_IDS":    2,
	}
)

func (x GetUserRequest_View) Enum() *GetUserRequest_View {
	p := new(GetUserRequest_View)
	*p = x
	return p
}

func (x GetUserRequest_View) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetUserRequest_View) Descriptor() protoreflect.EnumDescriptor {
	return file_entpb_entpb_proto_enumTypes[21].Descriptor()
}

func (GetUserRequest_View) Type() protoreflect.EnumType {
	return &file_entpb_entpb_proto_enumTypes[21]
}

func (x GetUserRequest_View) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetUserRequest_View.Descriptor instead.
func (GetUserRequest_View) EnumDescriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{92, 0}
}

type ListUserRequest_View int32

const (
	ListUserRequest_VIEW_UNSPECIFIED ListUserRequest_View = 0
	ListUserRequest_BASIC            ListUserRequest_View = 1
	ListUserRequest_WITH_EDGE_IDS    ListUserRequest_View = 2
)

// Enum value maps for ListUserRequest_View.
var (
	ListUserRequest_View_name = map[int32]string{
		0: "VIEW_UNSPECIFIED",
		1: "BASIC",
		2: "WITH_EDGE_IDS",
	}
	ListUserRequest_View_value = map[string]int32{
		"VIEW_UNSPECIFIED": 0,
		"BASIC":            1,
		"WITH_EDGE_IDS":    2,
	}
)

func (x ListUserRequest_View) Enum() *ListUserRequest_View {
	p := new(ListUserRequest_View)
	*p = x
	return p
}

func (x ListUserRequest_View) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListUserRequest_View) Descriptor() protoreflect.EnumDescriptor {
	return file_entpb_entpb_proto_enumTypes[22].Descriptor()
}

func (ListUserRequest_View) Type() protoreflect.EnumType {
	return &file_entpb_entpb_proto_enumTypes[22]
}

func (x ListUserRequest_View) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListUserRequest_View.Descriptor instead.
func (ListUserRequest_View) EnumDescriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{95, 0}
}

type AmazonList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt    *timestamp.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	AmazonOrders []*AmazonOrder       `protobuf:"bytes,3,rep,name=amazon_orders,json=amazonOrders,proto3" json:"amazon_orders,omitempty"`
	Owner        []*User              `protobuf:"bytes,4,rep,name=owner,proto3" json:"owner,omitempty"`
	AmazonShares []*AmazonShare       `protobuf:"bytes,5,rep,name=amazon_shares,json=amazonShares,proto3" json:"amazon_shares,omitempty"`
}

func (x *AmazonList) Reset() {
	*x = AmazonList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entpb_entpb_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AmazonList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AmazonList) ProtoMessage() {}

func (x *AmazonList) ProtoReflect() protoreflect.Message {
	mi := &file_entpb_entpb_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AmazonList.ProtoReflect.Descriptor instead.
func (*AmazonList) Descriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{0}
}

func (x *AmazonList) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AmazonList) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *AmazonList) GetAmazonOrders() []*AmazonOrder {
	if x != nil {
		return x.AmazonOrders
	}
	return nil
}

func (x *AmazonList) GetOwner() []*User {
	if x != nil {
		return x.Owner
	}
	return nil
}

func (x *AmazonList) GetAmazonShares() []*AmazonShare {
	if x != nil {
		return x.AmazonShares
	}
	return nil
}

type CreateAmazonListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AmazonList *AmazonList `protobuf:"bytes,1,opt,name=amazon_list,json=amazonList,proto3" json:"amazon_list,omitempty"`
}

func (x *CreateAmazonListRequest) Reset() {
	*x = CreateAmazonListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entpb_entpb_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAmazonListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAmazonListRequest) ProtoMessage() {}

func (x *CreateAmazonListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_entpb_entpb_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAmazonListRequest.ProtoReflect.Descriptor instead.
func (*CreateAmazonListRequest) Descriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{1}
}

func (x *CreateAmazonListRequest) GetAmazonList() *AmazonList {
	if x != nil {
		return x.AmazonList
	}
	return nil
}

type GetAmazonListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int64                     `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	View GetAmazonListRequest_View `protobuf:"varint,2,opt,name=view,proto3,enum=entpb.GetAmazonListRequest_View" json:"view,omitempty"`
}

func (x *GetAmazonListRequest) Reset() {
	*x = GetAmazonListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entpb_entpb_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAmazonListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAmazonListRequest) ProtoMessage() {}

func (x *GetAmazonListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_entpb_entpb_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAmazonListRequest.ProtoReflect.Descriptor instead.
func (*GetAmazonListRequest) Descriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{2}
}

func (x *GetAmazonListRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetAmazonListRequest) GetView() GetAmazonListRequest_View {
	if x != nil {
		return x.View
	}
	return GetAmazonListRequest_VIEW_UNSPECIFIED
}

type UpdateAmazonListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AmazonList *AmazonList `protobuf:"bytes,1,opt,name=amazon_list,json=amazonList,proto3" json:"amazon_list,omitempty"`
}

func (x *UpdateAmazonListRequest) Reset() {
	*x = UpdateAmazonListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entpb_entpb_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAmazonListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAmazonListRequest) ProtoMessage() {}

func (x *UpdateAmazonListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_entpb_entpb_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAmazonListRequest.ProtoReflect.Descriptor instead.
func (*UpdateAmazonListRequest) Descriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateAmazonListRequest) GetAmazonList() *AmazonList {
	if x != nil {
		return x.AmazonList
	}
	return nil
}

type DeleteAmazonListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteAmazonListRequest) Reset() {
	*x = DeleteAmazonListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entpb_entpb_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAmazonListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAmazonListRequest) ProtoMessage() {}

func (x *DeleteAmazonListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_entpb_entpb_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAmazonListRequest.ProtoReflect.Descriptor instead.
func (*DeleteAmazonListRequest) Descriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteAmazonListRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ListAmazonListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageSize  int32                      `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken string                     `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	View      ListAmazonListRequest_View `protobuf:"varint,3,opt,name=view,proto3,enum=entpb.ListAmazonListRequest_View" json:"view,omitempty"`
}

func (x *ListAmazonListRequest) Reset() {
	*x = ListAmazonListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entpb_entpb_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAmazonListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAmazonListRequest) ProtoMessage() {}

func (x *ListAmazonListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_entpb_entpb_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAmazonListRequest.ProtoReflect.Descriptor instead.
func (*ListAmazonListRequest) Descriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{5}
}

func (x *ListAmazonListRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListAmazonListRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListAmazonListRequest) GetView() ListAmazonListRequest_View {
	if x != nil {
		return x.View
	}
	return ListAmazonListRequest_VIEW_UNSPECIFIED
}

type ListAmazonListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AmazonListList []*AmazonList `protobuf:"bytes,1,rep,name=amazon_list_list,json=amazonListList,proto3" json:"amazon_list_list,omitempty"`
	NextPageToken  string        `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *ListAmazonListResponse) Reset() {
	*x = ListAmazonListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entpb_entpb_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAmazonListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAmazonListResponse) ProtoMessage() {}

func (x *ListAmazonListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_entpb_entpb_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAmazonListResponse.ProtoReflect.Descriptor instead.
func (*ListAmazonListResponse) Descriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{6}
}

func (x *ListAmazonListResponse) GetAmazonListList() []*AmazonList {
	if x != nil {
		return x.AmazonListList
	}
	return nil
}

func (x *ListAmazonListResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type BatchCreateAmazonListsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Requests []*CreateAmazonListRequest `protobuf:"bytes,1,rep,name=requests,proto3" json:"requests,omitempty"`
}

func (x *BatchCreateAmazonListsRequest) Reset() {
	*x = BatchCreateAmazonListsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entpb_entpb_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchCreateAmazonListsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchCreateAmazonListsRequest) ProtoMessage() {}

func (x *BatchCreateAmazonListsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_entpb_entpb_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchCreateAmazonListsRequest.ProtoReflect.Descriptor instead.
func (*BatchCreateAmazonListsRequest) Descriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{7}
}

func (x *BatchCreateAmazonListsRequest) GetRequests() []*CreateAmazonListRequest {
	if x != nil {
		return x.Requests
	}
	return nil
}

type BatchCreateAmazonListsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AmazonLists []*AmazonList `protobuf:"bytes,1,rep,name=amazon_lists,json=amazonLists,proto3" json:"amazon_lists,omitempty"`
}

func (x *BatchCreateAmazonListsResponse) Reset() {
	*x = BatchCreateAmazonListsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entpb_entpb_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchCreateAmazonListsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchCreateAmazonListsResponse) ProtoMessage() {}

func (x *BatchCreateAmazonListsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_entpb_entpb_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchCreateAmazonListsResponse.ProtoReflect.Descriptor instead.
func (*BatchCreateAmazonListsResponse) Descriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{8}
}

func (x *BatchCreateAmazonListsResponse) GetAmazonLists() []*AmazonList {
	if x != nil {
		return x.AmazonLists
	}
	return nil
}

type AmazonOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name       string               `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Category   string               `protobuf:"bytes,3,opt,name=category,proto3" json:"category,omitempty"`
	Brand      string               `protobuf:"bytes,4,opt,name=brand,proto3" json:"brand,omitempty"`
	Seller     string               `protobuf:"bytes,5,opt,name=seller,proto3" json:"seller,omitempty"`
	Address1   string               `protobuf:"bytes,6,opt,name=address1,proto3" json:"address1,omitempty"`
	Address2   string               `protobuf:"bytes,7,opt,name=address2,proto3" json:"address2,omitempty"`
	City       string               `protobuf:"bytes,8,opt,name=city,proto3" json:"city,omitempty"`
	State      string               `protobuf:"bytes,9,opt,name=state,proto3" json:"state,omitempty"`
	Zip        string               `protobuf:"bytes,10,opt,name=zip,proto3" json:"zip,omitempty"`
	Price      float32              `protobuf:"fixed32,11,opt,name=price,proto3" json:"price,omitempty"`
	Tax        float32              `protobuf:"fixed32,12,opt,name=tax,proto3" json:"tax,omitempty"`
	Refund     bool                 `protobuf:"varint,13,opt,name=refund,proto3" json:"refund,omitempty"`
	OrderedAt  *timestamp.Timestamp `protobuf:"bytes,14,opt,name=ordered_at,json=orderedAt,proto3" json:"ordered_at,omitempty"`
	CreatedAt  *timestamp.Timestamp `protobuf:"bytes,15,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	AmazonList *AmazonList          `protobuf:"bytes,16,opt,name=amazon_list,json=amazonList,proto3" json:"amazon_list,omitempty"`
}

func (x *AmazonOrder) Reset() {
	*x = AmazonOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entpb_entpb_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AmazonOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AmazonOrder) ProtoMessage() {}

func (x *AmazonOrder) ProtoReflect() protoreflect.Message {
	mi := &file_entpb_entpb_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AmazonOrder.ProtoReflect.Descriptor instead.
func (*AmazonOrder) Descriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{9}
}

func (x *AmazonOrder) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AmazonOrder) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AmazonOrder) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *AmazonOrder) GetBrand() string {
	if x != nil {
		return x.Brand
	}
	return ""
}

func (x *AmazonOrder) GetSeller() string {
	if x != nil {
		return x.Seller
	}
	return ""
}

func (x *AmazonOrder) GetAddress1() string {
	if x != nil {
		return x.Address1
	}
	return ""
}

func (x *AmazonOrder) GetAddress2() string {
	if x != nil {
		return x.Address2
	}
	return ""
}

func (x *AmazonOrder) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *AmazonOrder) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *AmazonOrder) GetZip() string {
	if x != nil {
		return x.Zip
	}
	return ""
}

func (x *AmazonOrder) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *AmazonOrder) GetTax() float32 {
	if x != nil {
		return x.Tax
	}
	return 0
}

func (x *AmazonOrder) GetRefund() bool {
	if x != nil {
		return x.Refund
	}
	return false
}

func (x *AmazonOrder) GetOrderedAt() *timestamp.Timestamp {
	if x != nil {
		return x.OrderedAt
	}
	return nil
}

func (x *AmazonOrder) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *AmazonOrder) GetAmazonList() *AmazonList {
	if x != nil {
		return x.AmazonList
	}
	return nil
}

type CreateAmazonOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AmazonOrder *AmazonOrder `protobuf:"bytes,1,opt,name=amazon_order,json=amazonOrder,proto3" json:"amazon_order,omitempty"`
}

func (x *CreateAmazonOrderRequest) Reset() {
	*x = CreateAmazonOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entpb_entpb_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAmazonOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAmazonOrderRequest) ProtoMessage() {}

func (x *CreateAmazonOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_entpb_entpb_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAmazonOrderRequest.ProtoReflect.Descriptor instead.
func (*CreateAmazonOrderRequest) Descriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{10}
}

func (x *CreateAmazonOrderRequest) GetAmazonOrder() *AmazonOrder {
	if x != nil {
		return x.AmazonOrder
	}
	return nil
}

type GetAmazonOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int64                      `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	View GetAmazonOrderRequest_View `protobuf:"varint,2,opt,name=view,proto3,enum=entpb.GetAmazonOrderRequest_View" json:"view,omitempty"`
}

func (x *GetAmazonOrderRequest) Reset() {
	*x = GetAmazonOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entpb_entpb_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAmazonOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAmazonOrderRequest) ProtoMessage() {}

func (x *GetAmazonOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_entpb_entpb_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAmazonOrderRequest.ProtoReflect.Descriptor instead.
func (*GetAmazonOrderRequest) Descriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{11}
}

func (x *GetAmazonOrderRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetAmazonOrderRequest) GetView() GetAmazonOrderRequest_View {
	if x != nil {
		return x.View
	}
	return GetAmazonOrderRequest_VIEW_UNSPECIFIED
}

type UpdateAmazonOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AmazonOrder *AmazonOrder `protobuf:"bytes,1,opt,name=amazon_order,json=amazonOrder,proto3" json:"amazon_order,omitempty"`
}

func (x *UpdateAmazonOrderRequest) Reset() {
	*x = UpdateAmazonOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entpb_entpb_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAmazonOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAmazonOrderRequest) ProtoMessage() {}

func (x *UpdateAmazonOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_entpb_entpb_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAmazonOrderRequest.ProtoReflect.Descriptor instead.
func (*UpdateAmazonOrderRequest) Descriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateAmazonOrderRequest) GetAmazonOrder() *AmazonOrder {
	if x != nil {
		return x.AmazonOrder
	}
	return nil
}

type DeleteAmazonOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteAmazonOrderRequest) Reset() {
	*x = DeleteAmazonOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entpb_entpb_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAmazonOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAmazonOrderRequest) ProtoMessage() {}

func (x *DeleteAmazonOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_entpb_entpb_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAmazonOrderRequest.ProtoReflect.Descriptor instead.
func (*DeleteAmazonOrderRequest) Descriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{13}
}

func (x *DeleteAmazonOrderRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ListAmazonOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageSize  int32                       `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken string                      `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	View      ListAmazonOrderRequest_View `protobuf:"varint,3,opt,name=view,proto3,enum=entpb.ListAmazonOrderRequest_View" json:"view,omitempty"`
}

func (x *ListAmazonOrderRequest) Reset() {
	*x = ListAmazonOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entpb_entpb_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAmazonOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAmazonOrderRequest) ProtoMessage() {}

func (x *ListAmazonOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_entpb_entpb_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAmazonOrderRequest.ProtoReflect.Descriptor instead.
func (*ListAmazonOrderRequest) Descriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{14}
}

func (x *ListAmazonOrderRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListAmazonOrderRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListAmazonOrderRequest) GetView() ListAmazonOrderRequest_View {
	if x != nil {
		return x.View
	}
	return ListAmazonOrderRequest_VIEW_UNSPECIFIED
}

type ListAmazonOrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AmazonOrderList []*AmazonOrder `protobuf:"bytes,1,rep,name=amazon_order_list,json=amazonOrderList,proto3" json:"amazon_order_list,omitempty"`
	NextPageToken   string         `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *ListAmazonOrderResponse) Reset() {
	*x = ListAmazonOrderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entpb_entpb_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAmazonOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAmazonOrderResponse) ProtoMessage() {}

func (x *ListAmazonOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_entpb_entpb_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAmazonOrderResponse.ProtoReflect.Descriptor instead.
func (*ListAmazonOrderResponse) Descriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{15}
}

func (x *ListAmazonOrderResponse) GetAmazonOrderList() []*AmazonOrder {
	if x != nil {
		return x.AmazonOrderList
	}
	return nil
}

func (x *ListAmazonOrderResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type BatchCreateAmazonOrdersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Requests []*CreateAmazonOrderRequest `protobuf:"bytes,1,rep,name=requests,proto3" json:"requests,omitempty"`
}

func (x *BatchCreateAmazonOrdersRequest) Reset() {
	*x = BatchCreateAmazonOrdersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entpb_entpb_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchCreateAmazonOrdersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchCreateAmazonOrdersRequest) ProtoMessage() {}

func (x *BatchCreateAmazonOrdersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_entpb_entpb_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchCreateAmazonOrdersRequest.ProtoReflect.Descriptor instead.
func (*BatchCreateAmazonOrdersRequest) Descriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{16}
}

func (x *BatchCreateAmazonOrdersRequest) GetRequests() []*CreateAmazonOrderRequest {
	if x != nil {
		return x.Requests
	}
	return nil
}

type BatchCreateAmazonOrdersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AmazonOrders []*AmazonOrder `protobuf:"bytes,1,rep,name=amazon_orders,json=amazonOrders,proto3" json:"amazon_orders,omitempty"`
}

func (x *BatchCreateAmazonOrdersResponse) Reset() {
	*x = BatchCreateAmazonOrdersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entpb_entpb_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchCreateAmazonOrdersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchCreateAmazonOrdersResponse) ProtoMessage() {}

func (x *BatchCreateAmazonOrdersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_entpb_entpb_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchCreateAmazonOrdersResponse.ProtoReflect.Descriptor instead.
func (*BatchCreateAmazonOrdersResponse) Descriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{17}
}

func (x *BatchCreateAmazonOrdersResponse) GetAmazonOrders() []*AmazonOrder {
	if x != nil {
		return x.AmazonOrders
	}
	return nil
}

type AmazonShare struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CanEdit    bool                 `protobuf:"varint,2,opt,name=can_edit,json=canEdit,proto3" json:"can_edit,omitempty"`
	CreatedAt  *timestamp.Timestamp `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	User       *User                `protobuf:"bytes,4,opt,name=user,proto3" json:"user,omitempty"`
	AmazonList *AmazonList          `protobuf:"bytes,5,opt,name=amazon_list,json=amazonList,proto3" json:"amazon_list,omitempty"`
}

func (x *AmazonShare) Reset() {
	*x = AmazonShare{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entpb_entpb_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AmazonShare) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AmazonShare) ProtoMessage() {}

func (x *AmazonShare) ProtoReflect() protoreflect.Message {
	mi := &file_entpb_entpb_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AmazonShare.ProtoReflect.Descriptor instead.
func (*AmazonShare) Descriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{18}
}

func (x *AmazonShare) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AmazonShare) GetCanEdit() bool {
	if x != nil {
		return x.CanEdit
	}
	return false
}

func (x *AmazonShare) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *AmazonShare) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *AmazonShare) GetAmazonList() *AmazonList {
	if x != nil {
		return x.AmazonList
	}
	return nil
}

type CreateAmazonShareRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AmazonShare *AmazonShare `protobuf:"bytes,1,opt,name=amazon_share,json=amazonShare,proto3" json:"amazon_share,omitempty"`
}

func (x *CreateAmazonShareRequest) Reset() {
	*x = CreateAmazonShareRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entpb_entpb_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAmazonShareRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAmazonShareRequest) ProtoMessage() {}

func (x *CreateAmazonShareRequest) ProtoReflect() protoreflect.Message {
	mi := &file_entpb_entpb_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAmazonShareRequest.ProtoReflect.Descriptor instead.
func (*CreateAmazonShareRequest) Descriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{19}
}

func (x *CreateAmazonShareRequest) GetAmazonShare() *AmazonShare {
	if x != nil {
		return x.AmazonShare
	}
	return nil
}

type GetAmazonShareRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int64                      `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	View GetAmazonShareRequest_View `protobuf:"varint,2,opt,name=view,proto3,enum=entpb.GetAmazonShareRequest_View" json:"view,omitempty"`
}

func (x *GetAmazonShareRequest) Reset() {
	*x = GetAmazonShareRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entpb_entpb_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAmazonShareRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAmazonShareRequest) ProtoMessage() {}

func (x *GetAmazonShareRequest) ProtoReflect() protoreflect.Message {
	mi := &file_entpb_entpb_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAmazonShareRequest.ProtoReflect.Descriptor instead.
func (*GetAmazonShareRequest) Descriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{20}
}

func (x *GetAmazonShareRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetAmazonShareRequest) GetView() GetAmazonShareRequest_View {
	if x != nil {
		return x.View
	}
	return GetAmazonShareRequest_VIEW_UNSPECIFIED
}

type UpdateAmazonShareRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AmazonShare *AmazonShare `protobuf:"bytes,1,opt,name=amazon_share,json=amazonShare,proto3" json:"amazon_share,omitempty"`
}

func (x *UpdateAmazonShareRequest) Reset() {
	*x = UpdateAmazonShareRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entpb_entpb_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAmazonShareRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAmazonShareRequest) ProtoMessage() {}

func (x *UpdateAmazonShareRequest) ProtoReflect() protoreflect.Message {
	mi := &file_entpb_entpb_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAmazonShareRequest.ProtoReflect.Descriptor instead.
func (*UpdateAmazonShareRequest) Descriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{21}
}

func (x *UpdateAmazonShareRequest) GetAmazonShare() *AmazonShare {
	if x != nil {
		return x.AmazonShare
	}
	return nil
}

type DeleteAmazonShareRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteAmazonShareRequest) Reset() {
	*x = DeleteAmazonShareRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entpb_entpb_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAmazonShareRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAmazonShareRequest) ProtoMessage() {}

func (x *DeleteAmazonShareRequest) ProtoReflect() protoreflect.Message {
	mi := &file_entpb_entpb_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAmazonShareRequest.ProtoReflect.Descriptor instead.
func (*DeleteAmazonShareRequest) Descriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{22}
}

func (x *DeleteAmazonShareRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ListAmazonShareRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageSize  int32                       `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken string                      `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	View      ListAmazonShareRequest_View `protobuf:"varint,3,opt,name=view,proto3,enum=entpb.ListAmazonShareRequest_View" json:"view,omitempty"`
}

func (x *ListAmazonShareRequest) Reset() {
	*x = ListAmazonShareRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entpb_entpb_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAmazonShareRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAmazonShareRequest) ProtoMessage() {}

func (x *ListAmazonShareRequest) ProtoReflect() protoreflect.Message {
	mi := &file_entpb_entpb_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAmazonShareRequest.ProtoReflect.Descriptor instead.
func (*ListAmazonShareRequest) Descriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{23}
}

func (x *ListAmazonShareRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListAmazonShareRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListAmazonShareRequest) GetView() ListAmazonShareRequest_View {
	if x != nil {
		return x.View
	}
	return ListAmazonShareRequest_VIEW_UNSPECIFIED
}

type ListAmazonShareResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AmazonShareList []*AmazonShare `protobuf:"bytes,1,rep,name=amazon_share_list,json=amazonShareList,proto3" json:"amazon_share_list,omitempty"`
	NextPageToken   string         `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *ListAmazonShareResponse) Reset() {
	*x = ListAmazonShareResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entpb_entpb_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAmazonShareResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAmazonShareResponse) ProtoMessage() {}

func (x *ListAmazonShareResponse) ProtoReflect() protoreflect.Message {
	mi := &file_entpb_entpb_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAmazonShareResponse.ProtoReflect.Descriptor instead.
func (*ListAmazonShareResponse) Descriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{24}
}

func (x *ListAmazonShareResponse) GetAmazonShareList() []*AmazonShare {
	if x != nil {
		return x.AmazonShareList
	}
	return nil
}

func (x *ListAmazonShareResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type BatchCreateAmazonSharesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Requests []*CreateAmazonShareRequest `protobuf:"bytes,1,rep,name=requests,proto3" json:"requests,omitempty"`
}

func (x *BatchCreateAmazonSharesRequest) Reset() {
	*x = BatchCreateAmazonSharesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entpb_entpb_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchCreateAmazonSharesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchCreateAmazonSharesRequest) ProtoMessage() {}

func (x *BatchCreateAmazonSharesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_entpb_entpb_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchCreateAmazonSharesRequest.ProtoReflect.Descriptor instead.
func (*BatchCreateAmazonSharesRequest) Descriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{25}
}

func (x *BatchCreateAmazonSharesRequest) GetRequests() []*CreateAmazonShareRequest {
	if x != nil {
		return x.Requests
	}
	return nil
}

type BatchCreateAmazonSharesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AmazonShares []*AmazonShare `protobuf:"bytes,1,rep,name=amazon_shares,json=amazonShares,proto3" json:"amazon_shares,omitempty"`
}

func (x *BatchCreateAmazonSharesResponse) Reset() {
	*x = BatchCreateAmazonSharesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entpb_entpb_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchCreateAmazonSharesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchCreateAmazonSharesResponse) ProtoMessage() {}

func (x *BatchCreateAmazonSharesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_entpb_entpb_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchCreateAmazonSharesResponse.ProtoReflect.Descriptor instead.
func (*BatchCreateAmazonSharesResponse) Descriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{26}
}

func (x *BatchCreateAmazonSharesResponse) GetAmazonShares() []*AmazonShare {
	if x != nil {
		return x.AmazonShares
	}
	return nil
}

type Drink struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Type      Drink_Type           `protobuf:"varint,2,opt,name=type,proto3,enum=entpb.Drink_Type" json:"type,omitempty"`
	Abv       int32                `protobuf:"varint,3,opt,name=abv,proto3" json:"abv,omitempty"`
	Ounces    int32                `protobuf:"varint,4,opt,name=ounces,proto3" json:"ounces,omitempty"`
	Year      int64                `protobuf:"varint,5,opt,name=year,proto3" json:"year,omitempty"`
	Month     int64                `protobuf:"varint,6,opt,name=month,proto3" json:"month,omitempty"`
	Day       int64                `protobuf:"varint,7,opt,name=day,proto3" json:"day,omitempty"`
	Note      string               `protobuf:"bytes,8,opt,name=note,proto3" json:"note,omitempty"`
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Owner     *User                `protobuf:"bytes,10,opt,name=owner,proto3" json:"owner,omitempty"`
}

func (x *Drink) Reset() {
	*x = Drink{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entpb_entpb_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Drink) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Drink) ProtoMessage() {}

func (x *Drink) ProtoReflect() protoreflect.Message {
	mi := &file_entpb_entpb_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Drink.ProtoReflect.Descriptor instead.
func (*Drink) Descriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{27}
}

func (x *Drink) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Drink) GetType() Drink_Type {
	if x != nil {
		return x.Type
	}
	return Drink_TYPE_UNKNOWN
}

func (x *Drink) GetAbv() int32 {
	if x != nil {
		return x.Abv
	}
	return 0
}

func (x *Drink) GetOunces() int32 {
	if x != nil {
		return x.Ounces
	}
	return 0
}

func (x *Drink) GetYear() int64 {
	if x != nil {
		return x.Year
	}
	return 0
}

func (x *Drink) GetMonth() int64 {
	if x != nil {
		return x.Month
	}
	return 0
}

func (x *Drink) GetDay() int64 {
	if x != nil {
		return x.Day
	}
	return 0
}

func (x *Drink) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

func (x *Drink) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Drink) GetOwner() *User {
	if x != nil {
		return x.Owner
	}
	return nil
}

type CreateDrinkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Drink *Drink `protobuf:"bytes,1,opt,name=drink,proto3" json:"drink,omitempty"`
}

func (x *CreateDrinkRequest) Reset() {
	*x = CreateDrinkRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entpb_entpb_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDrinkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDrinkRequest) ProtoMessage() {}

func (x *CreateDrinkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_entpb_entpb_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDrinkRequest.ProtoReflect.Descriptor instead.
func (*CreateDrinkRequest) Descriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{28}
}

func (x *CreateDrinkRequest) GetDrink() *Drink {
	if x != nil {
		return x.Drink
	}
	return nil
}

type GetDrinkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int64                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	View GetDrinkRequest_View `protobuf:"varint,2,opt,name=view,proto3,enum=entpb.GetDrinkRequest_View" json:"view,omitempty"`
}

func (x *GetDrinkRequest) Reset() {
	*x = GetDrinkRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entpb_entpb_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDrinkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDrinkRequest) ProtoMessage() {}

func (x *GetDrinkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_entpb_entpb_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDrinkRequest.ProtoReflect.Descriptor instead.
func (*GetDrinkRequest) Descriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{29}
}

func (x *GetDrinkRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetDrinkRequest) GetView() GetDrinkRequest_View {
	if x != nil {
		return x.View
	}
	return GetDrinkRequest_VIEW_UNSPECIFIED
}

type UpdateDrinkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Drink *Drink `protobuf:"bytes,1,opt,name=drink,proto3" json:"drink,omitempty"`
}

func (x *UpdateDrinkRequest) Reset() {
	*x = UpdateDrinkRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entpb_entpb_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDrinkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDrinkRequest) ProtoMessage() {}

func (x *UpdateDrinkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_entpb_entpb_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDrinkRequest.ProtoReflect.Descriptor instead.
func (*UpdateDrinkRequest) Descriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{30}
}

func (x *UpdateDrinkRequest) GetDrink() *Drink {
	if x != nil {
		return x.Drink
	}
	return nil
}

type DeleteDrinkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteDrinkRequest) Reset() {
	*x = DeleteDrinkRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entpb_entpb_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDrinkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDrinkRequest) ProtoMessage() {}

func (x *DeleteDrinkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_entpb_entpb_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDrinkRequest.ProtoReflect.Descriptor instead.
func (*DeleteDrinkRequest) Descriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{31}
}

func (x *DeleteDrinkRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ListDrinkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageSize  int32                 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken string                `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	View      ListDrinkRequest_View `protobuf:"varint,3,opt,name=view,proto3,enum=entpb.ListDrinkRequest_View" json:"view,omitempty"`
}

func (x *ListDrinkRequest) Reset() {
	*x = ListDrinkRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entpb_entpb_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDrinkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDrinkRequest) ProtoMessage() {}

func (x *ListDrinkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_entpb_entpb_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDrinkRequest.ProtoReflect.Descriptor instead.
func (*ListDrinkRequest) Descriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{32}
}

func (x *ListDrinkRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListDrinkRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListDrinkRequest) GetView() ListDrinkRequest_View {
	if x != nil {
		return x.View
	}
	return ListDrinkRequest_VIEW_UNSPECIFIED
}

type ListDrinkResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DrinkList     []*Drink `protobuf:"bytes,1,rep,name=drink_list,json=drinkList,proto3" json:"drink_list,omitempty"`
	NextPageToken string   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *ListDrinkResponse) Reset() {
	*x = ListDrinkResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entpb_entpb_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDrinkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDrinkResponse) ProtoMessage() {}

func (x *ListDrinkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_entpb_entpb_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDrinkResponse.ProtoReflect.Descriptor instead.
func (*ListDrinkResponse) Descriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{33}
}

func (x *ListDrinkResponse) GetDrinkList() []*Drink {
	if x != nil {
		return x.DrinkList
	}
	return nil
}

func (x *ListDrinkResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type BatchCreateDrinksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Requests []*CreateDrinkRequest `protobuf:"bytes,1,rep,name=requests,proto3" json:"requests,omitempty"`
}

func (x *BatchCreateDrinksRequest) Reset() {
	*x = BatchCreateDrinksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entpb_entpb_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchCreateDrinksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchCreateDrinksRequest) ProtoMessage() {}

func (x *BatchCreateDrinksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_entpb_entpb_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchCreateDrinksRequest.ProtoReflect.Descriptor instead.
func (*BatchCreateDrinksRequest) Descriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{34}
}

func (x *BatchCreateDrinksRequest) GetRequests() []*CreateDrinkRequest {
	if x != nil {
		return x.Requests
	}
	return nil
}

type BatchCreateDrinksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Drinks []*Drink `protobuf:"bytes,1,rep,name=drinks,proto3" json:"drinks,omitempty"`
}

func (x *BatchCreateDrinksResponse) Reset() {
	*x = BatchCreateDrinksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entpb_entpb_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchCreateDrinksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchCreateDrinksResponse) ProtoMessage() {}

func (x *BatchCreateDrinksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_entpb_entpb_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchCreateDrinksResponse.ProtoReflect.Descriptor instead.
func (*BatchCreateDrinksResponse) Descriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{35}
}

func (x *BatchCreateDrinksResponse) GetDrinks() []*Drink {
	if x != nil {
		return x.Drinks
	}
	return nil
}

type GroceryList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                int64                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name              string               `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Note              string               `protobuf:"bytes,3,opt,name=note,proto3" json:"note,omitempty"`
	Archived          bool                 `protobuf:"varint,4,opt,name=archived,proto3" json:"archived,omitempty"`
	CreatedAt         *timestamp.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	GroceryListItems  []*GroceryListItem   `protobuf:"bytes,6,rep,name=grocery_list_items,json=groceryListItems,proto3" json:"grocery_list_items,omitempty"`
	Owner             *User                `protobuf:"bytes,7,opt,name=owner,proto3" json:"owner,omitempty"`
	GroceryListShares []*GroceryListShare  `protobuf:"bytes,8,rep,name=grocery_list_shares,json=groceryListShares,proto3" json:"grocery_list_shares,omitempty"`
}

func (x *GroceryList) Reset() {
	*x = GroceryList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entpb_entpb_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroceryList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroceryList) ProtoMessage() {}

func (x *GroceryList) ProtoReflect() protoreflect.Message {
	mi := &file_entpb_entpb_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroceryList.ProtoReflect.Descriptor instead.
func (*GroceryList) Descriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{36}
}

func (x *GroceryList) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GroceryList) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GroceryList) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

func (x *GroceryList) GetArchived() bool {
	if x != nil {
		return x.Archived
	}
	return false
}

func (x *GroceryList) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *GroceryList) GetGroceryListItems() []*GroceryListItem {
	if x != nil {
		return x.GroceryListItems
	}
	return nil
}

func (x *GroceryList) GetOwner() *User {
	if x != nil {
		return x.Owner
	}
	return nil
}

func (x *GroceryList) GetGroceryListShares() []*GroceryListShare {
	if x != nil {
		return x.GroceryListShares
	}
	return nil
}

type CreateGroceryListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroceryList *GroceryList `protobuf:"bytes,1,opt,name=grocery_list,json=groceryList,proto3" json:"grocery_list,omitempty"`
}

func (x *CreateGroceryListRequest) Reset() {
	*x = CreateGroceryListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entpb_entpb_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGroceryListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGroceryListRequest) ProtoMessage() {}

func (x *CreateGroceryListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_entpb_entpb_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGroceryListRequest.ProtoReflect.Descriptor instead.
func (*CreateGroceryListRequest) Descriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{37}
}

func (x *CreateGroceryListRequest) GetGroceryList() *GroceryList {
	if x != nil {
		return x.GroceryList
	}
	return nil
}

type GetGroceryListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int64                      `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	View GetGroceryListRequest_View `protobuf:"varint,2,opt,name=view,proto3,enum=entpb.GetGroceryListRequest_View" json:"view,omitempty"`
}

func (x *GetGroceryListRequest) Reset() {
	*x = GetGroceryListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entpb_entpb_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroceryListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroceryListRequest) ProtoMessage() {}

func (x *GetGroceryListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_entpb_entpb_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroceryListRequest.ProtoReflect.Descriptor instead.
func (*GetGroceryListRequest) Descriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{38}
}

func (x *GetGroceryListRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetGroceryListRequest) GetView() GetGroceryListRequest_View {
	if x != nil {
		return x.View
	}
	return GetGroceryListRequest_VIEW_UNSPECIFIED
}

type UpdateGroceryListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroceryList *GroceryList `protobuf:"bytes,1,opt,name=grocery_list,json=groceryList,proto3" json:"grocery_list,omitempty"`
}

func (x *UpdateGroceryListRequest) Reset() {
	*x = UpdateGroceryListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entpb_entpb_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateGroceryListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGroceryListRequest) ProtoMessage() {}

func (x *UpdateGroceryListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_entpb_entpb_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGroceryListRequest.ProtoReflect.Descriptor instead.
func (*UpdateGroceryListRequest) Descriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{39}
}

func (x *UpdateGroceryListRequest) GetGroceryList() *GroceryList {
	if x != nil {
		return x.GroceryList
	}
	return nil
}

type DeleteGroceryListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteGroceryListRequest) Reset() {
	*x = DeleteGroceryListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entpb_entpb_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteGroceryListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteGroceryListRequest) ProtoMessage() {}

func (x *DeleteGroceryListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_entpb_entpb_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteGroceryListRequest.ProtoReflect.Descriptor instead.
func (*DeleteGroceryListRequest) Descriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{40}
}

func (x *DeleteGroceryListRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ListGroceryListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageSize  int32                       `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken string                      `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	View      ListGroceryListRequest_View `protobuf:"varint,3,opt,name=view,proto3,enum=entpb.ListGroceryListRequest_View" json:"view,omitempty"`
}

func (x *ListGroceryListRequest) Reset() {
	*x = ListGroceryListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entpb_entpb_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListGroceryListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGroceryListRequest) ProtoMessage() {}

func (x *ListGroceryListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_entpb_entpb_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGroceryListRequest.ProtoReflect.Descriptor instead.
func (*ListGroceryListRequest) Descriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{41}
}

func (x *ListGroceryListRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListGroceryListRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListGroceryListRequest) GetView() ListGroceryListRequest_View {
	if x != nil {
		return x.View
	}
	return ListGroceryListRequest_VIEW_UNSPECIFIED
}

type ListGroceryListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroceryListList []*GroceryList `protobuf:"bytes,1,rep,name=grocery_list_list,json=groceryListList,proto3" json:"grocery_list_list,omitempty"`
	NextPageToken   string         `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *ListGroceryListResponse) Reset() {
	*x = ListGroceryListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entpb_entpb_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListGroceryListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGroceryListResponse) ProtoMessage() {}

func (x *ListGroceryListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_entpb_entpb_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGroceryListResponse.ProtoReflect.Descriptor instead.
func (*ListGroceryListResponse) Descriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{42}
}

func (x *ListGroceryListResponse) GetGroceryListList() []*GroceryList {
	if x != nil {
		return x.GroceryListList
	}
	return nil
}

func (x *ListGroceryListResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type BatchCreateGroceryListsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Requests []*CreateGroceryListRequest `protobuf:"bytes,1,rep,name=requests,proto3" json:"requests,omitempty"`
}

func (x *BatchCreateGroceryListsRequest) Reset() {
	*x = BatchCreateGroceryListsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entpb_entpb_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchCreateGroceryListsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchCreateGroceryListsRequest) ProtoMessage() {}

func (x *BatchCreateGroceryListsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_entpb_entpb_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchCreateGroceryListsRequest.ProtoReflect.Descriptor instead.
func (*BatchCreateGroceryListsRequest) Descriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{43}
}

func (x *BatchCreateGroceryListsRequest) GetRequests() []*CreateGroceryListRequest {
	if x != nil {
		return x.Requests
	}
	return nil
}

type BatchCreateGroceryListsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroceryLists []*GroceryList `protobuf:"bytes,1,rep,name=grocery_lists,json=groceryLists,proto3" json:"grocery_lists,omitempty"`
}

func (x *BatchCreateGroceryListsResponse) Reset() {
	*x = BatchCreateGroceryListsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entpb_entpb_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchCreateGroceryListsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchCreateGroceryListsResponse) ProtoMessage() {}

func (x *BatchCreateGroceryListsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_entpb_entpb_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchCreateGroceryListsResponse.ProtoReflect.Descriptor instead.
func (*BatchCreateGroceryListsResponse) Descriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{44}
}

func (x *BatchCreateGroceryListsResponse) GetGroceryLists() []*GroceryList {
	if x != nil {
		return x.GroceryLists
	}
	return nil
}

type GroceryListItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string               `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Quantity    int64                `protobuf:"varint,3,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Note        string               `protobuf:"bytes,4,opt,name=note,proto3" json:"note,omitempty"`
	CreatedAt   *timestamp.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	GroceryList *GroceryList         `protobuf:"bytes,6,opt,name=grocery_list,json=groceryList,proto3" json:"grocery_list,omitempty"`
}

func (x *GroceryListItem) Reset() {
	*x = GroceryListItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entpb_entpb_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroceryListItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroceryListItem) ProtoMessage() {}

func (x *GroceryListItem) ProtoReflect() protoreflect.Message {
	mi := &file_entpb_entpb_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroceryListItem.ProtoReflect.Descriptor instead.
func (*GroceryListItem) Descriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{45}
}

func (x *GroceryListItem) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GroceryListItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GroceryListItem) GetQuantity() int64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *GroceryListItem) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

func (x *GroceryListItem) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *GroceryListItem) GetGroceryList() *GroceryList {
	if x != nil {
		return x.GroceryList
	}
	return nil
}

type CreateGroceryListItemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroceryListItem *GroceryListItem `protobuf:"bytes,1,opt,name=grocery_list_item,json=groceryListItem,proto3" json:"grocery_list_item,omitempty"`
}

func (x *CreateGroceryListItemRequest) Reset() {
	*x = CreateGroceryListItemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entpb_entpb_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGroceryListItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGroceryListItemRequest) ProtoMessage() {}

func (x *CreateGroceryListItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_entpb_entpb_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGroceryListItemRequest.ProtoReflect.Descriptor instead.
func (*CreateGroceryListItemRequest) Descriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{46}
}

func (x *CreateGroceryListItemRequest) GetGroceryListItem() *GroceryListItem {
	if x != nil {
		return x.GroceryListItem
	}
	return nil
}

type GetGroceryListItemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int64                          `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	View GetGroceryListItemRequest_View `protobuf:"varint,2,opt,name=view,proto3,enum=entpb.GetGroceryListItemRequest_View" json:"view,omitempty"`
}

func (x *GetGroceryListItemRequest) Reset() {
	*x = GetGroceryListItemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entpb_entpb_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroceryListItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroceryListItemRequest) ProtoMessage() {}

func (x *GetGroceryListItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_entpb_entpb_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroceryListItemRequest.ProtoReflect.Descriptor instead.
func (*GetGroceryListItemRequest) Descriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{47}
}

func (x *GetGroceryListItemRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetGroceryListItemRequest) GetView() GetGroceryListItemRequest_View {
	if x != nil {
		return x.View
	}
	return GetGroceryListItemRequest_VIEW_UNSPECIFIED
}

type UpdateGroceryListItemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroceryListItem *GroceryListItem `protobuf:"bytes,1,opt,name=grocery_list_item,json=groceryListItem,proto3" json:"grocery_list_item,omitempty"`
}

func (x *UpdateGroceryListItemRequest) Reset() {
	*x = UpdateGroceryListItemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entpb_entpb_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateGroceryListItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGroceryListItemRequest) ProtoMessage() {}

func (x *UpdateGroceryListItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_entpb_entpb_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGroceryListItemRequest.ProtoReflect.Descriptor instead.
func (*UpdateGroceryListItemRequest) Descriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{48}
}

func (x *UpdateGroceryListItemRequest) GetGroceryListItem() *GroceryListItem {
	if x != nil {
		return x.GroceryListItem
	}
	return nil
}

type DeleteGroceryListItemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteGroceryListItemRequest) Reset() {
	*x = DeleteGroceryListItemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entpb_entpb_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteGroceryListItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteGroceryListItemRequest) ProtoMessage() {}

func (x *DeleteGroceryListItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_entpb_entpb_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteGroceryListItemRequest.ProtoReflect.Descriptor instead.
func (*DeleteGroceryListItemRequest) Descriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{49}
}

func (x *DeleteGroceryListItemRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ListGroceryListItemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageSize  int32                           `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken string                          `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	View      ListGroceryListItemRequest_View `protobuf:"varint,3,opt,name=view,proto3,enum=entpb.ListGroceryListItemRequest_View" json:"view,omitempty"`
}

func (x *ListGroceryListItemRequest) Reset() {
	*x = ListGroceryListItemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entpb_entpb_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListGroceryListItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGroceryListItemRequest) ProtoMessage() {}

func (x *ListGroceryListItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_entpb_entpb_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGroceryListItemRequest.ProtoReflect.Descriptor instead.
func (*ListGroceryListItemRequest) Descriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{50}
}

func (x *ListGroceryListItemRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListGroceryListItemRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListGroceryListItemRequest) GetView() ListGroceryListItemRequest_View {
	if x != nil {
		return x.View
	}
	return ListGroceryListItemRequest_VIEW_UNSPECIFIED
}

type ListGroceryListItemResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroceryListItemList []*GroceryListItem `protobuf:"bytes,1,rep,name=grocery_list_item_list,json=groceryListItemList,proto3" json:"grocery_list_item_list,omitempty"`
	NextPageToken       string             `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *ListGroceryListItemResponse) Reset() {
	*x = ListGroceryListItemResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entpb_entpb_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListGroceryListItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGroceryListItemResponse) ProtoMessage() {}

func (x *ListGroceryListItemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_entpb_entpb_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGroceryListItemResponse.ProtoReflect.Descriptor instead.
func (*ListGroceryListItemResponse) Descriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{51}
}

func (x *ListGroceryListItemResponse) GetGroceryListItemList() []*GroceryListItem {
	if x != nil {
		return x.GroceryListItemList
	}
	return nil
}

func (x *ListGroceryListItemResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type BatchCreateGroceryListItemsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Requests []*CreateGroceryListItemRequest `protobuf:"bytes,1,rep,name=requests,proto3" json:"requests,omitempty"`
}

func (x *BatchCreateGroceryListItemsRequest) Reset() {
	*x = BatchCreateGroceryListItemsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entpb_entpb_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchCreateGroceryListItemsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchCreateGroceryListItemsRequest) ProtoMessage() {}

func (x *BatchCreateGroceryListItemsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_entpb_entpb_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchCreateGroceryListItemsRequest.ProtoReflect.Descriptor instead.
func (*BatchCreateGroceryListItemsRequest) Descriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{52}
}

func (x *BatchCreateGroceryListItemsRequest) GetRequests() []*CreateGroceryListItemRequest {
	if x != nil {
		return x.Requests
	}
	return nil
}

type BatchCreateGroceryListItemsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroceryListItems []*GroceryListItem `protobuf:"bytes,1,rep,name=grocery_list_items,json=groceryListItems,proto3" json:"grocery_list_items,omitempty"`
}

func (x *BatchCreateGroceryListItemsResponse) Reset() {
	*x = BatchCreateGroceryListItemsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entpb_entpb_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchCreateGroceryListItemsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchCreateGroceryListItemsResponse) ProtoMessage() {}

func (x *BatchCreateGroceryListItemsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_entpb_entpb_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchCreateGroceryListItemsResponse.ProtoReflect.Descriptor instead.
func (*BatchCreateGroceryListItemsResponse) Descriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{53}
}

func (x *BatchCreateGroceryListItemsResponse) GetGroceryListItems() []*GroceryListItem {
	if x != nil {
		return x.GroceryListItems
	}
	return nil
}

type GroceryListShare struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CanEdit     bool                 `protobuf:"varint,2,opt,name=can_edit,json=canEdit,proto3" json:"can_edit,omitempty"`
	CreatedAt   *timestamp.Timestamp `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	User        *User                `protobuf:"bytes,4,opt,name=user,proto3" json:"user,omitempty"`
	GroceryList *GroceryList         `protobuf:"bytes,5,opt,name=grocery_list,json=groceryList,proto3" json:"grocery_list,omitempty"`
}

func (x *GroceryListShare) Reset() {
	*x = GroceryListShare{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entpb_entpb_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroceryListShare) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroceryListShare) ProtoMessage() {}

func (x *GroceryListShare) ProtoReflect() protoreflect.Message {
	mi := &file_entpb_entpb_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroceryListShare.ProtoReflect.Descriptor instead.
func (*GroceryListShare) Descriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{54}
}

func (x *GroceryListShare) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GroceryListShare) GetCanEdit() bool {
	if x != nil {
		return x.CanEdit
	}
	return false
}

func (x *GroceryListShare) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *GroceryListShare) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *GroceryListShare) GetGroceryList() *GroceryList {
	if x != nil {
		return x.GroceryList
	}
	return nil
}

type CreateGroceryListShareRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroceryListShare *GroceryListShare `protobuf:"bytes,1,opt,name=grocery_list_share,json=groceryListShare,proto3" json:"grocery_list_share,omitempty"`
}

func (x *CreateGroceryListShareRequest) Reset() {
	*x = CreateGroceryListShareRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entpb_entpb_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGroceryListShareRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGroceryListShareRequest) ProtoMessage() {}

func (x *CreateGroceryListShareRequest) ProtoReflect() protoreflect.Message {
	mi := &file_entpb_entpb_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGroceryListShareRequest.ProtoReflect.Descriptor instead.
func (*CreateGroceryListShareRequest) Descriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{55}
}

func (x *CreateGroceryListShareRequest) GetGroceryListShare() *GroceryListShare {
	if x != nil {
		return x.GroceryListShare
	}
	return nil
}

type GetGroceryListShareRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int64                           `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	View GetGroceryListShareRequest_View `protobuf:"varint,2,opt,name=view,proto3,enum=entpb.GetGroceryListShareRequest_View" json:"view,omitempty"`
}

func (x *GetGroceryListShareRequest) Reset() {
	*x = GetGroceryListShareRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entpb_entpb_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroceryListShareRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroceryListShareRequest) ProtoMessage() {}

func (x *GetGroceryListShareRequest) ProtoReflect() protoreflect.Message {
	mi := &file_entpb_entpb_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroceryListShareRequest.ProtoReflect.Descriptor instead.
func (*GetGroceryListShareRequest) Descriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{56}
}

func (x *GetGroceryListShareRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetGroceryListShareRequest) GetView() GetGroceryListShareRequest_View {
	if x != nil {
		return x.View
	}
	return GetGroceryListShareRequest_VIEW_UNSPECIFIED
}

type UpdateGroceryListShareRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroceryListShare *GroceryListShare `protobuf:"bytes,1,opt,name=grocery_list_share,json=groceryListShare,proto3" json:"grocery_list_share,omitempty"`
}

func (x *UpdateGroceryListShareRequest) Reset() {
	*x = UpdateGroceryListShareRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entpb_entpb_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateGroceryListShareRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGroceryListShareRequest) ProtoMessage() {}

func (x *UpdateGroceryListShareRequest) ProtoReflect() protoreflect.Message {
	mi := &file_entpb_entpb_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGroceryListShareRequest.ProtoReflect.Descriptor instead.
func (*UpdateGroceryListShareRequest) Descriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{57}
}

func (x *UpdateGroceryListShareRequest) GetGroceryListShare() *GroceryListShare {
	if x != nil {
		return x.GroceryListShare
	}
	return nil
}

type DeleteGroceryListShareRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteGroceryListShareRequest) Reset() {
	*x = DeleteGroceryListShareRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entpb_entpb_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteGroceryListShareRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteGroceryListShareRequest) ProtoMessage() {}

func (x *DeleteGroceryListShareRequest) ProtoReflect() protoreflect.Message {
	mi := &file_entpb_entpb_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteGroceryListShareRequest.ProtoReflect.Descriptor instead.
func (*DeleteGroceryListShareRequest) Descriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{58}
}

func (x *DeleteGroceryListShareRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ListGroceryListShareRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageSize  int32                            `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken string                           `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	View      ListGroceryListShareRequest_View `protobuf:"varint,3,opt,name=view,proto3,enum=entpb.ListGroceryListShareRequest_View" json:"view,omitempty"`
}

func (x *ListGroceryListShareRequest) Reset() {
	*x = ListGroceryListShareRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entpb_entpb_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListGroceryListShareRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGroceryListShareRequest) ProtoMessage() {}

func (x *ListGroceryListShareRequest) ProtoReflect() protoreflect.Message {
	mi := &file_entpb_entpb_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGroceryListShareRequest.ProtoReflect.Descriptor instead.
func (*ListGroceryListShareRequest) Descriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{59}
}

func (x *ListGroceryListShareRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListGroceryListShareRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListGroceryListShareRequest) GetView() ListGroceryListShareRequest_View {
	if x != nil {
		return x.View
	}
	return ListGroceryListShareRequest_VIEW_UNSPECIFIED
}

type ListGroceryListShareResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroceryListShareList []*GroceryListShare `protobuf:"bytes,1,rep,name=grocery_list_share_list,json=groceryListShareList,proto3" json:"grocery_list_share_list,omitempty"`
	NextPageToken        string              `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *ListGroceryListShareResponse) Reset() {
	*x = ListGroceryListShareResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entpb_entpb_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListGroceryListShareResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGroceryListShareResponse) ProtoMessage() {}

func (x *ListGroceryListShareResponse) ProtoReflect() protoreflect.Message {
	mi := &file_entpb_entpb_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGroceryListShareResponse.ProtoReflect.Descriptor instead.
func (*ListGroceryListShareResponse) Descriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{60}
}

func (x *ListGroceryListShareResponse) GetGroceryListShareList() []*GroceryListShare {
	if x != nil {
		return x.GroceryListShareList
	}
	return nil
}

func (x *ListGroceryListShareResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type BatchCreateGroceryListSharesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Requests []*CreateGroceryListShareRequest `protobuf:"bytes,1,rep,name=requests,proto3" json:"requests,omitempty"`
}

func (x *BatchCreateGroceryListSharesRequest) Reset() {
	*x = BatchCreateGroceryListSharesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entpb_entpb_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchCreateGroceryListSharesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchCreateGroceryListSharesRequest) ProtoMessage() {}

func (x *BatchCreateGroceryListSharesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_entpb_entpb_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchCreateGroceryListSharesRequest.ProtoReflect.Descriptor instead.
func (*BatchCreateGroceryListSharesRequest) Descriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{61}
}

func (x *BatchCreateGroceryListSharesRequest) GetRequests() []*CreateGroceryListShareRequest {
	if x != nil {
		return x.Requests
	}
	return nil
}

type BatchCreateGroceryListSharesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroceryListShares []*GroceryListShare `protobuf:"bytes,1,rep,name=grocery_list_shares,json=groceryListShares,proto3" json:"grocery_list_shares,omitempty"`
}

func (x *BatchCreateGroceryListSharesResponse) Reset() {
	*x = BatchCreateGroceryListSharesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entpb_entpb_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchCreateGroceryListSharesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchCreateGroceryListSharesResponse) ProtoMessage() {}

func (x *BatchCreateGroceryListSharesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_entpb_entpb_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchCreateGroceryListSharesResponse.ProtoReflect.Descriptor instead.
func (*BatchCreateGroceryListSharesResponse) Descriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{62}
}

func (x *BatchCreateGroceryListSharesResponse) GetGroceryListShares() []*GroceryListShare {
	if x != nil {
		return x.GroceryListShares
	}
	return nil
}

type Movie struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int64                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name            string               `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Note            string               `protobuf:"bytes,3,opt,name=note,proto3" json:"note,omitempty"`
	Watched         bool                 `protobuf:"varint,4,opt,name=watched,proto3" json:"watched,omitempty"`
	CreatedAt       *timestamp.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	MovieCollection *MovieCollection     `protobuf:"bytes,6,opt,name=movie_collection,json=movieCollection,proto3" json:"movie_collection,omitempty"`
}

func (x *Movie) Reset() {
	*x = Movie{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entpb_entpb_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Movie) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Movie) ProtoMessage() {}

func (x *Movie) ProtoReflect() protoreflect.Message {
	mi := &file_entpb_entpb_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Movie.ProtoReflect.Descriptor instead.
func (*Movie) Descriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{63}
}

func (x *Movie) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Movie) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Movie) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

func (x *Movie) GetWatched() bool {
	if x != nil {
		return x.Watched
	}
	return false
}

func (x *Movie) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Movie) GetMovieCollection() *MovieCollection {
	if x != nil {
		return x.MovieCollection
	}
	return nil
}

type CreateMovieRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Movie *Movie `protobuf:"bytes,1,opt,name=movie,proto3" json:"movie,omitempty"`
}

func (x *CreateMovieRequest) Reset() {
	*x = CreateMovieRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entpb_entpb_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMovieRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMovieRequest) ProtoMessage() {}

func (x *CreateMovieRequest) ProtoReflect() protoreflect.Message {
	mi := &file_entpb_entpb_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMovieRequest.ProtoReflect.Descriptor instead.
func (*CreateMovieRequest) Descriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{64}
}

func (x *CreateMovieRequest) GetMovie() *Movie {
	if x != nil {
		return x.Movie
	}
	return nil
}

type GetMovieRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int64                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	View GetMovieRequest_View `protobuf:"varint,2,opt,name=view,proto3,enum=entpb.GetMovieRequest_View" json:"view,omitempty"`
}

func (x *GetMovieRequest) Reset() {
	*x = GetMovieRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entpb_entpb_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMovieRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMovieRequest) ProtoMessage() {}

func (x *GetMovieRequest) ProtoReflect() protoreflect.Message {
	mi := &file_entpb_entpb_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMovieRequest.ProtoReflect.Descriptor instead.
func (*GetMovieRequest) Descriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{65}
}

func (x *GetMovieRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetMovieRequest) GetView() GetMovieRequest_View {
	if x != nil {
		return x.View
	}
	return GetMovieRequest_VIEW_UNSPECIFIED
}

type UpdateMovieRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Movie *Movie `protobuf:"bytes,1,opt,name=movie,proto3" json:"movie,omitempty"`
}

func (x *UpdateMovieRequest) Reset() {
	*x = UpdateMovieRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entpb_entpb_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMovieRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMovieRequest) ProtoMessage() {}

func (x *UpdateMovieRequest) ProtoReflect() protoreflect.Message {
	mi := &file_entpb_entpb_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMovieRequest.ProtoReflect.Descriptor instead.
func (*UpdateMovieRequest) Descriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{66}
}

func (x *UpdateMovieRequest) GetMovie() *Movie {
	if x != nil {
		return x.Movie
	}
	return nil
}

type DeleteMovieRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteMovieRequest) Reset() {
	*x = DeleteMovieRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entpb_entpb_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMovieRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMovieRequest) ProtoMessage() {}

func (x *DeleteMovieRequest) ProtoReflect() protoreflect.Message {
	mi := &file_entpb_entpb_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMovieRequest.ProtoReflect.Descriptor instead.
func (*DeleteMovieRequest) Descriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{67}
}

func (x *DeleteMovieRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ListMovieRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageSize  int32                 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken string                `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	View      ListMovieRequest_View `protobuf:"varint,3,opt,name=view,proto3,enum=entpb.ListMovieRequest_View" json:"view,omitempty"`
}

func (x *ListMovieRequest) Reset() {
	*x = ListMovieRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entpb_entpb_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMovieRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMovieRequest) ProtoMessage() {}

func (x *ListMovieRequest) ProtoReflect() protoreflect.Message {
	mi := &file_entpb_entpb_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMovieRequest.ProtoReflect.Descriptor instead.
func (*ListMovieRequest) Descriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{68}
}

func (x *ListMovieRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListMovieRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListMovieRequest) GetView() ListMovieRequest_View {
	if x != nil {
		return x.View
	}
	return ListMovieRequest_VIEW_UNSPECIFIED
}

type ListMovieResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MovieList     []*Movie `protobuf:"bytes,1,rep,name=movie_list,json=movieList,proto3" json:"movie_list,omitempty"`
	NextPageToken string   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *ListMovieResponse) Reset() {
	*x = ListMovieResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entpb_entpb_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMovieResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMovieResponse) ProtoMessage() {}

func (x *ListMovieResponse) ProtoReflect() protoreflect.Message {
	mi := &file_entpb_entpb_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMovieResponse.ProtoReflect.Descriptor instead.
func (*ListMovieResponse) Descriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{69}
}

func (x *ListMovieResponse) GetMovieList() []*Movie {
	if x != nil {
		return x.MovieList
	}
	return nil
}

func (x *ListMovieResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type BatchCreateMoviesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Requests []*CreateMovieRequest `protobuf:"bytes,1,rep,name=requests,proto3" json:"requests,omitempty"`
}

func (x *BatchCreateMoviesRequest) Reset() {
	*x = BatchCreateMoviesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entpb_entpb_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchCreateMoviesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchCreateMoviesRequest) ProtoMessage() {}

func (x *BatchCreateMoviesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_entpb_entpb_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchCreateMoviesRequest.ProtoReflect.Descriptor instead.
func (*BatchCreateMoviesRequest) Descriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{70}
}

func (x *BatchCreateMoviesRequest) GetRequests() []*CreateMovieRequest {
	if x != nil {
		return x.Requests
	}
	return nil
}

type BatchCreateMoviesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Movies []*Movie `protobuf:"bytes,1,rep,name=movies,proto3" json:"movies,omitempty"`
}

func (x *BatchCreateMoviesResponse) Reset() {
	*x = BatchCreateMoviesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entpb_entpb_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchCreateMoviesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchCreateMoviesResponse) ProtoMessage() {}

func (x *BatchCreateMoviesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_entpb_entpb_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchCreateMoviesResponse.ProtoReflect.Descriptor instead.
func (*BatchCreateMoviesResponse) Descriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{71}
}

func (x *BatchCreateMoviesResponse) GetMovies() []*Movie {
	if x != nil {
		return x.Movies
	}
	return nil
}

type MovieCollection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                    int64                   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                  string                  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Note                  string                  `protobuf:"bytes,3,opt,name=note,proto3" json:"note,omitempty"`
	ShowWatched           bool                    `protobuf:"varint,4,opt,name=show_watched,json=showWatched,proto3" json:"show_watched,omitempty"`
	CreatedAt             *timestamp.Timestamp    `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Movies                []*Movie                `protobuf:"bytes,6,rep,name=movies,proto3" json:"movies,omitempty"`
	Owner                 *User                   `protobuf:"bytes,7,opt,name=owner,proto3" json:"owner,omitempty"`
	MovieCollectionShares []*MovieCollectionShare `protobuf:"bytes,8,rep,name=movie_collection_shares,json=movieCollectionShares,proto3" json:"movie_collection_shares,omitempty"`
}

func (x *MovieCollection) Reset() {
	*x = MovieCollection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entpb_entpb_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MovieCollection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MovieCollection) ProtoMessage() {}

func (x *MovieCollection) ProtoReflect() protoreflect.Message {
	mi := &file_entpb_entpb_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MovieCollection.ProtoReflect.Descriptor instead.
func (*MovieCollection) Descriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{72}
}

func (x *MovieCollection) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MovieCollection) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MovieCollection) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

func (x *MovieCollection) GetShowWatched() bool {
	if x != nil {
		return x.ShowWatched
	}
	return false
}

func (x *MovieCollection) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *MovieCollection) GetMovies() []*Movie {
	if x != nil {
		return x.Movies
	}
	return nil
}

func (x *MovieCollection) GetOwner() *User {
	if x != nil {
		return x.Owner
	}
	return nil
}

func (x *MovieCollection) GetMovieCollectionShares() []*MovieCollectionShare {
	if x != nil {
		return x.MovieCollectionShares
	}
	return nil
}

type CreateMovieCollectionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MovieCollection *MovieCollection `protobuf:"bytes,1,opt,name=movie_collection,json=movieCollection,proto3" json:"movie_collection,omitempty"`
}

func (x *CreateMovieCollectionRequest) Reset() {
	*x = CreateMovieCollectionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entpb_entpb_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMovieCollectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMovieCollectionRequest) ProtoMessage() {}

func (x *CreateMovieCollectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_entpb_entpb_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMovieCollectionRequest.ProtoReflect.Descriptor instead.
func (*CreateMovieCollectionRequest) Descriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{73}
}

func (x *CreateMovieCollectionRequest) GetMovieCollection() *MovieCollection {
	if x != nil {
		return x.MovieCollection
	}
	return nil
}

type GetMovieCollectionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int64                          `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	View GetMovieCollectionRequest_View `protobuf:"varint,2,opt,name=view,proto3,enum=entpb.GetMovieCollectionRequest_View" json:"view,omitempty"`
}

func (x *GetMovieCollectionRequest) Reset() {
	*x = GetMovieCollectionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entpb_entpb_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMovieCollectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMovieCollectionRequest) ProtoMessage() {}

func (x *GetMovieCollectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_entpb_entpb_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMovieCollectionRequest.ProtoReflect.Descriptor instead.
func (*GetMovieCollectionRequest) Descriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{74}
}

func (x *GetMovieCollectionRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetMovieCollectionRequest) GetView() GetMovieCollectionRequest_View {
	if x != nil {
		return x.View
	}
	return GetMovieCollectionRequest_VIEW_UNSPECIFIED
}

type UpdateMovieCollectionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MovieCollection *MovieCollection `protobuf:"bytes,1,opt,name=movie_collection,json=movieCollection,proto3" json:"movie_collection,omitempty"`
}

func (x *UpdateMovieCollectionRequest) Reset() {
	*x = UpdateMovieCollectionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entpb_entpb_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMovieCollectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMovieCollectionRequest) ProtoMessage() {}

func (x *UpdateMovieCollectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_entpb_entpb_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMovieCollectionRequest.ProtoReflect.Descriptor instead.
func (*UpdateMovieCollectionRequest) Descriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{75}
}

func (x *UpdateMovieCollectionRequest) GetMovieCollection() *MovieCollection {
	if x != nil {
		return x.MovieCollection
	}
	return nil
}

type DeleteMovieCollectionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteMovieCollectionRequest) Reset() {
	*x = DeleteMovieCollectionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entpb_entpb_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMovieCollectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMovieCollectionRequest) ProtoMessage() {}

func (x *DeleteMovieCollectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_entpb_entpb_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMovieCollectionRequest.ProtoReflect.Descriptor instead.
func (*DeleteMovieCollectionRequest) Descriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{76}
}

func (x *DeleteMovieCollectionRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ListMovieCollectionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageSize  int32                           `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken string                          `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	View      ListMovieCollectionRequest_View `protobuf:"varint,3,opt,name=view,proto3,enum=entpb.ListMovieCollectionRequest_View" json:"view,omitempty"`
}

func (x *ListMovieCollectionRequest) Reset() {
	*x = ListMovieCollectionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entpb_entpb_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMovieCollectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMovieCollectionRequest) ProtoMessage() {}

func (x *ListMovieCollectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_entpb_entpb_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMovieCollectionRequest.ProtoReflect.Descriptor instead.
func (*ListMovieCollectionRequest) Descriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{77}
}

func (x *ListMovieCollectionRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListMovieCollectionRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListMovieCollectionRequest) GetView() ListMovieCollectionRequest_View {
	if x != nil {
		return x.View
	}
	return ListMovieCollectionRequest_VIEW_UNSPECIFIED
}

type ListMovieCollectionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MovieCollectionList []*MovieCollection `protobuf:"bytes,1,rep,name=movie_collection_list,json=movieCollectionList,proto3" json:"movie_collection_list,omitempty"`
	NextPageToken       string             `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *ListMovieCollectionResponse) Reset() {
	*x = ListMovieCollectionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entpb_entpb_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMovieCollectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMovieCollectionResponse) ProtoMessage() {}

func (x *ListMovieCollectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_entpb_entpb_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMovieCollectionResponse.ProtoReflect.Descriptor instead.
func (*ListMovieCollectionResponse) Descriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{78}
}

func (x *ListMovieCollectionResponse) GetMovieCollectionList() []*MovieCollection {
	if x != nil {
		return x.MovieCollectionList
	}
	return nil
}

func (x *ListMovieCollectionResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type BatchCreateMovieCollectionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Requests []*CreateMovieCollectionRequest `protobuf:"bytes,1,rep,name=requests,proto3" json:"requests,omitempty"`
}

func (x *BatchCreateMovieCollectionsRequest) Reset() {
	*x = BatchCreateMovieCollectionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entpb_entpb_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchCreateMovieCollectionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchCreateMovieCollectionsRequest) ProtoMessage() {}

func (x *BatchCreateMovieCollectionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_entpb_entpb_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchCreateMovieCollectionsRequest.ProtoReflect.Descriptor instead.
func (*BatchCreateMovieCollectionsRequest) Descriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{79}
}

func (x *BatchCreateMovieCollectionsRequest) GetRequests() []*CreateMovieCollectionRequest {
	if x != nil {
		return x.Requests
	}
	return nil
}

type BatchCreateMovieCollectionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MovieCollections []*MovieCollection `protobuf:"bytes,1,rep,name=movie_collections,json=movieCollections,proto3" json:"movie_collections,omitempty"`
}

func (x *BatchCreateMovieCollectionsResponse) Reset() {
	*x = BatchCreateMovieCollectionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entpb_entpb_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchCreateMovieCollectionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchCreateMovieCollectionsResponse) ProtoMessage() {}

func (x *BatchCreateMovieCollectionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_entpb_entpb_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchCreateMovieCollectionsResponse.ProtoReflect.Descriptor instead.
func (*BatchCreateMovieCollectionsResponse) Descriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{80}
}

func (x *BatchCreateMovieCollectionsResponse) GetMovieCollections() []*MovieCollection {
	if x != nil {
		return x.MovieCollections
	}
	return nil
}

type MovieCollectionShare struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int64                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CanEdit         bool                 `protobuf:"varint,2,opt,name=can_edit,json=canEdit,proto3" json:"can_edit,omitempty"`
	CreatedAt       *timestamp.Timestamp `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	User            *User                `protobuf:"bytes,4,opt,name=user,proto3" json:"user,omitempty"`
	MovieCollection *MovieCollection     `protobuf:"bytes,5,opt,name=movie_collection,json=movieCollection,proto3" json:"movie_collection,omitempty"`
}

func (x *MovieCollectionShare) Reset() {
	*x = MovieCollectionShare{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entpb_entpb_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MovieCollectionShare) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MovieCollectionShare) ProtoMessage() {}

func (x *MovieCollectionShare) ProtoReflect() protoreflect.Message {
	mi := &file_entpb_entpb_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MovieCollectionShare.ProtoReflect.Descriptor instead.
func (*MovieCollectionShare) Descriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{81}
}

func (x *MovieCollectionShare) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MovieCollectionShare) GetCanEdit() bool {
	if x != nil {
		return x.CanEdit
	}
	return false
}

func (x *MovieCollectionShare) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *MovieCollectionShare) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *MovieCollectionShare) GetMovieCollection() *MovieCollection {
	if x != nil {
		return x.MovieCollection
	}
	return nil
}

type CreateMovieCollectionShareRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MovieCollectionShare *MovieCollectionShare `protobuf:"bytes,1,opt,name=movie_collection_share,json=movieCollectionShare,proto3" json:"movie_collection_share,omitempty"`
}

func (x *CreateMovieCollectionShareRequest) Reset() {
	*x = CreateMovieCollectionShareRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entpb_entpb_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMovieCollectionShareRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMovieCollectionShareRequest) ProtoMessage() {}

func (x *CreateMovieCollectionShareRequest) ProtoReflect() protoreflect.Message {
	mi := &file_entpb_entpb_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMovieCollectionShareRequest.ProtoReflect.Descriptor instead.
func (*CreateMovieCollectionShareRequest) Descriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{82}
}

func (x *CreateMovieCollectionShareRequest) GetMovieCollectionShare() *MovieCollectionShare {
	if x != nil {
		return x.MovieCollectionShare
	}
	return nil
}

type GetMovieCollectionShareRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int64                               `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	View GetMovieCollectionShareRequest_View `protobuf:"varint,2,opt,name=view,proto3,enum=entpb.GetMovieCollectionShareRequest_View" json:"view,omitempty"`
}

func (x *GetMovieCollectionShareRequest) Reset() {
	*x = GetMovieCollectionShareRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entpb_entpb_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMovieCollectionShareRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMovieCollectionShareRequest) ProtoMessage() {}

func (x *GetMovieCollectionShareRequest) ProtoReflect() protoreflect.Message {
	mi := &file_entpb_entpb_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMovieCollectionShareRequest.ProtoReflect.Descriptor instead.
func (*GetMovieCollectionShareRequest) Descriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{83}
}

func (x *GetMovieCollectionShareRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetMovieCollectionShareRequest) GetView() GetMovieCollectionShareRequest_View {
	if x != nil {
		return x.View
	}
	return GetMovieCollectionShareRequest_VIEW_UNSPECIFIED
}

type UpdateMovieCollectionShareRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MovieCollectionShare *MovieCollectionShare `protobuf:"bytes,1,opt,name=movie_collection_share,json=movieCollectionShare,proto3" json:"movie_collection_share,omitempty"`
}

func (x *UpdateMovieCollectionShareRequest) Reset() {
	*x = UpdateMovieCollectionShareRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entpb_entpb_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMovieCollectionShareRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMovieCollectionShareRequest) ProtoMessage() {}

func (x *UpdateMovieCollectionShareRequest) ProtoReflect() protoreflect.Message {
	mi := &file_entpb_entpb_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMovieCollectionShareRequest.ProtoReflect.Descriptor instead.
func (*UpdateMovieCollectionShareRequest) Descriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{84}
}

func (x *UpdateMovieCollectionShareRequest) GetMovieCollectionShare() *MovieCollectionShare {
	if x != nil {
		return x.MovieCollectionShare
	}
	return nil
}

type DeleteMovieCollectionShareRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteMovieCollectionShareRequest) Reset() {
	*x = DeleteMovieCollectionShareRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entpb_entpb_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMovieCollectionShareRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMovieCollectionShareRequest) ProtoMessage() {}

func (x *DeleteMovieCollectionShareRequest) ProtoReflect() protoreflect.Message {
	mi := &file_entpb_entpb_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMovieCollectionShareRequest.ProtoReflect.Descriptor instead.
func (*DeleteMovieCollectionShareRequest) Descriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{85}
}

func (x *DeleteMovieCollectionShareRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ListMovieCollectionShareRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageSize  int32                                `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken string                               `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	View      ListMovieCollectionShareRequest_View `protobuf:"varint,3,opt,name=view,proto3,enum=entpb.ListMovieCollectionShareRequest_View" json:"view,omitempty"`
}

func (x *ListMovieCollectionShareRequest) Reset() {
	*x = ListMovieCollectionShareRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entpb_entpb_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMovieCollectionShareRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMovieCollectionShareRequest) ProtoMessage() {}

func (x *ListMovieCollectionShareRequest) ProtoReflect() protoreflect.Message {
	mi := &file_entpb_entpb_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMovieCollectionShareRequest.ProtoReflect.Descriptor instead.
func (*ListMovieCollectionShareRequest) Descriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{86}
}

func (x *ListMovieCollectionShareRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListMovieCollectionShareRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListMovieCollectionShareRequest) GetView() ListMovieCollectionShareRequest_View {
	if x != nil {
		return x.View
	}
	return ListMovieCollectionShareRequest_VIEW_UNSPECIFIED
}

type ListMovieCollectionShareResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MovieCollectionShareList []*MovieCollectionShare `protobuf:"bytes,1,rep,name=movie_collection_share_list,json=movieCollectionShareList,proto3" json:"movie_collection_share_list,omitempty"`
	NextPageToken            string                  `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *ListMovieCollectionShareResponse) Reset() {
	*x = ListMovieCollectionShareResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entpb_entpb_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMovieCollectionShareResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMovieCollectionShareResponse) ProtoMessage() {}

func (x *ListMovieCollectionShareResponse) ProtoReflect() protoreflect.Message {
	mi := &file_entpb_entpb_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMovieCollectionShareResponse.ProtoReflect.Descriptor instead.
func (*ListMovieCollectionShareResponse) Descriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{87}
}

func (x *ListMovieCollectionShareResponse) GetMovieCollectionShareList() []*MovieCollectionShare {
	if x != nil {
		return x.MovieCollectionShareList
	}
	return nil
}

func (x *ListMovieCollectionShareResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type BatchCreateMovieCollectionSharesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Requests []*CreateMovieCollectionShareRequest `protobuf:"bytes,1,rep,name=requests,proto3" json:"requests,omitempty"`
}

func (x *BatchCreateMovieCollectionSharesRequest) Reset() {
	*x = BatchCreateMovieCollectionSharesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entpb_entpb_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchCreateMovieCollectionSharesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchCreateMovieCollectionSharesRequest) ProtoMessage() {}

func (x *BatchCreateMovieCollectionSharesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_entpb_entpb_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchCreateMovieCollectionSharesRequest.ProtoReflect.Descriptor instead.
func (*BatchCreateMovieCollectionSharesRequest) Descriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{88}
}

func (x *BatchCreateMovieCollectionSharesRequest) GetRequests() []*CreateMovieCollectionShareRequest {
	if x != nil {
		return x.Requests
	}
	return nil
}

type BatchCreateMovieCollectionSharesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MovieCollectionShares []*MovieCollectionShare `protobuf:"bytes,1,rep,name=movie_collection_shares,json=movieCollectionShares,proto3" json:"movie_collection_shares,omitempty"`
}

func (x *BatchCreateMovieCollectionSharesResponse) Reset() {
	*x = BatchCreateMovieCollectionSharesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entpb_entpb_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchCreateMovieCollectionSharesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchCreateMovieCollectionSharesResponse) ProtoMessage() {}

func (x *BatchCreateMovieCollectionSharesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_entpb_entpb_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchCreateMovieCollectionSharesResponse.ProtoReflect.Descriptor instead.
func (*BatchCreateMovieCollectionSharesResponse) Descriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{89}
}

func (x *BatchCreateMovieCollectionSharesResponse) GetMovieCollectionShares() []*MovieCollectionShare {
	if x != nil {
		return x.MovieCollectionShares
	}
	return nil
}

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                    int64                   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	DisplayName           string                  `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	NameChanges           int32                   `protobuf:"varint,3,opt,name=name_changes,json=nameChanges,proto3" json:"name_changes,omitempty"`
	Email                 string                  `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	Verified              bool                    `protobuf:"varint,5,opt,name=verified,proto3" json:"verified,omitempty"`
	Locked                bool                    `protobuf:"varint,6,opt,name=locked,proto3" json:"locked,omitempty"`
	LastLogin             *timestamp.Timestamp    `protobuf:"bytes,7,opt,name=last_login,json=lastLogin,proto3" json:"last_login,omitempty"`
	CreatedAt             *timestamp.Timestamp    `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	AmazonShares          []*AmazonShare          `protobuf:"bytes,9,rep,name=amazon_shares,json=amazonShares,proto3" json:"amazon_shares,omitempty"`
	AmazonLists           []*AmazonList           `protobuf:"bytes,10,rep,name=amazon_lists,json=amazonLists,proto3" json:"amazon_lists,omitempty"`
	Drinks                []*Drink                `protobuf:"bytes,11,rep,name=drinks,proto3" json:"drinks,omitempty"`
	GroceryLists          []*GroceryList          `protobuf:"bytes,12,rep,name=grocery_lists,json=groceryLists,proto3" json:"grocery_lists,omitempty"`
	GroceryListShares     []*GroceryListShare     `protobuf:"bytes,13,rep,name=grocery_list_shares,json=groceryListShares,proto3" json:"grocery_list_shares,omitempty"`
	MovieCollections      []*MovieCollection      `protobuf:"bytes,14,rep,name=movie_collections,json=movieCollections,proto3" json:"movie_collections,omitempty"`
	MovieCollectionShares []*MovieCollectionShare `protobuf:"bytes,15,rep,name=movie_collection_shares,json=movieCollectionShares,proto3" json:"movie_collection_shares,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entpb_entpb_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_entpb_entpb_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{90}
}

func (x *User) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *User) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *User) GetNameChanges() int32 {
	if x != nil {
		return x.NameChanges
	}
	return 0
}

func (x *User) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *User) GetVerified() bool {
	if x != nil {
		return x.Verified
	}
	return false
}

func (x *User) GetLocked() bool {
	if x != nil {
		return x.Locked
	}
	return false
}

func (x *User) GetLastLogin() *timestamp.Timestamp {
	if x != nil {
		return x.LastLogin
	}
	return nil
}

func (x *User) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *User) GetAmazonShares() []*AmazonShare {
	if x != nil {
		return x.AmazonShares
	}
	return nil
}

func (x *User) GetAmazonLists() []*AmazonList {
	if x != nil {
		return x.AmazonLists
	}
	return nil
}

func (x *User) GetDrinks() []*Drink {
	if x != nil {
		return x.Drinks
	}
	return nil
}

func (x *User) GetGroceryLists() []*GroceryList {
	if x != nil {
		return x.GroceryLists
	}
	return nil
}

func (x *User) GetGroceryListShares() []*GroceryListShare {
	if x != nil {
		return x.GroceryListShares
	}
	return nil
}

func (x *User) GetMovieCollections() []*MovieCollection {
	if x != nil {
		return x.MovieCollections
	}
	return nil
}

func (x *User) GetMovieCollectionShares() []*MovieCollectionShare {
	if x != nil {
		return x.MovieCollectionShares
	}
	return nil
}

type CreateUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User *User `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *CreateUserRequest) Reset() {
	*x = CreateUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entpb_entpb_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserRequest) ProtoMessage() {}

func (x *CreateUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_entpb_entpb_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserRequest.ProtoReflect.Descriptor instead.
func (*CreateUserRequest) Descriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{91}
}

func (x *CreateUserRequest) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

type GetUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int64               `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	View GetUserRequest_View `protobuf:"varint,2,opt,name=view,proto3,enum=entpb.GetUserRequest_View" json:"view,omitempty"`
}

func (x *GetUserRequest) Reset() {
	*x = GetUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entpb_entpb_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserRequest) ProtoMessage() {}

func (x *GetUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_entpb_entpb_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserRequest.ProtoReflect.Descriptor instead.
func (*GetUserRequest) Descriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{92}
}

func (x *GetUserRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetUserRequest) GetView() GetUserRequest_View {
	if x != nil {
		return x.View
	}
	return GetUserRequest_VIEW_UNSPECIFIED
}

type UpdateUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User *User `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *UpdateUserRequest) Reset() {
	*x = UpdateUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entpb_entpb_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserRequest) ProtoMessage() {}

func (x *UpdateUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_entpb_entpb_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserRequest) Descriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{93}
}

func (x *UpdateUserRequest) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

type DeleteUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteUserRequest) Reset() {
	*x = DeleteUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entpb_entpb_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserRequest) ProtoMessage() {}

func (x *DeleteUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_entpb_entpb_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserRequest.ProtoReflect.Descriptor instead.
func (*DeleteUserRequest) Descriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{94}
}

func (x *DeleteUserRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ListUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageSize  int32                `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken string               `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	View      ListUserRequest_View `protobuf:"varint,3,opt,name=view,proto3,enum=entpb.ListUserRequest_View" json:"view,omitempty"`
}

func (x *ListUserRequest) Reset() {
	*x = ListUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entpb_entpb_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserRequest) ProtoMessage() {}

func (x *ListUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_entpb_entpb_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserRequest.ProtoReflect.Descriptor instead.
func (*ListUserRequest) Descriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{95}
}

func (x *ListUserRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListUserRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListUserRequest) GetView() ListUserRequest_View {
	if x != nil {
		return x.View
	}
	return ListUserRequest_VIEW_UNSPECIFIED
}

type ListUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserList      []*User `protobuf:"bytes,1,rep,name=user_list,json=userList,proto3" json:"user_list,omitempty"`
	NextPageToken string  `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *ListUserResponse) Reset() {
	*x = ListUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entpb_entpb_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserResponse) ProtoMessage() {}

func (x *ListUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_entpb_entpb_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserResponse.ProtoReflect.Descriptor instead.
func (*ListUserResponse) Descriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{96}
}

func (x *ListUserResponse) GetUserList() []*User {
	if x != nil {
		return x.UserList
	}
	return nil
}

func (x *ListUserResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type BatchCreateUsersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Requests []*CreateUserRequest `protobuf:"bytes,1,rep,name=requests,proto3" json:"requests,omitempty"`
}

func (x *BatchCreateUsersRequest) Reset() {
	*x = BatchCreateUsersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entpb_entpb_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchCreateUsersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchCreateUsersRequest) ProtoMessage() {}

func (x *BatchCreateUsersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_entpb_entpb_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchCreateUsersRequest.ProtoReflect.Descriptor instead.
func (*BatchCreateUsersRequest) Descriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{97}
}

func (x *BatchCreateUsersRequest) GetRequests() []*CreateUserRequest {
	if x != nil {
		return x.Requests
	}
	return nil
}

type BatchCreateUsersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Users []*User `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
}

func (x *BatchCreateUsersResponse) Reset() {
	*x = BatchCreateUsersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entpb_entpb_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchCreateUsersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchCreateUsersResponse) ProtoMessage() {}

func (x *BatchCreateUsersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_entpb_entpb_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchCreateUsersResponse.ProtoReflect.Descriptor instead.
func (*BatchCreateUsersResponse) Descriptor() ([]byte, []int) {
	return file_entpb_entpb_proto_rawDescGZIP(), []int{98}
}

func (x *BatchCreateUsersResponse) GetUsers() []*User {
	if x != nil {
		return x.Users
	}
	return nil
}

var File_entpb_entpb_proto protoreflect.FileDescriptor

var file_entpb_entpb_proto_rawDesc = []byte{
	0x0a, 0x11, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2f, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x05, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xec, 0x01, 0x0a, 0x0a, 0x41, 0x6d, 0x61,
	0x7a, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x37, 0x0a, 0x0d, 0x61, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x5f, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x6e, 0x74, 0x70,
	0x62, 0x2e, 0x41, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x0c, 0x61,
	0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x21, 0x0a, 0x05, 0x6f,
	0x77, 0x6e, 0x65, 0x72, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x65, 0x6e, 0x74,
	0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x37,
	0x0a, 0x0d, 0x61, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x41, 0x6d,
	0x61, 0x7a, 0x6f, 0x6e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x0c, 0x61, 0x6d, 0x61, 0x7a, 0x6f,
	0x6e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x73, 0x22, 0x4d, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x41, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x32, 0x0a, 0x0b, 0x61, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e,
	0x41, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x0a, 0x61, 0x6d, 0x61, 0x7a,
	0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x98, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x41, 0x6d,
	0x61, 0x7a, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x34, 0x0a, 0x04, 0x76, 0x69, 0x65, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e,
	0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x52,
	0x04, 0x76, 0x69, 0x65, 0x77, 0x22, 0x3a, 0x0a, 0x04, 0x56, 0x69, 0x65, 0x77, 0x12, 0x14, 0x0a,
	0x10, 0x56, 0x49, 0x45, 0x57, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x42, 0x41, 0x53, 0x49, 0x43, 0x10, 0x01, 0x12, 0x11,
	0x0a, 0x0d, 0x57, 0x49, 0x54, 0x48, 0x5f, 0x45, 0x44, 0x47, 0x45, 0x5f, 0x49, 0x44, 0x53, 0x10,
	0x02, 0x22, 0x4d, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6d, 0x61, 0x7a, 0x6f,
	0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x0b,
	0x61, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x41, 0x6d, 0x61, 0x7a, 0x6f, 0x6e,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x0a, 0x61, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74,
	0x22, 0x29, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6d, 0x61, 0x7a, 0x6f, 0x6e,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0xc6, 0x01, 0x0a, 0x15,
	0x4c, 0x69, 0x73, 0x74, 0x41, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x35, 0x0a, 0x04, 0x76, 0x69, 0x65, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x21, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6d, 0x61, 0x7a,
	0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x56, 0x69,
	0x65, 0x77, 0x52, 0x04, 0x76, 0x69, 0x65, 0x77, 0x22, 0x3a, 0x0a, 0x04, 0x56, 0x69, 0x65, 0x77,
	0x12, 0x14, 0x0a, 0x10, 0x56, 0x49, 0x45, 0x57, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x42, 0x41, 0x53, 0x49, 0x43, 0x10,
	0x01, 0x12, 0x11, 0x0a, 0x0d, 0x57, 0x49, 0x54, 0x48, 0x5f, 0x45, 0x44, 0x47, 0x45, 0x5f, 0x49,
	0x44, 0x53, 0x10, 0x02, 0x22, 0x7d, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6d, 0x61, 0x7a,
	0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b,
	0x0a, 0x10, 0x61, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62,
	0x2e, 0x41, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x0e, 0x61, 0x6d, 0x61,
	0x7a, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x6e,
	0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x22, 0x5b, 0x0a, 0x1d, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x41, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x08, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73,
	0x22, 0x56, 0x0a, 0x1e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41,
	0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x34, 0x0a, 0x0c, 0x61, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62,
	0x2e, 0x41, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x0b, 0x61, 0x6d, 0x61,
	0x7a, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x73, 0x22, 0xd9, 0x03, 0x0a, 0x0b, 0x41, 0x6d, 0x61,
	0x7a, 0x6f, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x72, 0x61, 0x6e,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x31, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x31, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x32, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x32, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69,
	0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x7a, 0x69, 0x70, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x7a, 0x69, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x78, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x74,
	0x61, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x32, 0x0a, 0x0b, 0x61, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x41, 0x6d,
	0x61, 0x7a, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x0a, 0x61, 0x6d, 0x61, 0x7a, 0x6f, 0x6e,
	0x4c, 0x69, 0x73, 0x74, 0x22, 0x51, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x6d,
	0x61, 0x7a, 0x6f, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x35, 0x0a, 0x0c, 0x61, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x41,
	0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x0b, 0x61, 0x6d, 0x61, 0x7a,
	0x6f, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x22, 0x9a, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x41,
	0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x35, 0x0a, 0x04, 0x76, 0x69, 0x65, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x21, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6d, 0x61, 0x7a, 0x6f,
	0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x56, 0x69,
	0x65, 0x77, 0x52, 0x04, 0x76, 0x69, 0x65, 0x77, 0x22, 0x3a, 0x0a, 0x04, 0x56, 0x69, 0x65, 0x77,
	0x12, 0x14, 0x0a, 0x10, 0x56, 0x49, 0x45, 0x57, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x42, 0x41, 0x53, 0x49, 0x43, 0x10,
	0x01, 0x12, 0x11, 0x0a, 0x0d, 0x57, 0x49, 0x54, 0x48, 0x5f, 0x45, 0x44, 0x47, 0x45, 0x5f, 0x49,
	0x44, 0x53, 0x10, 0x02, 0x22, 0x51, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6d,
	0x61, 0x7a, 0x6f, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x35, 0x0a, 0x0c, 0x61, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x41,
	0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x0b, 0x61, 0x6d, 0x61, 0x7a,
	0x6f, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x22, 0x2a, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x41, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x22, 0xc8, 0x01, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6d, 0x61, 0x7a,
	0x6f, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70,
	0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x36, 0x0a, 0x04, 0x76, 0x69,
	0x65, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x52, 0x04, 0x76, 0x69,
	0x65, 0x77, 0x22, 0x3a, 0x0a, 0x04, 0x56, 0x69, 0x65, 0x77, 0x12, 0x14, 0x0a, 0x10, 0x56, 0x49,
	0x45, 0x57, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x09, 0x0a, 0x05, 0x42, 0x41, 0x53, 0x49, 0x43, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x57,
	0x49, 0x54, 0x48, 0x5f, 0x45, 0x44, 0x47, 0x45, 0x5f, 0x49, 0x44, 0x53, 0x10, 0x02, 0x22, 0x81,
	0x01, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x11, 0x61, 0x6d,
	0x61, 0x7a, 0x6f, 0x6e, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x41, 0x6d,
	0x61, 0x7a, 0x6f, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x0f, 0x61, 0x6d, 0x61, 0x7a, 0x6f,
	0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65,
	0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x22, 0x5d, 0x0a, 0x1e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x41, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x08, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x73, 0x22, 0x5a, 0x0a, 0x1f, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x41, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x0d, 0x61, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x5f, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x6e,
	0x74, 0x70, 0x62, 0x2e, 0x41, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x0c, 0x61, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x22, 0xc8, 0x01,
	0x0a, 0x0b, 0x41, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x63, 0x61, 0x6e, 0x5f, 0x65, 0x64, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x63, 0x61, 0x6e, 0x45, 0x64, 0x69, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x1f, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0b, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04,
	0x75, 0x73, 0x65, 0x72, 0x12, 0x32, 0x0a, 0x0b, 0x61, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x65, 0x6e, 0x74, 0x70,
	0x62, 0x2e, 0x41, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x0a, 0x61, 0x6d,
	0x61, 0x7a, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x51, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x41, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x0c, 0x61, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x5f, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x6e, 0x74,
	0x70, 0x62, 0x2e, 0x41, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x0b,
	0x61, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x22, 0x9a, 0x01, 0x0a, 0x15,
	0x47, 0x65, 0x74, 0x41, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x35, 0x0a, 0x04, 0x76, 0x69, 0x65, 0x77, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x41,
	0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x52, 0x04, 0x76, 0x69, 0x65, 0x77, 0x22, 0x3a, 0x0a, 0x04,
	0x56, 0x69, 0x65, 0x77, 0x12, 0x14, 0x0a, 0x10, 0x56, 0x49, 0x45, 0x57, 0x5f, 0x55, 0x4e, 0x53,
	0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x42, 0x41,
	0x53, 0x49, 0x43, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x57, 0x49, 0x54, 0x48, 0x5f, 0x45, 0x44,
	0x47, 0x45, 0x5f, 0x49, 0x44, 0x53, 0x10, 0x02, 0x22, 0x51, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x41, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x0c, 0x61, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x5f, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x6e, 0x74,
	0x70, 0x62, 0x2e, 0x41, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x0b,
	0x61, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x22, 0x2a, 0x0a, 0x18, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x53, 0x68, 0x61, 0x72, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0xc8, 0x01, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74,
	0x41, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x36,
	0x0a, 0x04, 0x76, 0x69, 0x65, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x65,
	0x6e, 0x74, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x56, 0x69, 0x65, 0x77,
	0x52, 0x04, 0x76, 0x69, 0x65, 0x77, 0x22, 0x3a, 0x0a, 0x04, 0x56, 0x69, 0x65, 0x77, 0x12, 0x14,
	0x0a, 0x10, 0x56, 0x49, 0x45, 0x57, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x42, 0x41, 0x53, 0x49, 0x43, 0x10, 0x01, 0x12,
	0x11, 0x0a, 0x0d, 0x57, 0x49, 0x54, 0x48, 0x5f, 0x45, 0x44, 0x47, 0x45, 0x5f, 0x49, 0x44, 0x53,
	0x10, 0x02, 0x22, 0x81, 0x01, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6d, 0x61, 0x7a, 0x6f,
	0x6e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e,
	0x0a, 0x11, 0x61, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x6e, 0x74, 0x70,
	0x62, 0x2e, 0x41, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x0f, 0x61,
	0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x26,
	0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67,
	0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x5d, 0x0a, 0x1e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x53, 0x68, 0x61, 0x72, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x6e, 0x74,
	0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x08, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x73, 0x22, 0x5a, 0x0a, 0x1f, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x41, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x0d, 0x61, 0x6d, 0x61, 0x7a,
	0x6f, 0x6e, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x41, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x52, 0x0c, 0x61, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x53, 0x68, 0x61, 0x72, 0x65,
	0x73, 0x22, 0xa1, 0x03, 0x0a, 0x05, 0x44, 0x72, 0x69, 0x6e, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x65, 0x6e, 0x74, 0x70,
	0x62, 0x2e, 0x44, 0x72, 0x69, 0x6e, 0x6b, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x62, 0x76, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x03, 0x61, 0x62, 0x76, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x79, 0x65, 0x61, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x79, 0x65, 0x61, 0x72,
	0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x61, 0x79, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x03, 0x64, 0x61, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x74, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x12, 0x39, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x21, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x22, 0x88, 0x01, 0x0a, 0x04, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x0c, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x4b, 0x4e,
	0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4c, 0x49,
	0x47, 0x48, 0x54, 0x5f, 0x42, 0x45, 0x45, 0x52, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x43, 0x52, 0x41, 0x46, 0x54, 0x5f, 0x42, 0x45, 0x45, 0x52, 0x10, 0x02, 0x12,
	0x0d, 0x0a, 0x09, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x57, 0x49, 0x4e, 0x45, 0x10, 0x03, 0x12, 0x0f,
	0x0a, 0x0b, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4c, 0x49, 0x51, 0x55, 0x4f, 0x52, 0x10, 0x04, 0x12,
	0x11, 0x0a, 0x0d, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x48, 0x49, 0x47, 0x48, 0x42, 0x41, 0x4c, 0x4c,
	0x10, 0x05, 0x12, 0x11, 0x0a, 0x0d, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x4f, 0x43, 0x4b, 0x54,
	0x41, 0x49, 0x4c, 0x10, 0x06, 0x22, 0x38, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44,
	0x72, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x05, 0x64,
	0x72, 0x69, 0x6e, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x65, 0x6e, 0x74,
	0x70, 0x62, 0x2e, 0x44, 0x72, 0x69, 0x6e, 0x6b, 0x52, 0x05, 0x64, 0x72, 0x69, 0x6e, 0x6b, 0x22,
	0x8e, 0x01, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x44, 0x72, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x2f, 0x0a, 0x04, 0x76, 0x69, 0x65, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1b, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x72, 0x69,
	0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x52, 0x04,
	0x76, 0x69, 0x65, 0x77, 0x22, 0x3a, 0x0a, 0x04, 0x56, 0x69, 0x65, 0x77, 0x12, 0x14, 0x0a, 0x10,
	0x56, 0x49, 0x45, 0x57, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x42, 0x41, 0x53, 0x49, 0x43, 0x10, 0x01, 0x12, 0x11, 0x0a,
	0x0d, 0x57, 0x49, 0x54, 0x48, 0x5f, 0x45, 0x44, 0x47, 0x45, 0x5f, 0x49, 0x44, 0x53, 0x10, 0x02,
	0x22, 0x38, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x72, 0x69, 0x6e, 0x6b, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x05, 0x64, 0x72, 0x69, 0x6e, 0x6b, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x44, 0x72,
	0x69, 0x6e, 0x6b, 0x52, 0x05, 0x64, 0x72, 0x69, 0x6e, 0x6b, 0x22, 0x24, 0x0a, 0x12, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x44, 0x72, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x22, 0xbc, 0x01, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x72, 0x69, 0x6e, 0x6b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x30, 0x0a, 0x04, 0x76, 0x69, 0x65, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1c, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x72, 0x69, 0x6e,
	0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x52, 0x04, 0x76,
	0x69, 0x65, 0x77, 0x22, 0x3a, 0x0a, 0x04, 0x56, 0x69, 0x65, 0x77, 0x12, 0x14, 0x0a, 0x10, 0x56,
	0x49, 0x45, 0x57, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x09, 0x0a, 0x05, 0x42, 0x41, 0x53, 0x49, 0x43, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d,
	0x57, 0x49, 0x54, 0x48, 0x5f, 0x45, 0x44, 0x47, 0x45, 0x5f, 0x49, 0x44, 0x53, 0x10, 0x02, 0x22,
	0x68, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x72, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x0a, 0x64, 0x72, 0x69, 0x6e, 0x6b, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62,
	0x2e, 0x44, 0x72, 0x69, 0x6e, 0x6b, 0x52, 0x09, 0x64, 0x72, 0x69, 0x6e, 0x6b, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74,
	0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x51, 0x0a, 0x18, 0x42, 0x61, 0x74,
	0x63, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x72, 0x69, 0x6e, 0x6b, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x72, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x52, 0x08, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x22, 0x41, 0x0a, 0x19,
	0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x72, 0x69, 0x6e, 0x6b,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x06, 0x64, 0x72, 0x69,
	0x6e, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x65, 0x6e, 0x74, 0x70,
	0x62, 0x2e, 0x44, 0x72, 0x69, 0x6e, 0x6b, 0x52, 0x06, 0x64, 0x72, 0x69, 0x6e, 0x6b, 0x73, 0x22,
	0xce, 0x02, 0x0a, 0x0b, 0x47, 0x72, 0x6f, 0x63, 0x65, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x72, 0x63, 0x68, 0x69,
	0x76, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x61, 0x72, 0x63, 0x68, 0x69,
	0x76, 0x65, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x44,
	0x0a, 0x12, 0x67, 0x72, 0x6f, 0x63, 0x65, 0x72, 0x79, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x65, 0x6e, 0x74,
	0x70, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x63, 0x65, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x10, 0x67, 0x72, 0x6f, 0x63, 0x65, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x49,
	0x74, 0x65, 0x6d, 0x73, 0x12, 0x21, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x47, 0x0a, 0x13, 0x67, 0x72, 0x6f, 0x63, 0x65,
	0x72, 0x79, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x18, 0x08,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x47, 0x72, 0x6f,
	0x63, 0x65, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x11, 0x67,
	0x72, 0x6f, 0x63, 0x65, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x73,
	0x22, 0x51, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x63, 0x65, 0x72,
	0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x0c,
	0x67, 0x72, 0x6f, 0x63, 0x65, 0x72, 0x79, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x63, 0x65,
	0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x0b, 0x67, 0x72, 0x6f, 0x63, 0x65, 0x72, 0x79, 0x4c,
	0x69, 0x73, 0x74, 0x22, 0x9a, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x63, 0x65,
	0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x35, 0x0a,
	0x04, 0x76, 0x69, 0x65, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x65, 0x6e,
	0x74, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x63, 0x65, 0x72, 0x79, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x52, 0x04,
	0x76, 0x69, 0x65, 0x77, 0x22, 0x3a, 0x0a, 0x04, 0x56, 0x69, 0x65, 0x77, 0x12, 0x14, 0x0a, 0x10,
	0x56, 0x49, 0x45, 0x57, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x42, 0x41, 0x53, 0x49, 0x43, 0x10, 0x01, 0x12, 0x11, 0x0a,
	0x0d, 0x57, 0x49, 0x54, 0x48, 0x5f, 0x45, 0x44, 0x47, 0x45, 0x5f, 0x49, 0x44, 0x53, 0x10, 0x02,
	0x22, 0x51, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x63, 0x65, 0x72,
	0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x0c,
	0x67, 0x72, 0x6f, 0x63, 0x65, 0x72, 0x79, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x63, 0x65,
	0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x0b, 0x67, 0x72, 0x6f, 0x63, 0x65, 0x72, 0x79, 0x4c,
	0x69, 0x73, 0x74, 0x22, 0x2a, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x72, 0x6f,
	0x63, 0x65, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22,
	0xc8, 0x01, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x63, 0x65, 0x72, 0x79, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70,
	0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x67,
	0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x36, 0x0a, 0x04, 0x76, 0x69, 0x65, 0x77, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x47, 0x72, 0x6f, 0x63, 0x65, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x52, 0x04, 0x76, 0x69, 0x65, 0x77, 0x22, 0x3a,
	0x0a, 0x04, 0x56, 0x69, 0x65, 0x77, 0x12, 0x14, 0x0a, 0x10, 0x56, 0x49, 0x45, 0x57, 0x5f, 0x55,
	0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05,
	0x42, 0x41, 0x53, 0x49, 0x43, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x57, 0x49, 0x54, 0x48, 0x5f,
	0x45, 0x44, 0x47, 0x45, 0x5f, 0x49, 0x44, 0x53, 0x10, 0x02, 0x22, 0x81, 0x01, 0x0a, 0x17, 0x4c,
	0x69, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x63, 0x65, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x11, 0x67, 0x72, 0x6f, 0x63, 0x65, 0x72,
	0x79, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x63, 0x65, 0x72,
	0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x0f, 0x67, 0x72, 0x6f, 0x63, 0x65, 0x72, 0x79, 0x4c, 0x69,
	0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70,
	0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x5d,
	0x0a, 0x1e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f,
	0x63, 0x65, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x3b, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x47, 0x72, 0x6f, 0x63, 0x65, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x52, 0x08, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x22, 0x5a, 0x0a,
	0x1f, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x63,
	0x65, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x37, 0x0a, 0x0d, 0x67, 0x72, 0x6f, 0x63, 0x65, 0x72, 0x79, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e,
	0x47, 0x72, 0x6f, 0x63, 0x65, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x0c, 0x67, 0x72, 0x6f,
	0x63, 0x65, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x73, 0x22, 0xd7, 0x01, 0x0a, 0x0f, 0x47, 0x72,
	0x6f, 0x63, 0x65, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x74,
	0x65, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x35, 0x0a, 0x0c,
	0x67, 0x72, 0x6f, 0x63, 0x65, 0x72, 0x79, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x63, 0x65,
	0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x0b, 0x67, 0x72, 0x6f, 0x63, 0x65, 0x72, 0x79, 0x4c,
	0x69, 0x73, 0x74, 0x22, 0x62, 0x0a, 0x1c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f,
	0x63, 0x65, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x42, 0x0a, 0x11, 0x67, 0x72, 0x6f, 0x63, 0x65, 0x72, 0x79, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x63, 0x65, 0x72, 0x79, 0x4c, 0x69,
	0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0f, 0x67, 0x72, 0x6f, 0x63, 0x65, 0x72, 0x79, 0x4c,
	0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x22, 0xa2, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x47,
	0x72, 0x6f, 0x63, 0x65, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x39, 0x0a, 0x04, 0x76, 0x69, 0x65, 0x77, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x47,
	0x72, 0x6f, 0x63, 0x65, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x52, 0x04, 0x76, 0x69, 0x65, 0x77,
	0x22, 0x3a, 0x0a, 0x04, 0x56, 0x69, 0x65, 0x77, 0x12, 0x14, 0x0a, 0x10, 0x56, 0x49, 0x45, 0x57,
	0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x09,
	0x0a, 0x05, 0x42, 0x41, 0x53, 0x49, 0x43, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x57, 0x49, 0x54,
	0x48, 0x5f, 0x45, 0x44, 0x47, 0x45, 0x5f, 0x49, 0x44, 0x53, 0x10, 0x02, 0x22, 0x62, 0x0a, 0x1c,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x63, 0x65, 0x72, 0x79, 0x4c, 0x69, 0x73,
	0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x42, 0x0a, 0x11,
	0x67, 0x72, 0x6f, 0x63, 0x65, 0x72, 0x79, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x69, 0x74, 0x65,
	0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e,
	0x47, 0x72, 0x6f, 0x63, 0x65, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x0f, 0x67, 0x72, 0x6f, 0x63, 0x65, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d,
	0x22, 0x2e, 0x0a, 0x1c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x63, 0x65, 0x72,
	0x79, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x22, 0xd0, 0x01, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x63, 0x65, 0x72, 0x79,
	0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x3a, 0x0a, 0x04, 0x76,
	0x69, 0x65, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x65, 0x6e, 0x74, 0x70,
	0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x63, 0x65, 0x72, 0x79, 0x4c, 0x69, 0x73,
	0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x56, 0x69, 0x65,
	0x77, 0x52, 0x04, 0x76, 0x69, 0x65, 0x77, 0x22, 0x3a, 0x0a, 0x04, 0x56, 0x69, 0x65, 0x77, 0x12,
	0x14, 0x0a, 0x10, 0x56, 0x49, 0x45, 0x57, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46,
	0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x42, 0x41, 0x53, 0x49, 0x43, 0x10, 0x01,
	0x12, 0x11, 0x0a, 0x0d, 0x57, 0x49, 0x54, 0x48, 0x5f, 0x45, 0x44, 0x47, 0x45, 0x5f, 0x49, 0x44,
	0x53, 0x10, 0x02, 0x22, 0x92, 0x01, 0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x63,
	0x65, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x16, 0x67, 0x72, 0x6f, 0x63, 0x65, 0x72, 0x79, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x63,
	0x65, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x13, 0x67, 0x72, 0x6f,
	0x63, 0x65, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50,
	0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x65, 0x0a, 0x22, 0x42, 0x61, 0x74, 0x63,
	0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x63, 0x65, 0x72, 0x79, 0x4c, 0x69,
	0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3f,
	0x0a, 0x08, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x23, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47,
	0x72, 0x6f, 0x63, 0x65, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x08, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x22,
	0x6b, 0x0a, 0x23, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72,
	0x6f, 0x63, 0x65, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x12, 0x67, 0x72, 0x6f, 0x63, 0x65, 0x72,
	0x79, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x63, 0x65,
	0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x10, 0x67, 0x72, 0x6f, 0x63,
	0x65, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xd0, 0x01, 0x0a,
	0x10, 0x47, 0x72, 0x6f, 0x63, 0x65, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x68, 0x61, 0x72,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x61, 0x6e, 0x5f, 0x65, 0x64, 0x69, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x63, 0x61, 0x6e, 0x45, 0x64, 0x69, 0x74, 0x12, 0x39, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1f, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x35, 0x0a, 0x0c, 0x67, 0x72, 0x6f, 0x63,
	0x65, 0x72, 0x79, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x63, 0x65, 0x72, 0x79, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x0b, 0x67, 0x72, 0x6f, 0x63, 0x65, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x22,
	0x66, 0x0a, 0x1d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x63, 0x65, 0x72, 0x79,
	0x4c, 0x69, 0x73, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x45, 0x0a, 0x12, 0x67, 0x72, 0x6f, 0x63, 0x65, 0x72, 0x79, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x5f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65,
	0x6e, 0x74, 0x70, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x63, 0x65, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74,
	0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x10, 0x67, 0x72, 0x6f, 0x63, 0x65, 0x72, 0x79, 0x4c, 0x69,
	0x73, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x22, 0xa4, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x47,
	0x72, 0x6f, 0x63, 0x65, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3a, 0x0a, 0x04, 0x76, 0x69, 0x65, 0x77, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74,
	0x47, 0x72, 0x6f, 0x63, 0x65, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x52, 0x04, 0x76, 0x69,
	0x65, 0x77, 0x22, 0x3a, 0x0a, 0x04, 0x56, 0x69, 0x65, 0x77, 0x12, 0x14, 0x0a, 0x10, 0x56, 0x49,
	0x45, 0x57, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x09, 0x0a, 0x05, 0x42, 0x41, 0x53, 0x49, 0x43, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x57,
	0x49, 0x54, 0x48, 0x5f, 0x45, 0x44, 0x47, 0x45, 0x5f, 0x49, 0x44, 0x53, 0x10, 0x02, 0x22, 0x66,
	0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x63, 0x65, 0x72, 0x79, 0x4c,
	0x69, 0x73, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x45, 0x0a, 0x12, 0x67, 0x72, 0x6f, 0x63, 0x65, 0x72, 0x79, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65, 0x6e,
	0x74, 0x70, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x63, 0x65, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x52, 0x10, 0x67, 0x72, 0x6f, 0x63, 0x65, 0x72, 0x79, 0x4c, 0x69, 0x73,
	0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x22, 0x2f, 0x0a, 0x1d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x47, 0x72, 0x6f, 0x63, 0x65, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0xd2, 0x01, 0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74,
	0x47, 0x72, 0x6f, 0x63, 0x65, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x3b, 0x0a, 0x04, 0x76, 0x69, 0x65, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x27, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x72,
	0x6f, 0x63, 0x65, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x52, 0x04, 0x76, 0x69, 0x65, 0x77,
	0x22, 0x3a, 0x0a, 0x04, 0x56, 0x69, 0x65, 0x77, 0x12, 0x14, 0x0a, 0x10, 0x56, 0x49, 0x45, 0x57,
	0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x09,
	0x0a, 0x05, 0x42, 0x41, 0x53, 0x49, 0x43, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x57, 0x49, 0x54,
	0x48, 0x5f, 0x45, 0x44, 0x47, 0x45, 0x5f, 0x49, 0x44, 0x53, 0x10, 0x02, 0x22, 0x96, 0x01, 0x0a,
	0x1c, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x63, 0x65, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74,
	0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a,
	0x17, 0x67, 0x72, 0x6f, 0x63, 0x65, 0x72, 0x79, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x63, 0x65, 0x72, 0x79, 0x4c, 0x69,
	0x73, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x14, 0x67, 0x72, 0x6f, 0x63, 0x65, 0x72, 0x79,
	0x4c, 0x69, 0x73, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x26, 0x0a,
	0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x67, 0x0a, 0x23, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x63, 0x65, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x40, 0x0a, 0x08,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24,
	0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f,
	0x63, 0x65, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x52, 0x08, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x22, 0x6f,
	0x0a, 0x24, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f,
	0x63, 0x65, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x13, 0x67, 0x72, 0x6f, 0x63, 0x65, 0x72,
	0x79, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x63,
	0x65, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x11, 0x67, 0x72,
	0x6f, 0x63, 0x65, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x73, 0x22,
	0xd7, 0x01, 0x0a, 0x05, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x74,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x41, 0x0a, 0x10, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f,
	0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x43, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0f, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x38, 0x0a, 0x12, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x22, 0x0a, 0x05, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x52, 0x05, 0x6d, 0x6f,
	0x76, 0x69, 0x65, 0x22, 0x8e, 0x01, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x76, 0x69, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2f, 0x0a, 0x04, 0x76, 0x69, 0x65, 0x77, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x47, 0x65,
	0x74, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x56, 0x69,
	0x65, 0x77, 0x52, 0x04, 0x76, 0x69, 0x65, 0x77, 0x22, 0x3a, 0x0a, 0x04, 0x56, 0x69, 0x65, 0x77,
	0x12, 0x14, 0x0a, 0x10, 0x56, 0x49, 0x45, 0x57, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x42, 0x41, 0x53, 0x49, 0x43, 0x10,
	0x01, 0x12, 0x11, 0x0a, 0x0d, 0x57, 0x49, 0x54, 0x48, 0x5f, 0x45, 0x44, 0x47, 0x45, 0x5f, 0x49,
	0x44, 0x53, 0x10, 0x02, 0x22, 0x38, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x6f,
	0x76, 0x69, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x05, 0x6d, 0x6f,
	0x76, 0x69, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x65, 0x6e, 0x74, 0x70,
	0x62, 0x2e, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x52, 0x05, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x22, 0x24,
	0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x22, 0xbc, 0x01, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x6f, 0x76,
	0x69, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x30, 0x0a, 0x04, 0x76, 0x69, 0x65, 0x77, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x4d, 0x6f, 0x76, 0x69, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x56, 0x69, 0x65,
	0x77, 0x52, 0x04, 0x76, 0x69, 0x65, 0x77, 0x22, 0x3a, 0x0a, 0x04, 0x56, 0x69, 0x65, 0x77, 0x12,
	0x14, 0x0a, 0x10, 0x56, 0x49, 0x45, 0x57, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46,
	0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x42, 0x41, 0x53, 0x49, 0x43, 0x10, 0x01,
	0x12, 0x11, 0x0a, 0x0d, 0x57, 0x49, 0x54, 0x48, 0x5f, 0x45, 0x44, 0x47, 0x45, 0x5f, 0x49, 0x44,
	0x53, 0x10, 0x02, 0x22, 0x68, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x6f, 0x76, 0x69, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x0a, 0x6d, 0x6f, 0x76, 0x69,
	0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x65,
	0x6e, 0x74, 0x70, 0x62, 0x2e, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x52, 0x09, 0x6d, 0x6f, 0x76, 0x69,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x51, 0x0a,
	0x18, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x76, 0x69,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x08, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x6e,
	0x74, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x08, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73,
	0x22, 0x41, 0x0a, 0x19, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d,
	0x6f, 0x76, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a,
	0x06, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x52, 0x06, 0x6d, 0x6f, 0x76,
	0x69, 0x65, 0x73, 0x22, 0xc5, 0x02, 0x0a, 0x0f, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x6f, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x12,
	0x21, 0x0a, 0x0c, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x73, 0x68, 0x6f, 0x77, 0x57, 0x61, 0x74, 0x63, 0x68,
	0x65, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x24, 0x0a,
	0x06, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x52, 0x06, 0x6d, 0x6f, 0x76,
	0x69, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x53, 0x0a, 0x17, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f,
	0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e,
	0x4d, 0x6f, 0x76, 0x69, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x52, 0x15, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x73, 0x22, 0x61, 0x0a, 0x1c, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x41, 0x0a, 0x10, 0x6d,
	0x6f, 0x76, 0x69, 0x65, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x4d, 0x6f,
	0x76, 0x69, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0f, 0x6d,
	0x6f, 0x76, 0x69, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xa2,
	0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x39, 0x0a, 0x04,
	0x76, 0x69, 0x65, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x65, 0x6e, 0x74,
	0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x56, 0x69, 0x65,
	0x77, 0x52, 0x04, 0x76, 0x69, 0x65, 0x77, 0x22, 0x3a, 0x0a, 0x04, 0x56, 0x69, 0x65, 0x77, 0x12,
	0x14, 0x0a, 0x10, 0x56, 0x49, 0x45, 0x57, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46,
	0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x42, 0x41, 0x53, 0x49, 0x43, 0x10, 0x01,
	0x12, 0x11, 0x0a, 0x0d, 0x57, 0x49, 0x54, 0x48, 0x5f, 0x45, 0x44, 0x47, 0x45, 0x5f, 0x49, 0x44,
	0x53, 0x10, 0x02, 0x22, 0x61, 0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x76,
	0x69, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x41, 0x0a, 0x10, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x63, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0f, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x2e, 0x0a, 0x1c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4d, 0x6f, 0x76, 0x69, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0xd0, 0x01, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x4d,
	0x6f, 0x76, 0x69, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x3a, 0x0a, 0x04, 0x76, 0x69, 0x65, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x26, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x6f, 0x76, 0x69,
	0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x52, 0x04, 0x76, 0x69, 0x65, 0x77, 0x22, 0x3a, 0x0a,
	0x04, 0x56, 0x69, 0x65, 0x77, 0x12, 0x14, 0x0a, 0x10, 0x56, 0x49, 0x45, 0x57, 0x5f, 0x55, 0x4e,
	0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x42,
	0x41, 0x53, 0x49, 0x43, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x57, 0x49, 0x54, 0x48, 0x5f, 0x45,
	0x44, 0x47, 0x45, 0x5f, 0x49, 0x44, 0x53, 0x10, 0x02, 0x22, 0x91, 0x01, 0x0a, 0x1b, 0x4c, 0x69,
	0x73, 0x74, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x15, 0x6d, 0x6f, 0x76,
	0x69, 0x65, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62,
	0x2e, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x13, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x65, 0x0a,
	0x22, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x76, 0x69,
	0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x3f, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x08, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x73, 0x22, 0x6a, 0x0a, 0x23, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x11, 0x6d,
	0x6f, 0x76, 0x69, 0x65, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x4d,
	0x6f, 0x76, 0x69, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x10,
	0x6d, 0x6f, 0x76, 0x69, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x22, 0xe0, 0x01, 0x0a, 0x14, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x61, 0x6e,
	0x5f, 0x65, 0x64, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x63, 0x61, 0x6e,
	0x45, 0x64, 0x69, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x1f, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e,
	0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72,
	0x12, 0x41, 0x0a, 0x10, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x65, 0x6e, 0x74,
	0x70, 0x62, 0x2e, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0f, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x76, 0x0a, 0x21, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x76,
	0x69, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x68, 0x61, 0x72,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x51, 0x0a, 0x16, 0x6d, 0x6f, 0x76, 0x69,
	0x65, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62,
	0x2e, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x14, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x22, 0xac, 0x01, 0x0a, 0x1e,
	0x47, 0x65, 0x74, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3e,
	0x0a, 0x04, 0x76, 0x69, 0x65, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x65,
	0x6e, 0x74, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x52, 0x04, 0x76, 0x69, 0x65, 0x77, 0x22, 0x3a,
	0x0a, 0x04, 0x56, 0x69, 0x65, 0x77, 0x12, 0x14, 0x0a, 0x10, 0x56, 0x49, 0x45, 0x57, 0x5f, 0x55,
	0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05,
	0x42, 0x41, 0x53, 0x49, 0x43, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x57, 0x49, 0x54, 0x48, 0x5f,
	0x45, 0x44, 0x47, 0x45, 0x5f, 0x49, 0x44, 0x53, 0x10, 0x02, 0x22, 0x76, 0x0a, 0x21, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x51, 0x0a, 0x16, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x14, 0x6d, 0x6f,
	0x76, 0x69, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x22, 0x33, 0x0a, 0x21, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x6f, 0x76, 0x69,
	0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x68, 0x61, 0x72, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0xda, 0x01, 0x0a, 0x1f, 0x4c, 0x69, 0x73, 0x74,
	0x4d, 0x6f, 0x76, 0x69, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70,
	0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61,
	0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x3f, 0x0a, 0x04, 0x76, 0x69, 0x65, 0x77, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2b, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x56, 0x69,
	0x65, 0x77, 0x52, 0x04, 0x76, 0x69, 0x65, 0x77, 0x22, 0x3a, 0x0a, 0x04, 0x56, 0x69, 0x65, 0x77,
	0x12, 0x14, 0x0a, 0x10, 0x56, 0x49, 0x45, 0x57, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x42, 0x41, 0x53, 0x49, 0x43, 0x10,
	0x01, 0x12, 0x11, 0x0a, 0x0d, 0x57, 0x49, 0x54, 0x48, 0x5f, 0x45, 0x44, 0x47, 0x45, 0x5f, 0x49,
	0x44, 0x53, 0x10, 0x02, 0x22, 0xa6, 0x01, 0x0a, 0x20, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x6f, 0x76,
	0x69, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x68, 0x61, 0x72,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x1b, 0x6d, 0x6f, 0x76,
	0x69, 0x65, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x18, 0x6d, 0x6f, 0x76,
	0x69, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x68, 0x61, 0x72,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x6f, 0x0a,
	0x27, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x76, 0x69,
	0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x68, 0x61, 0x72, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x44, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x65, 0x6e, 0x74,
	0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x43, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x52, 0x08, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x22, 0x7f,
	0x0a, 0x28, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x76,
	0x69, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x68, 0x61, 0x72,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x17, 0x6d, 0x6f,
	0x76, 0x69, 0x65, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x65, 0x6e,
	0x74, 0x70, 0x62, 0x2e, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x15, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x73, 0x22,
	0xcd, 0x05, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70,
	0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6e,
	0x61, 0x6d, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0b, 0x6e, 0x61, 0x6d, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x6c, 0x61, 0x73, 0x74,
	0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x37,
	0x0a, 0x0d, 0x61, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x18,
	0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x41, 0x6d,
	0x61, 0x7a, 0x6f, 0x6e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x0c, 0x61, 0x6d, 0x61, 0x7a, 0x6f,
	0x6e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x73, 0x12, 0x34, 0x0a, 0x0c, 0x61, 0x6d, 0x61, 0x7a, 0x6f,
	0x6e, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x41, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x0b, 0x61, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x73, 0x12, 0x24, 0x0a,
	0x06, 0x64, 0x72, 0x69, 0x6e, 0x6b, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x44, 0x72, 0x69, 0x6e, 0x6b, 0x52, 0x06, 0x64, 0x72, 0x69,
	0x6e, 0x6b, 0x73, 0x12, 0x37, 0x0a, 0x0d, 0x67, 0x72, 0x6f, 0x63, 0x65, 0x72, 0x79, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x6e, 0x74,
	0x70, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x63, 0x65, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x0c,
	0x67, 0x72, 0x6f, 0x63, 0x65, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x73, 0x12, 0x47, 0x0a, 0x13,
	0x67, 0x72, 0x6f, 0x63, 0x65, 0x72, 0x79, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65, 0x6e, 0x74, 0x70,
	0x62, 0x2e, 0x47, 0x72, 0x6f, 0x63, 0x65, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x52, 0x11, 0x67, 0x72, 0x6f, 0x63, 0x65, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x73, 0x12, 0x43, 0x0a, 0x11, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x63,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x43, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x10, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x53, 0x0a, 0x17, 0x6d, 0x6f,
	0x76, 0x69, 0x65, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x65, 0x6e,
	0x74, 0x70, 0x62, 0x2e, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x15, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x73, 0x22,
	0x34, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0x8c, 0x01, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2e, 0x0a, 0x04, 0x76, 0x69, 0x65, 0x77,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x56, 0x69,
	0x65, 0x77, 0x52, 0x04, 0x76, 0x69, 0x65, 0x77, 0x22, 0x3a, 0x0a, 0x04, 0x56, 0x69, 0x65, 0x77,
	0x12, 0x14, 0x0a, 0x10, 0x56, 0x49, 0x45, 0x57, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x42, 0x41, 0x53, 0x49, 0x43, 0x10,
	0x01, 0x12, 0x11, 0x0a, 0x0d, 0x57, 0x49, 0x54, 0x48, 0x5f, 0x45, 0x44, 0x47, 0x45, 0x5f, 0x49,
	0x44, 0x53, 0x10, 0x02, 0x22, 0x34, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x04, 0x75, 0x73, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0x23, 0x0a, 0x11, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22,
	0xba, 0x01, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x2f, 0x0a, 0x04, 0x76, 0x69, 0x65, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e,
	0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x52, 0x04, 0x76, 0x69, 0x65, 0x77,
	0x22, 0x3a, 0x0a, 0x04, 0x56, 0x69, 0x65, 0x77, 0x12, 0x14, 0x0a, 0x10, 0x56, 0x49, 0x45, 0x57,
	0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x09,
	0x0a, 0x05, 0x42, 0x41, 0x53, 0x49, 0x43, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x57, 0x49, 0x54,
	0x48, 0x5f, 0x45, 0x44, 0x47, 0x45, 0x5f, 0x49, 0x44, 0x53, 0x10, 0x02, 0x22, 0x64, 0x0a, 0x10,
	0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x28, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65,
	0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x22, 0x4f, 0x0a, 0x17, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a,
	0x08, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x08, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x73, 0x22, 0x3d, 0x0a, 0x18, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x21, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b,
	0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x05, 0x75, 0x73, 0x65,
	0x72, 0x73, 0x32, 0xa7, 0x03, 0x0a, 0x11, 0x41, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x4c, 0x69, 0x73,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3b, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x12, 0x1e, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x41, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x11, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x41, 0x6d, 0x61, 0x7a, 0x6f,
	0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x1b, 0x2e, 0x65,
	0x6e, 0x74, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x65, 0x6e, 0x74, 0x70,
	0x62, 0x2e, 0x41, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x06,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x41,
	0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x40, 0x0a, 0x06, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x12, 0x1e, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x41, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x43, 0x0a, 0x04, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x1c, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x41, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1d, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6d,
	0x61, 0x7a, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x5a, 0x0a, 0x0b, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12,
	0x24, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x41, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x42, 0x61,
	0x74, 0x63, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x4c,
	0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xb3, 0x03, 0x0a,
	0x12, 0x41, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x3d, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x2e,
	0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x6d, 0x61, 0x7a,
	0x6f, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12,
	0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x41, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x12, 0x37, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x1c, 0x2e, 0x65, 0x6e, 0x74, 0x70,
	0x62, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e,
	0x41, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x3d, 0x0a, 0x06, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x41, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x41,
	0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x41, 0x0a, 0x06, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x12, 0x1f, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x41, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x45, 0x0a,
	0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1d, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x41, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x41, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5c, 0x0a, 0x0b, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x12, 0x25, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x42, 0x61, 0x74, 0x63,
	0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x65, 0x6e, 0x74,
	0x70, 0x62, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x6d,
	0x61, 0x7a, 0x6f, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x32, 0xb3, 0x03, 0x0a, 0x12, 0x41, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3d, 0x0a, 0x06, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x12, 0x1f, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x41, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x41, 0x6d, 0x61,
	0x7a, 0x6f, 0x6e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x12, 0x37, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12,
	0x1c, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6d, 0x61, 0x7a, 0x6f,
	0x6e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e,
	0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x41, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x53, 0x68, 0x61, 0x72,
	0x65, 0x12, 0x3d, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x2e, 0x65, 0x6e,
	0x74, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6d, 0x61, 0x7a, 0x6f, 0x6e,
	0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x65,
	0x6e, 0x74, 0x70, 0x62, 0x2e, 0x41, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x53, 0x68, 0x61, 0x72, 0x65,
	0x12, 0x41, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x1f, 0x2e, 0x65, 0x6e, 0x74,
	0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x12, 0x45, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1d, 0x2e, 0x65, 0x6e,
	0x74, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x65, 0x6e, 0x74,
	0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5c, 0x0a, 0x0b, 0x42, 0x61,
	0x74, 0x63, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x25, 0x2e, 0x65, 0x6e, 0x74, 0x70,
	0x62, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x6d, 0x61,
	0x7a, 0x6f, 0x6e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x26, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x41, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xeb, 0x02, 0x0a, 0x0c, 0x44, 0x72, 0x69,
	0x6e, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x31, 0x0a, 0x06, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x12, 0x19, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x44, 0x72, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0c,
	0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x44, 0x72, 0x69, 0x6e, 0x6b, 0x12, 0x2b, 0x0a, 0x03,
	0x47, 0x65, 0x74, 0x12, 0x16, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x44,
	0x72, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0c, 0x2e, 0x65, 0x6e,
	0x74, 0x70, 0x62, 0x2e, 0x44, 0x72, 0x69, 0x6e, 0x6b, 0x12, 0x31, 0x0a, 0x06, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x12, 0x19, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x44, 0x72, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0c,
	0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x44, 0x72, 0x69, 0x6e, 0x6b, 0x12, 0x3b, 0x0a, 0x06,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x19, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x72, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x39, 0x0a, 0x04, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x17, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x72,
	0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x65, 0x6e, 0x74,
	0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x72, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x0b, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x12, 0x1f, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x42, 0x61, 0x74, 0x63,
	0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x72, 0x69, 0x6e, 0x6b, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x42, 0x61, 0x74,
	0x63, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x72, 0x69, 0x6e, 0x6b, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xb3, 0x03, 0x0a, 0x12, 0x47, 0x72, 0x6f, 0x63, 0x65,
	0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3d, 0x0a,
	0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x63, 0x65, 0x72, 0x79, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62,
	0x2e, 0x47, 0x72, 0x6f, 0x63, 0x65, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x03,
	0x47, 0x65, 0x74, 0x12, 0x1c, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x47,
	0x72, 0x6f, 0x63, 0x65, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x12, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x63, 0x65, 0x72,
	0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x1f, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x72,
	0x6f, 0x63, 0x65, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x12, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x63, 0x65, 0x72, 0x79,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x41, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x1f,
	0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x72, 0x6f,
	0x63, 0x65, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x45, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x1d, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x63,
	0x65, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e,
	0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x63, 0x65,
	0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5c,
	0x0a, 0x0b, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x25, 0x2e,
	0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x47, 0x72, 0x6f, 0x63, 0x65, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x42, 0x61, 0x74,
	0x63, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x63, 0x65, 0x72, 0x79, 0x4c,
	0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xe3, 0x03, 0x0a,
	0x16, 0x47, 0x72, 0x6f, 0x63, 0x65, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x45, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x12, 0x23, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x47, 0x72, 0x6f, 0x63, 0x65, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x47,
	0x72, 0x6f, 0x63, 0x65, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x3f,
	0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x20, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x47, 0x65,
	0x74, 0x47, 0x72, 0x6f, 0x63, 0x65, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e,
	0x47, 0x72, 0x6f, 0x63, 0x65, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x45, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x23, 0x2e, 0x65, 0x6e, 0x74, 0x70,
	0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x63, 0x65, 0x72, 0x79, 0x4c,
	0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16,
	0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x63, 0x65, 0x72, 0x79, 0x4c, 0x69,
	0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x45, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x12, 0x23, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47,
	0x72, 0x6f, 0x63, 0x65, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x4d, 0x0a,
	0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x21, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x47, 0x72, 0x6f, 0x63, 0x65, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x63, 0x65, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x64, 0x0a, 0x0b,
	0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x29, 0x2e, 0x65, 0x6e,
	0x74, 0x70, 0x62, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47,
	0x72, 0x6f, 0x63, 0x65, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x42,
	0x61, 0x74, 0x63, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x63, 0x65, 0x72,
	0x79, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x32, 0xef, 0x03, 0x0a, 0x17, 0x47, 0x72, 0x6f, 0x63, 0x65, 0x72, 0x79, 0x4c, 0x69,
	0x73, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x47,
	0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x24, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x63, 0x65, 0x72, 0x79, 0x4c, 0x69,
	0x73, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17,
	0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x63, 0x65, 0x72, 0x79, 0x4c, 0x69,
	0x73, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x12, 0x41, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x21,
	0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x63, 0x65, 0x72,
	0x79, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x17, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x63, 0x65, 0x72,
	0x79, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x12, 0x47, 0x0a, 0x06, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x12, 0x24, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x63, 0x65, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x65, 0x6e, 0x74,
	0x70, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x63, 0x65, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x12, 0x46, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x24, 0x2e,
	0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x63,
	0x65, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x4f, 0x0a, 0x04, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x22, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x47, 0x72, 0x6f, 0x63, 0x65, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x63, 0x65, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x66, 0x0a, 0x0b,
	0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x2a, 0x2e, 0x65, 0x6e,
	0x74, 0x70, 0x62, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47,
	0x72, 0x6f, 0x63, 0x65, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e,
	0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x63, 0x65,
	0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x32, 0xeb, 0x02, 0x0a, 0x0c, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x31, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12,
	0x19, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x6f,
	0x76, 0x69, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0c, 0x2e, 0x65, 0x6e, 0x74,
	0x70, 0x62, 0x2e, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x12, 0x2b, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12,
	0x16, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x76, 0x69, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0c, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e,
	0x4d, 0x6f, 0x76, 0x69, 0x65, 0x12, 0x31, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x19, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x6f,
	0x76, 0x69, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0c, 0x2e, 0x65, 0x6e, 0x74,
	0x70, 0x62, 0x2e, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x12, 0x3b, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x12, 0x19, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x39, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x17, 0x2e,
	0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x50, 0x0a, 0x0b, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12,
	0x1f, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x20, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x32, 0xe3, 0x03, 0x0a, 0x16, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x45, 0x0a,
	0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x23, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x65,
	0x6e, 0x74, 0x70, 0x62, 0x2e, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3f, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x20, 0x2e, 0x65, 0x6e,
	0x74, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x45, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x23, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x6f,
	0x76, 0x69, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x4d, 0x6f, 0x76,
	0x69, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x45, 0x0a, 0x06,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x23, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x12, 0x4d, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x21, 0x2e, 0x65, 0x6e,
	0x74, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22,
	0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x6f, 0x76, 0x69, 0x65,
	0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x64, 0x0a, 0x0b, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x12, 0x29, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x65,
	0x6e, 0x74, 0x70, 0x62, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4d, 0x6f, 0x76, 0x69, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x9f, 0x04, 0x0a, 0x1b, 0x4d, 0x6f, 0x76,
	0x69, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x68, 0x61, 0x72,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4f, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x12, 0x28, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x65,
	0x6e, 0x74, 0x70, 0x62, 0x2e, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x12, 0x49, 0x0a, 0x03, 0x47, 0x65, 0x74,
	0x12, 0x25, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x76, 0x69,
	0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x68, 0x61, 0x72, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e,
	0x4d, 0x6f, 0x76, 0x69, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x12, 0x4f, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x28,
	0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x76,
	0x69, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x68, 0x61, 0x72,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62,
	0x2e, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x68, 0x61, 0x72, 0x65, 0x12, 0x4a, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12,
	0x28, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x6f,
	0x76, 0x69, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x12, 0x57, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x26, 0x2e, 0x65, 0x6e, 0x74, 0x70,
	0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x27, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x6f,
	0x76, 0x69, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6e, 0x0a, 0x0b, 0x42, 0x61,
	0x74, 0x63, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x2e, 0x2e, 0x65, 0x6e, 0x74, 0x70,
	0x62, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x76,
	0x69, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x68, 0x61, 0x72,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x65, 0x6e, 0x74, 0x70,
	0x62, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x76,
	0x69, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x68, 0x61, 0x72,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xdf, 0x02, 0x0a, 0x0b, 0x55,
	0x73, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x2f, 0x0a, 0x06, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x12, 0x18, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0b,
	0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x12, 0x29, 0x0a, 0x03, 0x47,
	0x65, 0x74, 0x12, 0x15, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0b, 0x2e, 0x65, 0x6e, 0x74, 0x70,
	0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x12, 0x2f, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x12, 0x18, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0b, 0x2e, 0x65, 0x6e, 0x74,
	0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x12, 0x3a, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x12, 0x18, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x12, 0x37, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x2e, 0x65, 0x6e,
	0x74, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a, 0x0b,
	0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x2e, 0x65, 0x6e,
	0x74, 0x70, 0x62, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x65, 0x6e,
	0x74, 0x70, 0x62, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x2b, 0x5a, 0x29,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x50, 0x61, 0x6c, 0x75, 0x4d,
	0x61, 0x63, 0x69, 0x6c, 0x2f, 0x64, 0x61, 0x6e, 0x32, 0x2f, 0x65, 0x6e, 0x74, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_entpb_entpb_proto_rawDescOnce sync.Once
	file_entpb_entpb_proto_rawDescData = file_entpb_entpb_proto_rawDesc
)

func file_entpb_entpb_proto_rawDescGZIP() []byte {
	file_entpb_entpb_proto_rawDescOnce.Do(func() {
		file_entpb_entpb_proto_rawDescData = protoimpl.X.CompressGZIP(file_entpb_entpb_proto_rawDescData)
	})
	return file_entpb_entpb_proto_rawDescData
}

var file_entpb_entpb_proto_enumTypes = make([]protoimpl.EnumInfo, 23)
var file_entpb_entpb_proto_msgTypes = make([]protoimpl.MessageInfo, 99)
var file_entpb_entpb_proto_goTypes = []interface{}{
	(GetAmazonListRequest_View)(0),                   // 0: entpb.GetAmazonListRequest.View
	(ListAmazonListRequest_View)(0),                  // 1: entpb.ListAmazonListRequest.View
	(GetAmazonOrderRequest_View)(0),                  // 2: entpb.GetAmazonOrderRequest.View
	(ListAmazonOrderRequest_View)(0),                 // 3: entpb.ListAmazonOrderRequest.View
	(GetAmazonShareRequest_View)(0),                  // 4: entpb.GetAmazonShareRequest.View
	(ListAmazonShareRequest_View)(0),                 // 5: entpb.ListAmazonShareRequest.View
	(Drink_Type)(0),                                  // 6: entpb.Drink.Type
	(GetDrinkRequest_View)(0),                        // 7: entpb.GetDrinkRequest.View
	(ListDrinkRequest_View)(0),                       // 8: entpb.ListDrinkRequest.View
	(GetGroceryListRequest_View)(0),                  // 9: entpb.GetGroceryListRequest.View
	(ListGroceryListRequest_View)(0),                 // 10: entpb.ListGroceryListRequest.View
	(GetGroceryListItemRequest_View)(0),              // 11: entpb.GetGroceryListItemRequest.View
	(ListGroceryListItemRequest_View)(0),             // 12: entpb.ListGroceryListItemRequest.View
	(GetGroceryListShareRequest_View)(0),             // 13: entpb.GetGroceryListShareRequest.View
	(ListGroceryListShareRequest_View)(0),            // 14: entpb.ListGroceryListShareRequest.View
	(GetMovieRequest_View)(0),                        // 15: entpb.GetMovieRequest.View
	(ListMovieRequest_View)(0),                       // 16: entpb.ListMovieRequest.View
	(GetMovieCollectionRequest_View)(0),              // 17: entpb.GetMovieCollectionRequest.View
	(ListMovieCollectionRequest_View)(0),             // 18: entpb.ListMovieCollectionRequest.View
	(GetMovieCollectionShareRequest_View)(0),         // 19: entpb.GetMovieCollectionShareRequest.View
	(ListMovieCollectionShareRequest_View)(0),        // 20: entpb.ListMovieCollectionShareRequest.View
	(GetUserRequest_View)(0),                         // 21: entpb.GetUserRequest.View
	(ListUserRequest_View)(0),                        // 22: entpb.ListUserRequest.View
	(*AmazonList)(nil),                               // 23: entpb.AmazonList
	(*CreateAmazonListRequest)(nil),                  // 24: entpb.CreateAmazonListRequest
	(*GetAmazonListRequest)(nil),                     // 25: entpb.GetAmazonListRequest
	(*UpdateAmazonListRequest)(nil),                  // 26: entpb.UpdateAmazonListRequest
	(*DeleteAmazonListRequest)(nil),                  // 27: entpb.DeleteAmazonListRequest
	(*ListAmazonListRequest)(nil),                    // 28: entpb.ListAmazonListRequest
	(*ListAmazonListResponse)(nil),                   // 29: entpb.ListAmazonListResponse
	(*BatchCreateAmazonListsRequest)(nil),            // 30: entpb.BatchCreateAmazonListsRequest
	(*BatchCreateAmazonListsResponse)(nil),           // 31: entpb.BatchCreateAmazonListsResponse
	(*AmazonOrder)(nil),                              // 32: entpb.AmazonOrder
	(*CreateAmazonOrderRequest)(nil),                 // 33: entpb.CreateAmazonOrderRequest
	(*GetAmazonOrderRequest)(nil),                    // 34: entpb.GetAmazonOrderRequest
	(*UpdateAmazonOrderRequest)(nil),                 // 35: entpb.UpdateAmazonOrderRequest
	(*DeleteAmazonOrderRequest)(nil),                 // 36: entpb.DeleteAmazonOrderRequest
	(*ListAmazonOrderRequest)(nil),                   // 37: entpb.ListAmazonOrderRequest
	(*ListAmazonOrderResponse)(nil),                  // 38: entpb.ListAmazonOrderResponse
	(*BatchCreateAmazonOrdersRequest)(nil),           // 39: entpb.BatchCreateAmazonOrdersRequest
	(*BatchCreateAmazonOrdersResponse)(nil),          // 40: entpb.BatchCreateAmazonOrdersResponse
	(*AmazonShare)(nil),                              // 41: entpb.AmazonShare
	(*CreateAmazonShareRequest)(nil),                 // 42: entpb.CreateAmazonShareRequest
	(*GetAmazonShareRequest)(nil),                    // 43: entpb.GetAmazonShareRequest
	(*UpdateAmazonShareRequest)(nil),                 // 44: entpb.UpdateAmazonShareRequest
	(*DeleteAmazonShareRequest)(nil),                 // 45: entpb.DeleteAmazonShareRequest
	(*ListAmazonShareRequest)(nil),                   // 46: entpb.ListAmazonShareRequest
	(*ListAmazonShareResponse)(nil),                  // 47: entpb.ListAmazonShareResponse
	(*BatchCreateAmazonSharesRequest)(nil),           // 48: entpb.BatchCreateAmazonSharesRequest
	(*BatchCreateAmazonSharesResponse)(nil),          // 49: entpb.BatchCreateAmazonSharesResponse
	(*Drink)(nil),                                    // 50: entpb.Drink
	(*CreateDrinkRequest)(nil),                       // 51: entpb.CreateDrinkRequest
	(*GetDrinkRequest)(nil),                          // 52: entpb.GetDrinkRequest
	(*UpdateDrinkRequest)(nil),                       // 53: entpb.UpdateDrinkRequest
	(*DeleteDrinkRequest)(nil),                       // 54: entpb.DeleteDrinkRequest
	(*ListDrinkRequest)(nil),                         // 55: entpb.ListDrinkRequest
	(*ListDrinkResponse)(nil),                        // 56: entpb.ListDrinkResponse
	(*BatchCreateDrinksRequest)(nil),                 // 57: entpb.BatchCreateDrinksRequest
	(*BatchCreateDrinksResponse)(nil),                // 58: entpb.BatchCreateDrinksResponse
	(*GroceryList)(nil),                              // 59: entpb.GroceryList
	(*CreateGroceryListRequest)(nil),                 // 60: entpb.CreateGroceryListRequest
	(*GetGroceryListRequest)(nil),                    // 61: entpb.GetGroceryListRequest
	(*UpdateGroceryListRequest)(nil),                 // 62: entpb.UpdateGroceryListRequest
	(*DeleteGroceryListRequest)(nil),                 // 63: entpb.DeleteGroceryListRequest
	(*ListGroceryListRequest)(nil),                   // 64: entpb.ListGroceryListRequest
	(*ListGroceryListResponse)(nil),                  // 65: entpb.ListGroceryListResponse
	(*BatchCreateGroceryListsRequest)(nil),           // 66: entpb.BatchCreateGroceryListsRequest
	(*BatchCreateGroceryListsResponse)(nil),          // 67: entpb.BatchCreateGroceryListsResponse
	(*GroceryListItem)(nil),                          // 68: entpb.GroceryListItem
	(*CreateGroceryListItemRequest)(nil),             // 69: entpb.CreateGroceryListItemRequest
	(*GetGroceryListItemRequest)(nil),                // 70: entpb.GetGroceryListItemRequest
	(*UpdateGroceryListItemRequest)(nil),             // 71: entpb.UpdateGroceryListItemRequest
	(*DeleteGroceryListItemRequest)(nil),             // 72: entpb.DeleteGroceryListItemRequest
	(*ListGroceryListItemRequest)(nil),               // 73: entpb.ListGroceryListItemRequest
	(*ListGroceryListItemResponse)(nil),              // 74: entpb.ListGroceryListItemResponse
	(*BatchCreateGroceryListItemsRequest)(nil),       // 75: entpb.BatchCreateGroceryListItemsRequest
	(*BatchCreateGroceryListItemsResponse)(nil),      // 76: entpb.BatchCreateGroceryListItemsResponse
	(*GroceryListShare)(nil),                         // 77: entpb.GroceryListShare
	(*CreateGroceryListShareRequest)(nil),            // 78: entpb.CreateGroceryListShareRequest
	(*GetGroceryListShareRequest)(nil),               // 79: entpb.GetGroceryListShareRequest
	(*UpdateGroceryListShareRequest)(nil),            // 80: entpb.UpdateGroceryListShareRequest
	(*DeleteGroceryListShareRequest)(nil),            // 81: entpb.DeleteGroceryListShareRequest
	(*ListGroceryListShareRequest)(nil),              // 82: entpb.ListGroceryListShareRequest
	(*ListGroceryListShareResponse)(nil),             // 83: entpb.ListGroceryListShareResponse
	(*BatchCreateGroceryListSharesRequest)(nil),      // 84: entpb.BatchCreateGroceryListSharesRequest
	(*BatchCreateGroceryListSharesResponse)(nil),     // 85: entpb.BatchCreateGroceryListSharesResponse
	(*Movie)(nil),                                    // 86: entpb.Movie
	(*CreateMovieRequest)(nil),                       // 87: entpb.CreateMovieRequest
	(*GetMovieRequest)(nil),                          // 88: entpb.GetMovieRequest
	(*UpdateMovieRequest)(nil),                       // 89: entpb.UpdateMovieRequest
	(*DeleteMovieRequest)(nil),                       // 90: entpb.DeleteMovieRequest
	(*ListMovieRequest)(nil),                         // 91: entpb.ListMovieRequest
	(*ListMovieResponse)(nil),                        // 92: entpb.ListMovieResponse
	(*BatchCreateMoviesRequest)(nil),                 // 93: entpb.BatchCreateMoviesRequest
	(*BatchCreateMoviesResponse)(nil),                // 94: entpb.BatchCreateMoviesResponse
	(*MovieCollection)(nil),                          // 95: entpb.MovieCollection
	(*CreateMovieCollectionRequest)(nil),             // 96: entpb.CreateMovieCollectionRequest
	(*GetMovieCollectionRequest)(nil),                // 97: entpb.GetMovieCollectionRequest
	(*UpdateMovieCollectionRequest)(nil),             // 98: entpb.UpdateMovieCollectionRequest
	(*DeleteMovieCollectionRequest)(nil),             // 99: entpb.DeleteMovieCollectionRequest
	(*ListMovieCollectionRequest)(nil),               // 100: entpb.ListMovieCollectionRequest
	(*ListMovieCollectionResponse)(nil),              // 101: entpb.ListMovieCollectionResponse
	(*BatchCreateMovieCollectionsRequest)(nil),       // 102: entpb.BatchCreateMovieCollectionsRequest
	(*BatchCreateMovieCollectionsResponse)(nil),      // 103: entpb.BatchCreateMovieCollectionsResponse
	(*MovieCollectionShare)(nil),                     // 104: entpb.MovieCollectionShare
	(*CreateMovieCollectionShareRequest)(nil),        // 105: entpb.CreateMovieCollectionShareRequest
	(*GetMovieCollectionShareRequest)(nil),           // 106: entpb.GetMovieCollectionShareRequest
	(*UpdateMovieCollectionShareRequest)(nil),        // 107: entpb.UpdateMovieCollectionShareRequest
	(*DeleteMovieCollectionShareRequest)(nil),        // 108: entpb.DeleteMovieCollectionShareRequest
	(*ListMovieCollectionShareRequest)(nil),          // 109: entpb.ListMovieCollectionShareRequest
	(*ListMovieCollectionShareResponse)(nil),         // 110: entpb.ListMovieCollectionShareResponse
	(*BatchCreateMovieCollectionSharesRequest)(nil),  // 111: entpb.BatchCreateMovieCollectionSharesRequest
	(*BatchCreateMovieCollectionSharesResponse)(nil), // 112: entpb.BatchCreateMovieCollectionSharesResponse
	(*User)(nil),                     // 113: entpb.User
	(*CreateUserRequest)(nil),        // 114: entpb.CreateUserRequest
	(*GetUserRequest)(nil),           // 115: entpb.GetUserRequest
	(*UpdateUserRequest)(nil),        // 116: entpb.UpdateUserRequest
	(*DeleteUserRequest)(nil),        // 117: entpb.DeleteUserRequest
	(*ListUserRequest)(nil),          // 118: entpb.ListUserRequest
	(*ListUserResponse)(nil),         // 119: entpb.ListUserResponse
	(*BatchCreateUsersRequest)(nil),  // 120: entpb.BatchCreateUsersRequest
	(*BatchCreateUsersResponse)(nil), // 121: entpb.BatchCreateUsersResponse
	(*timestamp.Timestamp)(nil),      // 122: google.protobuf.Timestamp
	(*empty.Empty)(nil),              // 123: google.protobuf.Empty
}
var file_entpb_entpb_proto_depIdxs = []int32{
	122, // 0: entpb.AmazonList.created_at:type_name -> google.protobuf.Timestamp
	32,  // 1: entpb.AmazonList.amazon_orders:type_name -> entpb.AmazonOrder
	113, // 2: entpb.AmazonList.owner:type_name -> entpb.User
	41,  // 3: entpb.AmazonList.amazon_shares:type_name -> entpb.AmazonShare
	23,  // 4: entpb.CreateAmazonListRequest.amazon_list:type_name -> entpb.AmazonList
	0,   // 5: entpb.GetAmazonListRequest.view:type_name -> entpb.GetAmazonListRequest.View
	23,  // 6: entpb.UpdateAmazonListRequest.amazon_list:type_name -> entpb.AmazonList
	1,   // 7: entpb.ListAmazonListRequest.view:type_name -> entpb.ListAmazonListRequest.View
	23,  // 8: entpb.ListAmazonListResponse.amazon_list_list:type_name -> entpb.AmazonList
	24,  // 9: entpb.BatchCreateAmazonListsRequest.requests:type_name -> entpb.CreateAmazonListRequest
	23,  // 10: entpb.BatchCreateAmazonListsResponse.amazon_lists:type_name -> entpb.AmazonList
	122, // 11: entpb.AmazonOrder.ordered_at:type_name -> google.protobuf.Timestamp
	122, // 12: entpb.AmazonOrder.created_at:type_name -> google.protobuf.Timestamp
	23,  // 13: entpb.AmazonOrder.amazon_list:type_name -> entpb.AmazonList
	32,  // 14: entpb.CreateAmazonOrderRequest.amazon_order:type_name -> entpb.AmazonOrder
	2,   // 15: entpb.GetAmazonOrderRequest.view:type_name -> entpb.GetAmazonOrderRequest.View
	32,  // 16: entpb.UpdateAmazonOrderRequest.amazon_order:type_name -> entpb.AmazonOrder
	3,   // 17: entpb.ListAmazonOrderRequest.view:type_name -> entpb.ListAmazonOrderRequest.View
	32,  // 18: entpb.ListAmazonOrderResponse.amazon_order_list:type_name -> entpb.AmazonOrder
	33,  // 19: entpb.BatchCreateAmazonOrdersRequest.requests:type_name -> entpb.CreateAmazonOrderRequest
	32,  // 20: entpb.BatchCreateAmazonOrdersResponse.amazon_orders:type_name -> entpb.AmazonOrder
	122, // 21: entpb.AmazonShare.created_at:type_name -> google.protobuf.Timestamp
	113, // 22: entpb.AmazonShare.user:type_name -> entpb.User
	23,  // 23: entpb.AmazonShare.amazon_list:type_name -> entpb.AmazonList
	41,  // 24: entpb.CreateAmazonShareRequest.amazon_share:type_name -> entpb.AmazonShare
	4,   // 25: entpb.GetAmazonShareRequest.view:type_name -> entpb.GetAmazonShareRequest.View
	41,  // 26: entpb.UpdateAmazonShareRequest.amazon_share:type_name -> entpb.AmazonShare
	5,   // 27: entpb.ListAmazonShareRequest.view:type_name -> entpb.ListAmazonShareRequest.View
	41,  // 28: entpb.ListAmazonShareResponse.amazon_share_list:type_name -> entpb.AmazonShare
	42,  // 29: entpb.BatchCreateAmazonSharesRequest.requests:type_name -> entpb.CreateAmazonShareRequest
	41,  // 30: entpb.BatchCreateAmazonSharesResponse.amazon_shares:type_name -> entpb.AmazonShare
	6,   // 31: entpb.Drink.type:type_name -> entpb.Drink.Type
	122, // 32: entpb.Drink.created_at:type_name -> google.protobuf.Timestamp
	113, // 33: entpb.Drink.owner:type_name -> entpb.User
	50,  // 34: entpb.CreateDrinkRequest.drink:type_name -> entpb.Drink
	7,   // 35: entpb.GetDrinkRequest.view:type_name -> entpb.GetDrinkRequest.View
	50,  // 36: entpb.UpdateDrinkRequest.drink:type_name -> entpb.Drink
	8,   // 37: entpb.ListDrinkRequest.view:type_name -> entpb.ListDrinkRequest.View
	50,  // 38: entpb.ListDrinkResponse.drink_list:type_name -> entpb.Drink
	51,  // 39: entpb.BatchCreateDrinksRequest.requests:type_name -> entpb.CreateDrinkRequest
	50,  // 40: entpb.BatchCreateDrinksResponse.drinks:type_name -> entpb.Drink
	122, // 41: entpb.GroceryList.created_at:type_name -> google.protobuf.Timestamp
	68,  // 42: entpb.GroceryList.grocery_list_items:type_name -> entpb.GroceryListItem
	113, // 43: entpb.GroceryList.owner:type_name -> entpb.User
	77,  // 44: entpb.GroceryList.grocery_list_shares:type_name -> entpb.GroceryListShare
	59,  // 45: entpb.CreateGroceryListRequest.grocery_list:type_name -> entpb.GroceryList
	9,   // 46: entpb.GetGroceryListRequest.view:type_name -> entpb.GetGroceryListRequest.View
	59,  // 47: entpb.UpdateGroceryListRequest.grocery_list:type_name -> entpb.GroceryList
	10,  // 48: entpb.ListGroceryListRequest.view:type_name -> entpb.ListGroceryListRequest.View
	59,  // 49: entpb.ListGroceryListResponse.grocery_list_list:type_name -> entpb.GroceryList
	60,  // 50: entpb.BatchCreateGroceryListsRequest.requests:type_name -> entpb.CreateGroceryListRequest
	59,  // 51: entpb.BatchCreateGroceryListsResponse.grocery_lists:type_name -> entpb.GroceryList
	122, // 52: entpb.GroceryListItem.created_at:type_name -> google.protobuf.Timestamp
	59,  // 53: entpb.GroceryListItem.grocery_list:type_name -> entpb.GroceryList
	68,  // 54: entpb.CreateGroceryListItemRequest.grocery_list_item:type_name -> entpb.GroceryListItem
	11,  // 55: entpb.GetGroceryListItemRequest.view:type_name -> entpb.GetGroceryListItemRequest.View
	68,  // 56: entpb.UpdateGroceryListItemRequest.grocery_list_item:type_name -> entpb.GroceryListItem
	12,  // 57: entpb.ListGroceryListItemRequest.view:type_name -> entpb.ListGroceryListItemRequest.View
	68,  // 58: entpb.ListGroceryListItemResponse.grocery_list_item_list:type_name -> entpb.GroceryListItem
	69,  // 59: entpb.BatchCreateGroceryListItemsRequest.requests:type_name -> entpb.CreateGroceryListItemRequest
	68,  // 60: entpb.BatchCreateGroceryListItemsResponse.grocery_list_items:type_name -> entpb.GroceryListItem
	122, // 61: entpb.GroceryListShare.created_at:type_name -> google.protobuf.Timestamp
	113, // 62: entpb.GroceryListShare.user:type_name -> entpb.User
	59,  // 63: entpb.GroceryListShare.grocery_list:type_name -> entpb.GroceryList
	77,  // 64: entpb.CreateGroceryListShareRequest.grocery_list_share:type_name -> entpb.GroceryListShare
	13,  // 65: entpb.GetGroceryListShareRequest.view:type_name -> entpb.GetGroceryListShareRequest.View
	77,  // 66: entpb.UpdateGroceryListShareRequest.grocery_list_share:type_name -> entpb.GroceryListShare
	14,  // 67: entpb.ListGroceryListShareRequest.view:type_name -> entpb.ListGroceryListShareRequest.View
	77,  // 68: entpb.ListGroceryListShareResponse.grocery_list_share_list:type_name -> entpb.GroceryListShare
	78,  // 69: entpb.BatchCreateGroceryListSharesRequest.requests:type_name -> entpb.CreateGroceryListShareRequest
	77,  // 70: entpb.BatchCreateGroceryListSharesResponse.grocery_list_shares:type_name -> entpb.GroceryListShare
	122, // 71: entpb.Movie.created_at:type_name -> google.protobuf.Timestamp
	95,  // 72: entpb.Movie.movie_collection:type_name -> entpb.MovieCollection
	86,  // 73: entpb.CreateMovieRequest.movie:type_name -> entpb.Movie
	15,  // 74: entpb.GetMovieRequest.view:type_name -> entpb.GetMovieRequest.View
	86,  // 75: entpb.UpdateMovieRequest.movie:type_name -> entpb.Movie
	16,  // 76: entpb.ListMovieRequest.view:type_name -> entpb.ListMovieRequest.View
	86,  // 77: entpb.ListMovieResponse.movie_list:type_name -> entpb.Movie
	87,  // 78: entpb.BatchCreateMoviesRequest.requests:type_name -> entpb.CreateMovieRequest
	86,  // 79: entpb.BatchCreateMoviesResponse.movies:type_name -> entpb.Movie
	122, // 80: entpb.MovieCollection.created_at:type_name -> google.protobuf.Timestamp
	86,  // 81: entpb.MovieCollection.movies:type_name -> entpb.Movie
	113, // 82: entpb.MovieCollection.owner:type_name -> entpb.User
	104, // 83: entpb.MovieCollection.movie_collection_shares:type_name -> entpb.MovieCollectionShare
	95,  // 84: entpb.CreateMovieCollectionRequest.movie_collection:type_name -> entpb.MovieCollection
	17,  // 85: entpb.GetMovieCollectionRequest.view:type_name -> entpb.GetMovieCollectionRequest.View
	95,  // 86: entpb.UpdateMovieCollectionRequest.movie_collection:type_name -> entpb.MovieCollection
	18,  // 87: entpb.ListMovieCollectionRequest.view:type_name -> entpb.ListMovieCollectionRequest.View
	95,  // 88: entpb.ListMovieCollectionResponse.movie_collection_list:type_name -> entpb.MovieCollection
	96,  // 89: entpb.BatchCreateMovieCollectionsRequest.requests:type_name -> entpb.CreateMovieCollectionRequest
	95,  // 90: entpb.BatchCreateMovieCollectionsResponse.movie_collections:type_name -> entpb.MovieCollection
	122, // 91: entpb.MovieCollectionShare.created_at:type_name -> google.protobuf.Timestamp
	113, // 92: entpb.MovieCollectionShare.user:type_name -> entpb.User
	95,  // 93: entpb.MovieCollectionShare.movie_collection:type_name -> entpb.MovieCollection
	104, // 94: entpb.CreateMovieCollectionShareRequest.movie_collection_share:type_name -> entpb.MovieCollectionShare
	19,  // 95: entpb.GetMovieCollectionShareRequest.view:type_name -> entpb.GetMovieCollectionShareRequest.View
	104, // 96: entpb.UpdateMovieCollectionShareRequest.movie_collection_share:type_name -> entpb.MovieCollectionShare
	20,  // 97: entpb.ListMovieCollectionShareRequest.view:type_name -> entpb.ListMovieCollectionShareRequest.View
	104, // 98: entpb.ListMovieCollectionShareResponse.movie_collection_share_list:type_name -> entpb.MovieCollectionShare
	105, // 99: entpb.BatchCreateMovieCollectionSharesRequest.requests:type_name -> entpb.CreateMovieCollectionShareRequest
	104, // 100: entpb.BatchCreateMovieCollectionSharesResponse.movie_collection_shares:type_name -> entpb.MovieCollectionShare
	122, // 101: entpb.User.last_login:type_name -> google.protobuf.Timestamp
	122, // 102: entpb.User.created_at:type_name -> google.protobuf.Timestamp
	41,  // 103: entpb.User.amazon_shares:type_name -> entpb.AmazonShare
	23,  // 104: entpb.User.amazon_lists:type_name -> entpb.AmazonList
	50,  // 105: entpb.User.drinks:type_name -> entpb.Drink
	59,  // 106: entpb.User.grocery_lists:type_name -> entpb.GroceryList
	77,  // 107: entpb.User.grocery_list_shares:type_name -> entpb.GroceryListShare
	95,  // 108: entpb.User.movie_collections:type_name -> entpb.MovieCollection
	104, // 109: entpb.User.movie_collection_shares:type_name -> entpb.MovieCollectionShare
	113, // 110: entpb.CreateUserRequest.user:type_name -> entpb.User
	21,  // 111: entpb.GetUserRequest.view:type_name -> entpb.GetUserRequest.View
	113, // 112: entpb.UpdateUserRequest.user:type_name -> entpb.User
	22,  // 113: entpb.ListUserRequest.view:type_name -> entpb.ListUserRequest.View
	113, // 114: entpb.ListUserResponse.user_list:type_name -> entpb.User
	114, // 115: entpb.BatchCreateUsersRequest.requests:type_name -> entpb.CreateUserRequest
	113, // 116: entpb.BatchCreateUsersResponse.users:type_name -> entpb.User
	24,  // 117: entpb.AmazonListService.Create:input_type -> entpb.CreateAmazonListRequest
	25,  // 118: entpb.AmazonListService.Get:input_type -> entpb.GetAmazonListRequest
	26,  // 119: entpb.AmazonListService.Update:input_type -> entpb.UpdateAmazonListRequest
	27,  // 120: entpb.AmazonListService.Delete:input_type -> entpb.DeleteAmazonListRequest
	28,  // 121: entpb.AmazonListService.List:input_type -> entpb.ListAmazonListRequest
	30,  // 122: entpb.AmazonListService.BatchCreate:input_type -> entpb.BatchCreateAmazonListsRequest
	33,  // 123: entpb.AmazonOrderService.Create:input_type -> entpb.CreateAmazonOrderRequest
	34,  // 124: entpb.AmazonOrderService.Get:input_type -> entpb.GetAmazonOrderRequest
	35,  // 125: entpb.AmazonOrderService.Update:input_type -> entpb.UpdateAmazonOrderRequest
	36,  // 126: entpb.AmazonOrderService.Delete:input_type -> entpb.DeleteAmazonOrderRequest
	37,  // 127: entpb.AmazonOrderService.List:input_type -> entpb.ListAmazonOrderRequest
	39,  // 128: entpb.AmazonOrderService.BatchCreate:input_type -> entpb.BatchCreateAmazonOrdersRequest
	42,  // 129: entpb.AmazonShareService.Create:input_type -> entpb.CreateAmazonShareRequest
	43,  // 130: entpb.AmazonShareService.Get:input_type -> entpb.GetAmazonShareRequest
	44,  // 131: entpb.AmazonShareService.Update:input_type -> entpb.UpdateAmazonShareRequest
	45,  // 132: entpb.AmazonShareService.Delete:input_type -> entpb.DeleteAmazonShareRequest
	46,  // 133: entpb.AmazonShareService.List:input_type -> entpb.ListAmazonShareRequest
	48,  // 134: entpb.AmazonShareService.BatchCreate:input_type -> entpb.BatchCreateAmazonSharesRequest
	51,  // 135: entpb.DrinkService.Create:input_type -> entpb.CreateDrinkRequest
	52,  // 136: entpb.DrinkService.Get:input_type -> entpb.GetDrinkRequest
	53,  // 137: entpb.DrinkService.Update:input_type -> entpb.UpdateDrinkRequest
	54,  // 138: entpb.DrinkService.Delete:input_type -> entpb.DeleteDrinkRequest
	55,  // 139: entpb.DrinkService.List:input_type -> entpb.ListDrinkRequest
	57,  // 140: entpb.DrinkService.BatchCreate:input_type -> entpb.BatchCreateDrinksRequest
	60,  // 141: entpb.GroceryListService.Create:input_type -> entpb.CreateGroceryListRequest
	61,  // 142: entpb.GroceryListService.Get:input_type -> entpb.GetGroceryListRequest
	62,  // 143: entpb.GroceryListService.Update:input_type -> entpb.UpdateGroceryListRequest
	63,  // 144: entpb.GroceryListService.Delete:input_type -> entpb.DeleteGroceryListRequest
	64,  // 145: entpb.GroceryListService.List:input_type -> entpb.ListGroceryListRequest
	66,  // 146: entpb.GroceryListService.BatchCreate:input_type -> entpb.BatchCreateGroceryListsRequest
	69,  // 147: entpb.GroceryListItemService.Create:input_type -> entpb.CreateGroceryListItemRequest
	70,  // 148: entpb.GroceryListItemService.Get:input_type -> entpb.GetGroceryListItemRequest
	71,  // 149: entpb.GroceryListItemService.Update:input_type -> entpb.UpdateGroceryListItemRequest
	72,  // 150: entpb.GroceryListItemService.Delete:input_type -> entpb.DeleteGroceryListItemRequest
	73,  // 151: entpb.GroceryListItemService.List:input_type -> entpb.ListGroceryListItemRequest
	75,  // 152: entpb.GroceryListItemService.BatchCreate:input_type -> entpb.BatchCreateGroceryListItemsRequest
	78,  // 153: entpb.GroceryListShareService.Create:input_type -> entpb.CreateGroceryListShareRequest
	79,  // 154: entpb.GroceryListShareService.Get:input_type -> entpb.GetGroceryListShareRequest
	80,  // 155: entpb.GroceryListShareService.Update:input_type -> entpb.UpdateGroceryListShareRequest
	81,  // 156: entpb.GroceryListShareService.Delete:input_type -> entpb.DeleteGroceryListShareRequest
	82,  // 157: entpb.GroceryListShareService.List:input_type -> entpb.ListGroceryListShareRequest
	84,  // 158: entpb.GroceryListShareService.BatchCreate:input_type -> entpb.BatchCreateGroceryListSharesRequest
	87,  // 159: entpb.MovieService.Create:input_type -> entpb.CreateMovieRequest
	88,  // 160: entpb.MovieService.Get:input_type -> entpb.GetMovieRequest
	89,  // 161: entpb.MovieService.Update:input_type -> entpb.UpdateMovieRequest
	90,  // 162: entpb.MovieService.Delete:input_type -> entpb.DeleteMovieRequest
	91,  // 163: entpb.MovieService.List:input_type -> entpb.ListMovieRequest
	93,  // 164: entpb.MovieService.BatchCreate:input_type -> entpb.BatchCreateMoviesRequest
	96,  // 165: entpb.MovieCollectionService.Create:input_type -> entpb.CreateMovieCollectionRequest
	97,  // 166: entpb.MovieCollectionService.Get:input_type -> entpb.GetMovieCollectionRequest
	98,  // 167: entpb.MovieCollectionService.Update:input_type -> entpb.UpdateMovieCollectionRequest
	99,  // 168: entpb.MovieCollectionService.Delete:input_type -> entpb.DeleteMovieCollectionRequest
	100, // 169: entpb.MovieCollectionService.List:input_type -> entpb.ListMovieCollectionRequest
	102, // 170: entpb.MovieCollectionService.BatchCreate:input_type -> entpb.BatchCreateMovieCollectionsRequest
	105, // 171: entpb.MovieCollectionShareService.Create:input_type -> entpb.CreateMovieCollectionShareRequest
	106, // 172: entpb.MovieCollectionShareService.Get:input_type -> entpb.GetMovieCollectionShareRequest
	107, // 173: entpb.MovieCollectionShareService.Update:input_type -> entpb.UpdateMovieCollectionShareRequest
	108, // 174: entpb.MovieCollectionShareService.Delete:input_type -> entpb.DeleteMovieCollectionShareRequest
	109, // 175: entpb.MovieCollectionShareService.List:input_type -> entpb.ListMovieCollectionShareRequest
	111, // 176: entpb.MovieCollectionShareService.BatchCreate:input_type -> entpb.BatchCreateMovieCollectionSharesRequest
	114, // 177: entpb.UserService.Create:input_type -> entpb.CreateUserRequest
	115, // 178: entpb.UserService.Get:input_type -> entpb.GetUserRequest
	116, // 179: entpb.UserService.Update:input_type -> entpb.UpdateUserRequest
	117, // 180: entpb.UserService.Delete:input_type -> entpb.DeleteUserRequest
	118, // 181: entpb.UserService.List:input_type -> entpb.ListUserRequest
	120, // 182: entpb.UserService.BatchCreate:input_type -> entpb.BatchCreateUsersRequest
	23,  // 183: entpb.AmazonListService.Create:output_type -> entpb.AmazonList
	23,  // 184: entpb.AmazonListService.Get:output_type -> entpb.AmazonList
	23,  // 185: entpb.AmazonListService.Update:output_type -> entpb.AmazonList
	123, // 186: entpb.AmazonListService.Delete:output_type -> google.protobuf.Empty
	29,  // 187: entpb.AmazonListService.List:output_type -> entpb.ListAmazonListResponse
	31,  // 188: entpb.AmazonListService.BatchCreate:output_type -> entpb.BatchCreateAmazonListsResponse
	32,  // 189: entpb.AmazonOrderService.Create:output_type -> entpb.AmazonOrder
	32,  // 190: entpb.AmazonOrderService.Get:output_type -> entpb.AmazonOrder
	32,  // 191: entpb.AmazonOrderService.Update:output_type -> entpb.AmazonOrder
	123, // 192: entpb.AmazonOrderService.Delete:output_type -> google.protobuf.Empty
	38,  // 193: entpb.AmazonOrderService.List:output_type -> entpb.ListAmazonOrderResponse
	40,  // 194: entpb.AmazonOrderService.BatchCreate:output_type -> entpb.BatchCreateAmazonOrdersResponse
	41,  // 195: entpb.AmazonShareService.Create:output_type -> entpb.AmazonShare
	41,  // 196: entpb.AmazonShareService.Get:output_type -> entpb.AmazonShare
	41,  // 197: entpb.AmazonShareService.Update:output_type -> entpb.AmazonShare
	123, // 198: entpb.AmazonShareService.Delete:output_type -> google.protobuf.Empty
	47,  // 199: entpb.AmazonShareService.List:output_type -> entpb.ListAmazonShareResponse
	49,  // 200: entpb.AmazonShareService.BatchCreate:output_type -> entpb.BatchCreateAmazonSharesResponse
	50,  // 201: entpb.DrinkService.Create:output_type -> entpb.Drink
	50,  // 202: entpb.DrinkService.Get:output_type -> entpb.Drink
	50,  // 203: entpb.DrinkService.Update:output_type -> entpb.Drink
	123, // 204: entpb.DrinkService.Delete:output_type -> google.protobuf.Empty
	56,  // 205: entpb.DrinkService.List:output_type -> entpb.ListDrinkResponse
	58,  // 206: entpb.DrinkService.BatchCreate:output_type -> entpb.BatchCreateDrinksResponse
	59,  // 207: entpb.GroceryListService.Create:output_type -> entpb.GroceryList
	59,  // 208: entpb.GroceryListService.Get:output_type -> entpb.GroceryList
	59,  // 209: entpb.GroceryListService.Update:output_type -> entpb.GroceryList
	123, // 210: entpb.GroceryListService.Delete:output_type -> google.protobuf.Empty
	65,  // 211: entpb.GroceryListService.List:output_type -> entpb.ListGroceryListResponse
	67,  // 212: entpb.GroceryListService.BatchCreate:output_type -> entpb.BatchCreateGroceryListsResponse
	68,  // 213: entpb.GroceryListItemService.Create:output_type -> entpb.GroceryListItem
	68,  // 214: entpb.GroceryListItemService.Get:output_type -> entpb.GroceryListItem
	68,  // 215: entpb.GroceryListItemService.Update:output_type -> entpb.GroceryListItem
	123, // 216: entpb.GroceryListItemService.Delete:output_type -> google.protobuf.Empty
	74,  // 217: entpb.GroceryListItemService.List:output_type -> entpb.ListGroceryListItemResponse
	76,  // 218: entpb.GroceryListItemService.BatchCreate:output_type -> entpb.BatchCreateGroceryListItemsResponse
	77,  // 219: entpb.GroceryListShareService.Create:output_type -> entpb.GroceryListShare
	77,  // 220: entpb.GroceryListShareService.Get:output_type -> entpb.GroceryListShare
	77,  // 221: entpb.GroceryListShareService.Update:output_type -> entpb.GroceryListShare
	123, // 222: entpb.GroceryListShareService.Delete:output_type -> google.protobuf.Empty
	83,  // 223: entpb.GroceryListShareService.List:output_type -> entpb.ListGroceryListShareResponse
	85,  // 224: entpb.GroceryListShareService.BatchCreate:output_type -> entpb.BatchCreateGroceryListSharesResponse
	86,  // 225: entpb.MovieService.Create:output_type -> entpb.Movie
	86,  // 226: entpb.MovieService.Get:output_type -> entpb.Movie
	86,  // 227: entpb.MovieService.Update:output_type -> entpb.Movie
	123, // 228: entpb.MovieService.Delete:output_type -> google.protobuf.Empty
	92,  // 229: entpb.MovieService.List:output_type -> entpb.ListMovieResponse
	94,  // 230: entpb.MovieService.BatchCreate:output_type -> entpb.BatchCreateMoviesResponse
	95,  // 231: entpb.MovieCollectionService.Create:output_type -> entpb.MovieCollection
	95,  // 232: entpb.MovieCollectionService.Get:output_type -> entpb.MovieCollection
	95,  // 233: entpb.MovieCollectionService.Update:output_type -> entpb.MovieCollection
	123, // 234: entpb.MovieCollectionService.Delete:output_type -> google.protobuf.Empty
	101, // 235: entpb.MovieCollectionService.List:output_type -> entpb.ListMovieCollectionResponse
	103, // 236: entpb.MovieCollectionService.BatchCreate:output_type -> entpb.BatchCreateMovieCollectionsResponse
	104, // 237: entpb.MovieCollectionShareService.Create:output_type -> entpb.MovieCollectionShare
	104, // 238: entpb.MovieCollectionShareService.Get:output_type -> entpb.MovieCollectionShare
	104, // 239: entpb.MovieCollectionShareService.Update:output_type -> entpb.MovieCollectionShare
	123, // 240: entpb.MovieCollectionShareService.Delete:output_type -> google.protobuf.Empty
	110, // 241: entpb.MovieCollectionShareService.List:output_type -> entpb.ListMovieCollectionShareResponse
	112, // 242: entpb.MovieCollectionShareService.BatchCreate:output_type -> entpb.BatchCreateMovieCollectionSharesResponse
	113, // 243: entpb.UserService.Create:output_type -> entpb.User
	113, // 244: entpb.UserService.Get:output_type -> entpb.User
	113, // 245: entpb.UserService.Update:output_type -> entpb.User
	123, // 246: entpb.UserService.Delete:output_type -> google.protobuf.Empty
	119, // 247: entpb.UserService.List:output_type -> entpb.ListUserResponse
	121, // 248: entpb.UserService.BatchCreate:output_type -> entpb.BatchCreateUsersResponse
	183, // [183:249] is the sub-list for method output_type
	117, // [117:183] is the sub-list for method input_type
	117, // [117:117] is the sub-list for extension type_name
	117, // [117:117] is the sub-list for extension extendee
	0,   // [0:117] is the sub-list for field type_name
}

func init() { file_entpb_entpb_proto_init() }
func file_entpb_entpb_proto_init() {
	if File_entpb_entpb_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_entpb_entpb_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AmazonList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entpb_entpb_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAmazonListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entpb_entpb_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAmazonListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entpb_entpb_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAmazonListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entpb_entpb_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAmazonListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entpb_entpb_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAmazonListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entpb_entpb_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAmazonListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entpb_entpb_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchCreateAmazonListsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entpb_entpb_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchCreateAmazonListsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entpb_entpb_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AmazonOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entpb_entpb_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAmazonOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entpb_entpb_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAmazonOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entpb_entpb_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAmazonOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entpb_entpb_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAmazonOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entpb_entpb_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAmazonOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entpb_entpb_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAmazonOrderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entpb_entpb_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchCreateAmazonOrdersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entpb_entpb_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchCreateAmazonOrdersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entpb_entpb_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AmazonShare); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entpb_entpb_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAmazonShareRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entpb_entpb_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAmazonShareRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entpb_entpb_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAmazonShareRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entpb_entpb_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAmazonShareRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entpb_entpb_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAmazonShareRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entpb_entpb_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAmazonShareResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entpb_entpb_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchCreateAmazonSharesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entpb_entpb_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchCreateAmazonSharesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entpb_entpb_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Drink); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entpb_entpb_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDrinkRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entpb_entpb_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDrinkRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entpb_entpb_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDrinkRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entpb_entpb_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteDrinkRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entpb_entpb_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDrinkRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entpb_entpb_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDrinkResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entpb_entpb_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchCreateDrinksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entpb_entpb_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchCreateDrinksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entpb_entpb_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroceryList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entpb_entpb_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGroceryListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entpb_entpb_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroceryListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entpb_entpb_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateGroceryListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entpb_entpb_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteGroceryListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entpb_entpb_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListGroceryListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entpb_entpb_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListGroceryListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entpb_entpb_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchCreateGroceryListsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entpb_entpb_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchCreateGroceryListsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entpb_entpb_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroceryListItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entpb_entpb_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGroceryListItemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entpb_entpb_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroceryListItemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entpb_entpb_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateGroceryListItemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entpb_entpb_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteGroceryListItemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entpb_entpb_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListGroceryListItemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entpb_entpb_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListGroceryListItemResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entpb_entpb_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchCreateGroceryListItemsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entpb_entpb_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchCreateGroceryListItemsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entpb_entpb_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroceryListShare); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entpb_entpb_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGroceryListShareRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entpb_entpb_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroceryListShareRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entpb_entpb_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateGroceryListShareRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entpb_entpb_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteGroceryListShareRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entpb_entpb_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListGroceryListShareRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entpb_entpb_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListGroceryListShareResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entpb_entpb_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchCreateGroceryListSharesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entpb_entpb_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchCreateGroceryListSharesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entpb_entpb_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Movie); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entpb_entpb_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMovieRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entpb_entpb_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMovieRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entpb_entpb_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMovieRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entpb_entpb_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMovieRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entpb_entpb_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMovieRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entpb_entpb_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMovieResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entpb_entpb_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchCreateMoviesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entpb_entpb_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchCreateMoviesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entpb_entpb_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MovieCollection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entpb_entpb_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMovieCollectionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entpb_entpb_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMovieCollectionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entpb_entpb_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMovieCollectionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entpb_entpb_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMovieCollectionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entpb_entpb_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMovieCollectionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entpb_entpb_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMovieCollectionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entpb_entpb_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchCreateMovieCollectionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entpb_entpb_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchCreateMovieCollectionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entpb_entpb_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MovieCollectionShare); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entpb_entpb_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMovieCollectionShareRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entpb_entpb_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMovieCollectionShareRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entpb_entpb_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMovieCollectionShareRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entpb_entpb_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMovieCollectionShareRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entpb_entpb_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMovieCollectionShareRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entpb_entpb_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMovieCollectionShareResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entpb_entpb_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchCreateMovieCollectionSharesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entpb_entpb_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchCreateMovieCollectionSharesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entpb_entpb_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entpb_entpb_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entpb_entpb_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entpb_entpb_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entpb_entpb_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entpb_entpb_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entpb_entpb_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entpb_entpb_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchCreateUsersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entpb_entpb_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchCreateUsersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_entpb_entpb_proto_rawDesc,
			NumEnums:      23,
			NumMessages:   99,
			NumExtensions: 0,
			NumServices:   11,
		},
		GoTypes:           file_entpb_entpb_proto_goTypes,
		DependencyIndexes: file_entpb_entpb_proto_depIdxs,
		EnumInfos:         file_entpb_entpb_proto_enumTypes,
		MessageInfos:      file_entpb_entpb_proto_msgTypes,
	}.Build()
	File_entpb_entpb_proto = out.File
	file_entpb_entpb_proto_rawDesc = nil
	file_entpb_entpb_proto_goTypes = nil
	file_entpb_entpb_proto_depIdxs = nil
}
